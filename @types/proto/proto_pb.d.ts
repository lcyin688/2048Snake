
// import * as $protobuf from "protobufjs";
/** Namespace pb. */
declare namespace pb {

    /** Properties of a C2SLogoffAccount. */
    interface IC2SLogoffAccount {

        /** C2SLogoffAccount name */
        name?: (string|null);

        /** C2SLogoffAccount idNum */
        idNum?: (string|null);
    }

    /** Represents a C2SLogoffAccount. */
    class C2SLogoffAccount implements IC2SLogoffAccount {

        /**
         * Constructs a new C2SLogoffAccount.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SLogoffAccount);

        /** C2SLogoffAccount name. */
        public name: string;

        /** C2SLogoffAccount idNum. */
        public idNum: string;

        /**
         * Creates a new C2SLogoffAccount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SLogoffAccount instance
         */
        public static create(properties?: pb.IC2SLogoffAccount): pb.C2SLogoffAccount;

        /**
         * Encodes the specified C2SLogoffAccount message. Does not implicitly {@link pb.C2SLogoffAccount.verify|verify} messages.
         * @param message C2SLogoffAccount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SLogoffAccount, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SLogoffAccount message, length delimited. Does not implicitly {@link pb.C2SLogoffAccount.verify|verify} messages.
         * @param message C2SLogoffAccount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SLogoffAccount, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SLogoffAccount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SLogoffAccount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SLogoffAccount;

        /**
         * Decodes a C2SLogoffAccount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SLogoffAccount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SLogoffAccount;

        /**
         * Verifies a C2SLogoffAccount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SLogoffAccount message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SLogoffAccount
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SLogoffAccount;

        /**
         * Creates a plain object from a C2SLogoffAccount message. Also converts values to other types if specified.
         * @param message C2SLogoffAccount
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SLogoffAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SLogoffAccount to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SUnLogoffAccount. */
    interface IC2SUnLogoffAccount {
    }

    /** Represents a C2SUnLogoffAccount. */
    class C2SUnLogoffAccount implements IC2SUnLogoffAccount {

        /**
         * Constructs a new C2SUnLogoffAccount.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SUnLogoffAccount);

        /**
         * Creates a new C2SUnLogoffAccount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SUnLogoffAccount instance
         */
        public static create(properties?: pb.IC2SUnLogoffAccount): pb.C2SUnLogoffAccount;

        /**
         * Encodes the specified C2SUnLogoffAccount message. Does not implicitly {@link pb.C2SUnLogoffAccount.verify|verify} messages.
         * @param message C2SUnLogoffAccount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SUnLogoffAccount, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SUnLogoffAccount message, length delimited. Does not implicitly {@link pb.C2SUnLogoffAccount.verify|verify} messages.
         * @param message C2SUnLogoffAccount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SUnLogoffAccount, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SUnLogoffAccount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SUnLogoffAccount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SUnLogoffAccount;

        /**
         * Decodes a C2SUnLogoffAccount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SUnLogoffAccount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SUnLogoffAccount;

        /**
         * Verifies a C2SUnLogoffAccount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SUnLogoffAccount message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SUnLogoffAccount
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SUnLogoffAccount;

        /**
         * Creates a plain object from a C2SUnLogoffAccount message. Also converts values to other types if specified.
         * @param message C2SUnLogoffAccount
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SUnLogoffAccount, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SUnLogoffAccount to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SASKAchievData. */
    interface IC2SASKAchievData {
    }

    /** Represents a C2SASKAchievData. */
    class C2SASKAchievData implements IC2SASKAchievData {

        /**
         * Constructs a new C2SASKAchievData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SASKAchievData);

        /**
         * Creates a new C2SASKAchievData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SASKAchievData instance
         */
        public static create(properties?: pb.IC2SASKAchievData): pb.C2SASKAchievData;

        /**
         * Encodes the specified C2SASKAchievData message. Does not implicitly {@link pb.C2SASKAchievData.verify|verify} messages.
         * @param message C2SASKAchievData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SASKAchievData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SASKAchievData message, length delimited. Does not implicitly {@link pb.C2SASKAchievData.verify|verify} messages.
         * @param message C2SASKAchievData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SASKAchievData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SASKAchievData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SASKAchievData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SASKAchievData;

        /**
         * Decodes a C2SASKAchievData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SASKAchievData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SASKAchievData;

        /**
         * Verifies a C2SASKAchievData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SASKAchievData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SASKAchievData
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SASKAchievData;

        /**
         * Creates a plain object from a C2SASKAchievData message. Also converts values to other types if specified.
         * @param message C2SASKAchievData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SASKAchievData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SASKAchievData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CReplyAchiev. */
    interface IS2CReplyAchiev {

        /** S2CReplyAchiev achievs */
        achievs?: (pb.IAchievData[]|null);
    }

    /** Represents a S2CReplyAchiev. */
    class S2CReplyAchiev implements IS2CReplyAchiev {

        /**
         * Constructs a new S2CReplyAchiev.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CReplyAchiev);

        /** S2CReplyAchiev achievs. */
        public achievs: pb.IAchievData[];

        /**
         * Creates a new S2CReplyAchiev instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CReplyAchiev instance
         */
        public static create(properties?: pb.IS2CReplyAchiev): pb.S2CReplyAchiev;

        /**
         * Encodes the specified S2CReplyAchiev message. Does not implicitly {@link pb.S2CReplyAchiev.verify|verify} messages.
         * @param message S2CReplyAchiev message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CReplyAchiev, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CReplyAchiev message, length delimited. Does not implicitly {@link pb.S2CReplyAchiev.verify|verify} messages.
         * @param message S2CReplyAchiev message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CReplyAchiev, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CReplyAchiev message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CReplyAchiev
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CReplyAchiev;

        /**
         * Decodes a S2CReplyAchiev message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CReplyAchiev
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CReplyAchiev;

        /**
         * Verifies a S2CReplyAchiev message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CReplyAchiev message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CReplyAchiev
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CReplyAchiev;

        /**
         * Creates a plain object from a S2CReplyAchiev message. Also converts values to other types if specified.
         * @param message S2CReplyAchiev
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CReplyAchiev, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CReplyAchiev to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SAchievReward. */
    interface IC2SAchievReward {

        /** C2SAchievReward id */
        id?: (number|null);
    }

    /** Represents a C2SAchievReward. */
    class C2SAchievReward implements IC2SAchievReward {

        /**
         * Constructs a new C2SAchievReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SAchievReward);

        /** C2SAchievReward id. */
        public id: number;

        /**
         * Creates a new C2SAchievReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SAchievReward instance
         */
        public static create(properties?: pb.IC2SAchievReward): pb.C2SAchievReward;

        /**
         * Encodes the specified C2SAchievReward message. Does not implicitly {@link pb.C2SAchievReward.verify|verify} messages.
         * @param message C2SAchievReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SAchievReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SAchievReward message, length delimited. Does not implicitly {@link pb.C2SAchievReward.verify|verify} messages.
         * @param message C2SAchievReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SAchievReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SAchievReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SAchievReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SAchievReward;

        /**
         * Decodes a C2SAchievReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SAchievReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SAchievReward;

        /**
         * Verifies a C2SAchievReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SAchievReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SAchievReward
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SAchievReward;

        /**
         * Creates a plain object from a C2SAchievReward message. Also converts values to other types if specified.
         * @param message C2SAchievReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SAchievReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SAchievReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CAchievReward. */
    interface IS2CAchievReward {

        /** S2CAchievReward id */
        id?: (number|null);

        /** S2CAchievReward state */
        state?: (number|null);

        /** S2CAchievReward newStage */
        newStage?: (number|null);
    }

    /** Represents a S2CAchievReward. */
    class S2CAchievReward implements IS2CAchievReward {

        /**
         * Constructs a new S2CAchievReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CAchievReward);

        /** S2CAchievReward id. */
        public id: number;

        /** S2CAchievReward state. */
        public state: number;

        /** S2CAchievReward newStage. */
        public newStage: number;

        /**
         * Creates a new S2CAchievReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CAchievReward instance
         */
        public static create(properties?: pb.IS2CAchievReward): pb.S2CAchievReward;

        /**
         * Encodes the specified S2CAchievReward message. Does not implicitly {@link pb.S2CAchievReward.verify|verify} messages.
         * @param message S2CAchievReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CAchievReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CAchievReward message, length delimited. Does not implicitly {@link pb.S2CAchievReward.verify|verify} messages.
         * @param message S2CAchievReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CAchievReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CAchievReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CAchievReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CAchievReward;

        /**
         * Decodes a S2CAchievReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CAchievReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CAchievReward;

        /**
         * Verifies a S2CAchievReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CAchievReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CAchievReward
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CAchievReward;

        /**
         * Creates a plain object from a S2CAchievReward message. Also converts values to other types if specified.
         * @param message S2CAchievReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CAchievReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CAchievReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SAchievCfg. */
    interface IC2SAchievCfg {
    }

    /** Represents a C2SAchievCfg. */
    class C2SAchievCfg implements IC2SAchievCfg {

        /**
         * Constructs a new C2SAchievCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SAchievCfg);

        /**
         * Creates a new C2SAchievCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SAchievCfg instance
         */
        public static create(properties?: pb.IC2SAchievCfg): pb.C2SAchievCfg;

        /**
         * Encodes the specified C2SAchievCfg message. Does not implicitly {@link pb.C2SAchievCfg.verify|verify} messages.
         * @param message C2SAchievCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SAchievCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SAchievCfg message, length delimited. Does not implicitly {@link pb.C2SAchievCfg.verify|verify} messages.
         * @param message C2SAchievCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SAchievCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SAchievCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SAchievCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SAchievCfg;

        /**
         * Decodes a C2SAchievCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SAchievCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SAchievCfg;

        /**
         * Verifies a C2SAchievCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SAchievCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SAchievCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SAchievCfg;

        /**
         * Creates a plain object from a C2SAchievCfg message. Also converts values to other types if specified.
         * @param message C2SAchievCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SAchievCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SAchievCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CAchievCfg. */
    interface IS2CAchievCfg {

        /** S2CAchievCfg cfg */
        cfg?: ({ [k: string]: pb.IAchievCfg }|null);
    }

    /** Represents a S2CAchievCfg. */
    class S2CAchievCfg implements IS2CAchievCfg {

        /**
         * Constructs a new S2CAchievCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CAchievCfg);

        /** S2CAchievCfg cfg. */
        public cfg: { [k: string]: pb.IAchievCfg };

        /**
         * Creates a new S2CAchievCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CAchievCfg instance
         */
        public static create(properties?: pb.IS2CAchievCfg): pb.S2CAchievCfg;

        /**
         * Encodes the specified S2CAchievCfg message. Does not implicitly {@link pb.S2CAchievCfg.verify|verify} messages.
         * @param message S2CAchievCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CAchievCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CAchievCfg message, length delimited. Does not implicitly {@link pb.S2CAchievCfg.verify|verify} messages.
         * @param message S2CAchievCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CAchievCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CAchievCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CAchievCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CAchievCfg;

        /**
         * Decodes a S2CAchievCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CAchievCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CAchievCfg;

        /**
         * Verifies a S2CAchievCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CAchievCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CAchievCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CAchievCfg;

        /**
         * Creates a plain object from a S2CAchievCfg message. Also converts values to other types if specified.
         * @param message S2CAchievCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CAchievCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CAchievCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AchievData. */
    interface IAchievData {

        /** AchievData id */
        id?: (number|null);

        /** AchievData val */
        val?: (number|null);

        /** AchievData state */
        state?: (number|null);
    }

    /** Represents an AchievData. */
    class AchievData implements IAchievData {

        /**
         * Constructs a new AchievData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAchievData);

        /** AchievData id. */
        public id: number;

        /** AchievData val. */
        public val: number;

        /** AchievData state. */
        public state: number;

        /**
         * Creates a new AchievData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AchievData instance
         */
        public static create(properties?: pb.IAchievData): pb.AchievData;

        /**
         * Encodes the specified AchievData message. Does not implicitly {@link pb.AchievData.verify|verify} messages.
         * @param message AchievData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAchievData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AchievData message, length delimited. Does not implicitly {@link pb.AchievData.verify|verify} messages.
         * @param message AchievData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAchievData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AchievData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AchievData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.AchievData;

        /**
         * Decodes an AchievData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AchievData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.AchievData;

        /**
         * Verifies an AchievData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AchievData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AchievData
         */
        public static fromObject(object: { [k: string]: any }): pb.AchievData;

        /**
         * Creates a plain object from an AchievData message. Also converts values to other types if specified.
         * @param message AchievData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.AchievData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AchievData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AchievCfg. */
    interface IAchievCfg {

        /** AchievCfg id */
        id?: (number|null);

        /** AchievCfg title */
        title?: (string|null);

        /** AchievCfg reward */
        reward?: (pb.IId2Val[]|null);

        /** AchievCfg buttomInfo */
        buttomInfo?: (string|null);

        /** AchievCfg rewardType */
        rewardType?: (number|null);

        /** AchievCfg targetVal */
        targetVal?: (number|null);
    }

    /** Represents an AchievCfg. */
    class AchievCfg implements IAchievCfg {

        /**
         * Constructs a new AchievCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAchievCfg);

        /** AchievCfg id. */
        public id: number;

        /** AchievCfg title. */
        public title: string;

        /** AchievCfg reward. */
        public reward: pb.IId2Val[];

        /** AchievCfg buttomInfo. */
        public buttomInfo: string;

        /** AchievCfg rewardType. */
        public rewardType: number;

        /** AchievCfg targetVal. */
        public targetVal: number;

        /**
         * Creates a new AchievCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AchievCfg instance
         */
        public static create(properties?: pb.IAchievCfg): pb.AchievCfg;

        /**
         * Encodes the specified AchievCfg message. Does not implicitly {@link pb.AchievCfg.verify|verify} messages.
         * @param message AchievCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAchievCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AchievCfg message, length delimited. Does not implicitly {@link pb.AchievCfg.verify|verify} messages.
         * @param message AchievCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAchievCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AchievCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AchievCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.AchievCfg;

        /**
         * Decodes an AchievCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AchievCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.AchievCfg;

        /**
         * Verifies an AchievCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AchievCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AchievCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.AchievCfg;

        /**
         * Creates a plain object from an AchievCfg message. Also converts values to other types if specified.
         * @param message AchievCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.AchievCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AchievCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** AchievTargetType enum. */
    enum AchievTargetType {
        AchievTarget_UnDef = 0,
        AchievTarget_PlayCount = 1,
        AchievTarget_ChunTian = 2,
        AchievTarget_FanChun = 3,
        AchievTarget_ZhaDan = 4,
        AchievTarget_LianSheng = 5,
        AchievTarget_Gang = 6,
        AchievTarget_LvyiSe = 7,
        AchievTarget_ShouZhongBaoYi = 8,
        AchievTarget_QuanXiao = 9,
        AchievTarget_QuanZhong = 10,
        AchievTarget_QuanDa = 11,
        AchievTarget_LongQiDui = 12,
        AchievTarget_QuanDaiWu = 13,
        AchievTarget_SiAnke = 14,
        AchievTarget_JiuLianBaoDeng = 15,
        AchievTarget_ShuangLongQiDui = 16,
        AchievTarget_LianQidui = 17,
        AchievTarget_QuanYaoJiu = 18,
        AchievTarget_ShiBaLuoHan = 19,
        AchievTarget_YiSeShuangLongHui = 20,
        AchievTarget_TianHu = 21,
        AchievTarget_DiHu = 22,
        AchievTarget_SanLongQiDui = 23,
        AchievTarget_FeiJi = 24,
        AchievTarget_Mul64More = 25
    }

    /** AchievLoop enum. */
    enum AchievLoop {
        AchievLoop_UnDef = 0,
        AchievLoop_MeiRi = 1,
        AchievLoop_XunHuan = 2
    }

    /** AchievReward enum. */
    enum AchievReward {
        AchievReward_UnDef = 0,
        AchievReward_RandVal = 1,
        AchievReward_Conf = 2
    }

    /** Properties of an Id2Val. */
    interface IId2Val {

        /** Id2Val key */
        key?: (number|null);

        /** Id2Val value */
        value?: (number|Long|null);
    }

    /** Represents an Id2Val. */
    class Id2Val implements IId2Val {

        /**
         * Constructs a new Id2Val.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IId2Val);

        /** Id2Val key. */
        public key: number;

        /** Id2Val value. */
        public value: (number|Long);

        /**
         * Creates a new Id2Val instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Id2Val instance
         */
        public static create(properties?: pb.IId2Val): pb.Id2Val;

        /**
         * Encodes the specified Id2Val message. Does not implicitly {@link pb.Id2Val.verify|verify} messages.
         * @param message Id2Val message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IId2Val, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Id2Val message, length delimited. Does not implicitly {@link pb.Id2Val.verify|verify} messages.
         * @param message Id2Val message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IId2Val, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Id2Val message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Id2Val
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.Id2Val;

        /**
         * Decodes an Id2Val message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Id2Val
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.Id2Val;

        /**
         * Verifies an Id2Val message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Id2Val message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Id2Val
         */
        public static fromObject(object: { [k: string]: any }): pb.Id2Val;

        /**
         * Creates a plain object from an Id2Val message. Also converts values to other types if specified.
         * @param message Id2Val
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.Id2Val, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Id2Val to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ValRange. */
    interface IValRange {

        /** ValRange first */
        first?: (number|Long|null);

        /** ValRange second */
        second?: (number|Long|null);
    }

    /** Represents a ValRange. */
    class ValRange implements IValRange {

        /**
         * Constructs a new ValRange.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IValRange);

        /** ValRange first. */
        public first: (number|Long);

        /** ValRange second. */
        public second: (number|Long);

        /**
         * Creates a new ValRange instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ValRange instance
         */
        public static create(properties?: pb.IValRange): pb.ValRange;

        /**
         * Encodes the specified ValRange message. Does not implicitly {@link pb.ValRange.verify|verify} messages.
         * @param message ValRange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IValRange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ValRange message, length delimited. Does not implicitly {@link pb.ValRange.verify|verify} messages.
         * @param message ValRange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IValRange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ValRange message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ValRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ValRange;

        /**
         * Decodes a ValRange message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ValRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ValRange;

        /**
         * Verifies a ValRange message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ValRange message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ValRange
         */
        public static fromObject(object: { [k: string]: any }): pb.ValRange;

        /**
         * Creates a plain object from a ValRange message. Also converts values to other types if specified.
         * @param message ValRange
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ValRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ValRange to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityInfo. */
    interface IActivityInfo {

        /** ActivityInfo id */
        id?: (number|null);

        /** ActivityInfo type */
        type?: (number|null);

        /** ActivityInfo icon */
        icon?: (string|null);
    }

    /** Represents an ActivityInfo. */
    class ActivityInfo implements IActivityInfo {

        /**
         * Constructs a new ActivityInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IActivityInfo);

        /** ActivityInfo id. */
        public id: number;

        /** ActivityInfo type. */
        public type: number;

        /** ActivityInfo icon. */
        public icon: string;

        /**
         * Creates a new ActivityInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityInfo instance
         */
        public static create(properties?: pb.IActivityInfo): pb.ActivityInfo;

        /**
         * Encodes the specified ActivityInfo message. Does not implicitly {@link pb.ActivityInfo.verify|verify} messages.
         * @param message ActivityInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IActivityInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityInfo message, length delimited. Does not implicitly {@link pb.ActivityInfo.verify|verify} messages.
         * @param message ActivityInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IActivityInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ActivityInfo;

        /**
         * Decodes an ActivityInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ActivityInfo;

        /**
         * Verifies an ActivityInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.ActivityInfo;

        /**
         * Creates a plain object from an ActivityInfo message. Also converts values to other types if specified.
         * @param message ActivityInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ActivityInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SActivityInfo. */
    interface IC2SActivityInfo {
    }

    /** Represents a C2SActivityInfo. */
    class C2SActivityInfo implements IC2SActivityInfo {

        /**
         * Constructs a new C2SActivityInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SActivityInfo);

        /**
         * Creates a new C2SActivityInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SActivityInfo instance
         */
        public static create(properties?: pb.IC2SActivityInfo): pb.C2SActivityInfo;

        /**
         * Encodes the specified C2SActivityInfo message. Does not implicitly {@link pb.C2SActivityInfo.verify|verify} messages.
         * @param message C2SActivityInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SActivityInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SActivityInfo message, length delimited. Does not implicitly {@link pb.C2SActivityInfo.verify|verify} messages.
         * @param message C2SActivityInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SActivityInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SActivityInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SActivityInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SActivityInfo;

        /**
         * Decodes a C2SActivityInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SActivityInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SActivityInfo;

        /**
         * Verifies a C2SActivityInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SActivityInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SActivityInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SActivityInfo;

        /**
         * Creates a plain object from a C2SActivityInfo message. Also converts values to other types if specified.
         * @param message C2SActivityInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SActivityInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SActivityInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CActivityInfo. */
    interface IS2CActivityInfo {

        /** S2CActivityInfo data */
        data?: (pb.IActivityInfo[]|null);
    }

    /** Represents a S2CActivityInfo. */
    class S2CActivityInfo implements IS2CActivityInfo {

        /**
         * Constructs a new S2CActivityInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CActivityInfo);

        /** S2CActivityInfo data. */
        public data: pb.IActivityInfo[];

        /**
         * Creates a new S2CActivityInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CActivityInfo instance
         */
        public static create(properties?: pb.IS2CActivityInfo): pb.S2CActivityInfo;

        /**
         * Encodes the specified S2CActivityInfo message. Does not implicitly {@link pb.S2CActivityInfo.verify|verify} messages.
         * @param message S2CActivityInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CActivityInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CActivityInfo message, length delimited. Does not implicitly {@link pb.S2CActivityInfo.verify|verify} messages.
         * @param message S2CActivityInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CActivityInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CActivityInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CActivityInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CActivityInfo;

        /**
         * Decodes a S2CActivityInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CActivityInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CActivityInfo;

        /**
         * Verifies a S2CActivityInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CActivityInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CActivityInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CActivityInfo;

        /**
         * Creates a plain object from a S2CActivityInfo message. Also converts values to other types if specified.
         * @param message S2CActivityInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CActivityInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CActivityInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SActivityData. */
    interface IC2SActivityData {

        /** C2SActivityData id */
        id?: (number|null);
    }

    /** Represents a C2SActivityData. */
    class C2SActivityData implements IC2SActivityData {

        /**
         * Constructs a new C2SActivityData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SActivityData);

        /** C2SActivityData id. */
        public id: number;

        /**
         * Creates a new C2SActivityData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SActivityData instance
         */
        public static create(properties?: pb.IC2SActivityData): pb.C2SActivityData;

        /**
         * Encodes the specified C2SActivityData message. Does not implicitly {@link pb.C2SActivityData.verify|verify} messages.
         * @param message C2SActivityData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SActivityData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SActivityData message, length delimited. Does not implicitly {@link pb.C2SActivityData.verify|verify} messages.
         * @param message C2SActivityData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SActivityData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SActivityData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SActivityData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SActivityData;

        /**
         * Decodes a C2SActivityData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SActivityData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SActivityData;

        /**
         * Verifies a C2SActivityData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SActivityData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SActivityData
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SActivityData;

        /**
         * Creates a plain object from a C2SActivityData message. Also converts values to other types if specified.
         * @param message C2SActivityData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SActivityData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SActivityData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ActivityData. */
    interface IActivityData {

        /** ActivityData id */
        id?: (number|null);

        /** ActivityData cfg */
        cfg?: (pb.IActivityCfg|null);
    }

    /** Represents an ActivityData. */
    class ActivityData implements IActivityData {

        /**
         * Constructs a new ActivityData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IActivityData);

        /** ActivityData id. */
        public id: number;

        /** ActivityData cfg. */
        public cfg?: (pb.IActivityCfg|null);

        /**
         * Creates a new ActivityData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityData instance
         */
        public static create(properties?: pb.IActivityData): pb.ActivityData;

        /**
         * Encodes the specified ActivityData message. Does not implicitly {@link pb.ActivityData.verify|verify} messages.
         * @param message ActivityData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IActivityData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityData message, length delimited. Does not implicitly {@link pb.ActivityData.verify|verify} messages.
         * @param message ActivityData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IActivityData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ActivityData;

        /**
         * Decodes an ActivityData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ActivityData;

        /**
         * Verifies an ActivityData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityData
         */
        public static fromObject(object: { [k: string]: any }): pb.ActivityData;

        /**
         * Creates a plain object from an ActivityData message. Also converts values to other types if specified.
         * @param message ActivityData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ActivityData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CActivityData. */
    interface IS2CActivityData {

        /** S2CActivityData data */
        data?: (pb.IActivityData[]|null);
    }

    /** Represents a S2CActivityData. */
    class S2CActivityData implements IS2CActivityData {

        /**
         * Constructs a new S2CActivityData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CActivityData);

        /** S2CActivityData data. */
        public data: pb.IActivityData[];

        /**
         * Creates a new S2CActivityData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CActivityData instance
         */
        public static create(properties?: pb.IS2CActivityData): pb.S2CActivityData;

        /**
         * Encodes the specified S2CActivityData message. Does not implicitly {@link pb.S2CActivityData.verify|verify} messages.
         * @param message S2CActivityData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CActivityData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CActivityData message, length delimited. Does not implicitly {@link pb.S2CActivityData.verify|verify} messages.
         * @param message S2CActivityData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CActivityData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CActivityData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CActivityData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CActivityData;

        /**
         * Decodes a S2CActivityData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CActivityData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CActivityData;

        /**
         * Verifies a S2CActivityData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CActivityData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CActivityData
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CActivityData;

        /**
         * Creates a plain object from a S2CActivityData message. Also converts values to other types if specified.
         * @param message S2CActivityData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CActivityData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CActivityData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** ActOption enum. */
    enum ActOption {
        ActOpt_Null = 0,
        ActOpt_Free = 1,
        ActOpt_Advert = 2,
        ActOpt_GetReward = 3
    }

    /** Properties of a C2SDoActivity. */
    interface IC2SDoActivity {

        /** C2SDoActivity id */
        id?: (number|null);

        /** C2SDoActivity subId */
        subId?: (number|null);

        /** C2SDoActivity opType */
        opType?: (pb.ActOption|null);
    }

    /** Represents a C2SDoActivity. */
    class C2SDoActivity implements IC2SDoActivity {

        /**
         * Constructs a new C2SDoActivity.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SDoActivity);

        /** C2SDoActivity id. */
        public id: number;

        /** C2SDoActivity subId. */
        public subId: number;

        /** C2SDoActivity opType. */
        public opType: pb.ActOption;

        /**
         * Creates a new C2SDoActivity instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SDoActivity instance
         */
        public static create(properties?: pb.IC2SDoActivity): pb.C2SDoActivity;

        /**
         * Encodes the specified C2SDoActivity message. Does not implicitly {@link pb.C2SDoActivity.verify|verify} messages.
         * @param message C2SDoActivity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SDoActivity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SDoActivity message, length delimited. Does not implicitly {@link pb.C2SDoActivity.verify|verify} messages.
         * @param message C2SDoActivity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SDoActivity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SDoActivity message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SDoActivity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SDoActivity;

        /**
         * Decodes a C2SDoActivity message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SDoActivity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SDoActivity;

        /**
         * Verifies a C2SDoActivity message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SDoActivity message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SDoActivity
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SDoActivity;

        /**
         * Creates a plain object from a C2SDoActivity message. Also converts values to other types if specified.
         * @param message C2SDoActivity
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SDoActivity, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SDoActivity to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDoActivity. */
    interface IS2CDoActivity {

        /** S2CDoActivity ec */
        ec?: (number|null);

        /** S2CDoActivity id */
        id?: (number|null);

        /** S2CDoActivity aType */
        aType?: (pb.ActivityType|null);

        /** S2CDoActivity subId */
        subId?: (number|null);

        /** S2CDoActivity reward */
        reward?: (pb.IItem[]|null);
    }

    /** Represents a S2CDoActivity. */
    class S2CDoActivity implements IS2CDoActivity {

        /**
         * Constructs a new S2CDoActivity.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDoActivity);

        /** S2CDoActivity ec. */
        public ec: number;

        /** S2CDoActivity id. */
        public id: number;

        /** S2CDoActivity aType. */
        public aType: pb.ActivityType;

        /** S2CDoActivity subId. */
        public subId: number;

        /** S2CDoActivity reward. */
        public reward: pb.IItem[];

        /**
         * Creates a new S2CDoActivity instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDoActivity instance
         */
        public static create(properties?: pb.IS2CDoActivity): pb.S2CDoActivity;

        /**
         * Encodes the specified S2CDoActivity message. Does not implicitly {@link pb.S2CDoActivity.verify|verify} messages.
         * @param message S2CDoActivity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDoActivity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDoActivity message, length delimited. Does not implicitly {@link pb.S2CDoActivity.verify|verify} messages.
         * @param message S2CDoActivity message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDoActivity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDoActivity message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDoActivity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDoActivity;

        /**
         * Decodes a S2CDoActivity message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDoActivity
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDoActivity;

        /**
         * Verifies a S2CDoActivity message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDoActivity message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDoActivity
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDoActivity;

        /**
         * Creates a plain object from a S2CDoActivity message. Also converts values to other types if specified.
         * @param message S2CDoActivity
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDoActivity, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDoActivity to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** ActivityType enum. */
    enum ActivityType {
        ActivityType_Null = 0,
        ActivityType_Login = 1,
        ActivityType_Lottery = 2
    }

    /** ActivityState enum. */
    enum ActivityState {
        ActivityState_Null = 0,
        ActivityState_Normal = 1,
        ActivityState_Open = 2,
        ActivityState_Close = 3
    }

    /** ActCondType enum. */
    enum ActCondType {
        ActCondType_Login = 0,
        ActCondType_PlayWin = 1,
        ActCondType_Pay = 2,
        ActCondType_FinishLogin = 4
    }

    /** Properties of a TurntableActCfg. */
    interface ITurntableActCfg {

        /** TurntableActCfg freeTimes */
        freeTimes?: (number|null);

        /** TurntableActCfg advertTimes */
        advertTimes?: (number|null);

        /** TurntableActCfg actItems */
        actItems?: (pb.TurntableActCfg.ITableItem[]|null);
    }

    /** Represents a TurntableActCfg. */
    class TurntableActCfg implements ITurntableActCfg {

        /**
         * Constructs a new TurntableActCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITurntableActCfg);

        /** TurntableActCfg freeTimes. */
        public freeTimes: number;

        /** TurntableActCfg advertTimes. */
        public advertTimes: number;

        /** TurntableActCfg actItems. */
        public actItems: pb.TurntableActCfg.ITableItem[];

        /**
         * Creates a new TurntableActCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TurntableActCfg instance
         */
        public static create(properties?: pb.ITurntableActCfg): pb.TurntableActCfg;

        /**
         * Encodes the specified TurntableActCfg message. Does not implicitly {@link pb.TurntableActCfg.verify|verify} messages.
         * @param message TurntableActCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITurntableActCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TurntableActCfg message, length delimited. Does not implicitly {@link pb.TurntableActCfg.verify|verify} messages.
         * @param message TurntableActCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITurntableActCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TurntableActCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TurntableActCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.TurntableActCfg;

        /**
         * Decodes a TurntableActCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TurntableActCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.TurntableActCfg;

        /**
         * Verifies a TurntableActCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TurntableActCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TurntableActCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.TurntableActCfg;

        /**
         * Creates a plain object from a TurntableActCfg message. Also converts values to other types if specified.
         * @param message TurntableActCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.TurntableActCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TurntableActCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace TurntableActCfg {

        /** Properties of a TableItem. */
        interface ITableItem {

            /** TableItem id */
            id?: (number|null);

            /** TableItem reward */
            reward?: (pb.IItem|null);

            /** TableItem freeProb */
            freeProb?: (number|null);

            /** TableItem advertProb */
            advertProb?: (number|null);
        }

        /** Represents a TableItem. */
        class TableItem implements ITableItem {

            /**
             * Constructs a new TableItem.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.TurntableActCfg.ITableItem);

            /** TableItem id. */
            public id: number;

            /** TableItem reward. */
            public reward?: (pb.IItem|null);

            /** TableItem freeProb. */
            public freeProb: number;

            /** TableItem advertProb. */
            public advertProb: number;

            /**
             * Creates a new TableItem instance using the specified properties.
             * @param [properties] Properties to set
             * @returns TableItem instance
             */
            public static create(properties?: pb.TurntableActCfg.ITableItem): pb.TurntableActCfg.TableItem;

            /**
             * Encodes the specified TableItem message. Does not implicitly {@link pb.TurntableActCfg.TableItem.verify|verify} messages.
             * @param message TableItem message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.TurntableActCfg.ITableItem, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified TableItem message, length delimited. Does not implicitly {@link pb.TurntableActCfg.TableItem.verify|verify} messages.
             * @param message TableItem message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.TurntableActCfg.ITableItem, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a TableItem message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TableItem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.TurntableActCfg.TableItem;

            /**
             * Decodes a TableItem message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns TableItem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.TurntableActCfg.TableItem;

            /**
             * Verifies a TableItem message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a TableItem message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns TableItem
             */
            public static fromObject(object: { [k: string]: any }): pb.TurntableActCfg.TableItem;

            /**
             * Creates a plain object from a TableItem message. Also converts values to other types if specified.
             * @param message TableItem
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.TurntableActCfg.TableItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this TableItem to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a LoginActCfg. */
    interface ILoginActCfg {

        /** LoginActCfg actItems */
        actItems?: (pb.LoginActCfg.ILoginActItem[]|null);

        /** LoginActCfg reward */
        reward?: (pb.IItem[]|null);
    }

    /** Represents a LoginActCfg. */
    class LoginActCfg implements ILoginActCfg {

        /**
         * Constructs a new LoginActCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILoginActCfg);

        /** LoginActCfg actItems. */
        public actItems: pb.LoginActCfg.ILoginActItem[];

        /** LoginActCfg reward. */
        public reward: pb.IItem[];

        /**
         * Creates a new LoginActCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoginActCfg instance
         */
        public static create(properties?: pb.ILoginActCfg): pb.LoginActCfg;

        /**
         * Encodes the specified LoginActCfg message. Does not implicitly {@link pb.LoginActCfg.verify|verify} messages.
         * @param message LoginActCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILoginActCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LoginActCfg message, length delimited. Does not implicitly {@link pb.LoginActCfg.verify|verify} messages.
         * @param message LoginActCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILoginActCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LoginActCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoginActCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.LoginActCfg;

        /**
         * Decodes a LoginActCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoginActCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.LoginActCfg;

        /**
         * Verifies a LoginActCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LoginActCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LoginActCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.LoginActCfg;

        /**
         * Creates a plain object from a LoginActCfg message. Also converts values to other types if specified.
         * @param message LoginActCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.LoginActCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LoginActCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace LoginActCfg {

        /** Properties of a LoginActItem. */
        interface ILoginActItem {

            /** LoginActItem id */
            id?: (number|null);

            /** LoginActItem desc */
            desc?: (string|null);

            /** LoginActItem condType */
            condType?: (pb.ActCondType|null);

            /** LoginActItem condVal */
            condVal?: (number|null);

            /** LoginActItem param */
            param?: (string|null);

            /** LoginActItem rewardName */
            rewardName?: (string|null);

            /** LoginActItem reward */
            reward?: (pb.IItem[]|null);
        }

        /** Represents a LoginActItem. */
        class LoginActItem implements ILoginActItem {

            /**
             * Constructs a new LoginActItem.
             * @param [properties] Properties to set
             */
            constructor(properties?: pb.LoginActCfg.ILoginActItem);

            /** LoginActItem id. */
            public id: number;

            /** LoginActItem desc. */
            public desc: string;

            /** LoginActItem condType. */
            public condType: pb.ActCondType;

            /** LoginActItem condVal. */
            public condVal: number;

            /** LoginActItem param. */
            public param: string;

            /** LoginActItem rewardName. */
            public rewardName: string;

            /** LoginActItem reward. */
            public reward: pb.IItem[];

            /**
             * Creates a new LoginActItem instance using the specified properties.
             * @param [properties] Properties to set
             * @returns LoginActItem instance
             */
            public static create(properties?: pb.LoginActCfg.ILoginActItem): pb.LoginActCfg.LoginActItem;

            /**
             * Encodes the specified LoginActItem message. Does not implicitly {@link pb.LoginActCfg.LoginActItem.verify|verify} messages.
             * @param message LoginActItem message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: pb.LoginActCfg.ILoginActItem, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified LoginActItem message, length delimited. Does not implicitly {@link pb.LoginActCfg.LoginActItem.verify|verify} messages.
             * @param message LoginActItem message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: pb.LoginActCfg.ILoginActItem, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a LoginActItem message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LoginActItem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.LoginActCfg.LoginActItem;

            /**
             * Decodes a LoginActItem message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns LoginActItem
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.LoginActCfg.LoginActItem;

            /**
             * Verifies a LoginActItem message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a LoginActItem message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns LoginActItem
             */
            public static fromObject(object: { [k: string]: any }): pb.LoginActCfg.LoginActItem;

            /**
             * Creates a plain object from a LoginActItem message. Also converts values to other types if specified.
             * @param message LoginActItem
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: pb.LoginActCfg.LoginActItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this LoginActItem to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of an ActivityCfg. */
    interface IActivityCfg {

        /** ActivityCfg id */
        id?: (number|null);

        /** ActivityCfg type */
        type?: (pb.ActivityType|null);

        /** ActivityCfg name */
        name?: (string|null);

        /** ActivityCfg startTime */
        startTime?: (number|Long|null);

        /** ActivityCfg endTime */
        endTime?: (number|Long|null);

        /** ActivityCfg turnTable */
        turnTable?: (pb.ITurntableActCfg|null);

        /** ActivityCfg loginCfg */
        loginCfg?: (pb.ILoginActCfg|null);

        /** ActivityCfg actIcon */
        actIcon?: (string|null);

        /** ActivityCfg actImage */
        actImage?: (string|null);

        /** ActivityCfg state */
        state?: (pb.ActivityState|null);

        /** ActivityCfg cycle */
        cycle?: (number|null);
    }

    /** Represents an ActivityCfg. */
    class ActivityCfg implements IActivityCfg {

        /**
         * Constructs a new ActivityCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IActivityCfg);

        /** ActivityCfg id. */
        public id: number;

        /** ActivityCfg type. */
        public type: pb.ActivityType;

        /** ActivityCfg name. */
        public name: string;

        /** ActivityCfg startTime. */
        public startTime: (number|Long);

        /** ActivityCfg endTime. */
        public endTime: (number|Long);

        /** ActivityCfg turnTable. */
        public turnTable?: (pb.ITurntableActCfg|null);

        /** ActivityCfg loginCfg. */
        public loginCfg?: (pb.ILoginActCfg|null);

        /** ActivityCfg actIcon. */
        public actIcon: string;

        /** ActivityCfg actImage. */
        public actImage: string;

        /** ActivityCfg state. */
        public state: pb.ActivityState;

        /** ActivityCfg cycle. */
        public cycle: number;

        /** ActivityCfg activityCfg. */
        public activityCfg?: ("turnTable"|"loginCfg");

        /**
         * Creates a new ActivityCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ActivityCfg instance
         */
        public static create(properties?: pb.IActivityCfg): pb.ActivityCfg;

        /**
         * Encodes the specified ActivityCfg message. Does not implicitly {@link pb.ActivityCfg.verify|verify} messages.
         * @param message ActivityCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IActivityCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ActivityCfg message, length delimited. Does not implicitly {@link pb.ActivityCfg.verify|verify} messages.
         * @param message ActivityCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IActivityCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ActivityCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ActivityCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ActivityCfg;

        /**
         * Decodes an ActivityCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ActivityCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ActivityCfg;

        /**
         * Verifies an ActivityCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ActivityCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ActivityCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.ActivityCfg;

        /**
         * Creates a plain object from an ActivityCfg message. Also converts values to other types if specified.
         * @param message ActivityCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ActivityCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ActivityCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Item. */
    interface IItem {

        /** Item itemType */
        itemType?: (number|null);

        /** Item value */
        value?: (number|Long|null);

        /** Item name */
        name?: (string|null);

        /** Item image */
        image?: (string|null);
    }

    /** Represents an Item. */
    class Item implements IItem {

        /**
         * Constructs a new Item.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IItem);

        /** Item itemType. */
        public itemType: number;

        /** Item value. */
        public value: (number|Long);

        /** Item name. */
        public name: string;

        /** Item image. */
        public image: string;

        /**
         * Creates a new Item instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Item instance
         */
        public static create(properties?: pb.IItem): pb.Item;

        /**
         * Encodes the specified Item message. Does not implicitly {@link pb.Item.verify|verify} messages.
         * @param message Item message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Item message, length delimited. Does not implicitly {@link pb.Item.verify|verify} messages.
         * @param message Item message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Item message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Item
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.Item;

        /**
         * Decodes an Item message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Item
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.Item;

        /**
         * Verifies an Item message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Item message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Item
         */
        public static fromObject(object: { [k: string]: any }): pb.Item;

        /**
         * Creates a plain object from an Item message. Also converts values to other types if specified.
         * @param message Item
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.Item, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Item to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** ErrorCode enum. */
    enum ErrorCode {
        EC_Unknown = 0,
        EC_Ok = 1,
        EC_CoinNotEnough = 10,
        EC_CoinTooMany = 11,
        EC_GemNotEnough = 12,
        EC_HuafeiQuanNotEnough = 13,
        EC_CfgIdErr = 20,
        EC_FuncNotOpen = 21,
        EC_CantHandleMsg = 22,
        EC_SendAuthCodeFail = 23,
        EC_PlayerIsNotExist = 24,
        EC_AdClickTooFast = 40,
        EC_TableNotExists = 50,
        EC_AlreadyInTable = 51,
        EC_TableIsFull = 52,
        EC_TableIsPlaying = 53,
        EC_TableNotExist = 54,
        EC_EmojiNoTimes = 60,
        EC_CurrencyNotEnough = 61,
        EC_CoinLessChatCond = 62,
        EC_ChatMsgTooFast = 63,
        EC_DouFirstMustPlay = 70,
        EC_DouCardTypeErr = 71,
        EC_DouCardLength = 72,
        EC_DouCardLow = 73,
        EC_DouCardNotExist = 74,
        EC_TableNotInviteable = 80,
        EC_TargetPlayerIsPlaying = 81,
        EC_TargetPlayerNotOnline = 82,
        EC_MatchIdNotExist = 83,
        EC_MatchIsFull = 84,
        EC_LessThanSafeBoxMinLimit = 90,
        EC_MoreThanSafeBoxMaxLimit = 91,
        EC_MoreThanCoinCurrencyLimit = 92,
        EC_LessThanRetainLimit = 93,
        EC_PlayCantInSafeBox = 94,
        EC_PlayCantOutSafeBox = 95,
        EC_IdNumberError = 100,
        EC_LessThan16 = 101,
        EC_NameIllegal = 102,
        EC_Lt18LoginTimeError = 103,
        EC_Lt18PlayTimeout = 104,
        EC_PasswordIllegal = 110,
        EC_CantExitInGame = 111,
        EC_ShopDayBuyLimit = 120,
        EC_LessThan18CantBuy = 121,
        EC_AdTimesNotReach = 122,
        EC_HasTypeItem = 123,
        EC_UsePropErrRestMjs = 127,
        EC_UsePropErr = 128,
        EC_UsePropErrHued = 129,
        EC_UsePropDayLimit = 130,
        EC_UsePropGameTableErr = 131,
        EC_BuyRetainNotEnough = 132,
        EC_UsePropRoundLimit = 133,
        EC_UsePropSwapFail = 134,
        EC_UsePropHaiDiFail = 135,
        EC_UsePropRuYiFail = 136,
        EC_UsePropUsed = 137,
        EC_UsePropMoPaiFail = 138,
        EC_UsePropHaiDiUnXiaJiao = 139,
        EC_UsePropSeeFinalCardFail = 160,
        EC_GetMoneyNotEnough = 140,
        EC_GetMoneyRemainNotEnough = 141,
        EC_GetMoneyAdNotEnough = 142,
        EC_GetMoneyInviteNotEnough = 143,
        EC_GetMoneyOtherPlayTimeNotEnough = 144,
        EC_AdvertGetLimit = 150,
        EC_ActNotExist = 200,
        EC_ActNotOpen = 201,
        EC_ActFreeTimesNot = 202,
        EC_ActAdvertTimesNot = 203,
        EC_RewardAlreadyGeted = 204,
        EC_RewardNotReach = 205,
        EC_ActOpTypeError = 206,
        EC_ActSubIdError = 207,
        EC_PoChanErrCountLimit = 220,
        EC_ScoreTopRewardNotReach = 230,
        EC_ScoreTopRewardAlreadyGet = 231,
        EC_RetScoreNotEnough = 232,
        EC_WithdrawMoreThan200 = 233,
        EC_WxCodeIsInvalid = 234,
        EC_VipRewardNotReach = 240,
        EC_VipRewardAlreadyGet = 241,
        EC_VipDayRewardAlreadyGet = 242,
        EC_ServerWillShutdown = 10000,
        EC_ErrorGobackHall = 10001,
        EC_GameServerMaintain = 10002
    }

    /** Properties of a C2SGetAdReward. */
    interface IC2SGetAdReward {

        /** C2SGetAdReward id */
        id?: (number|null);

        /** C2SGetAdReward type */
        type?: (number|null);
    }

    /** Represents a C2SGetAdReward. */
    class C2SGetAdReward implements IC2SGetAdReward {

        /**
         * Constructs a new C2SGetAdReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetAdReward);

        /** C2SGetAdReward id. */
        public id: number;

        /** C2SGetAdReward type. */
        public type: number;

        /**
         * Creates a new C2SGetAdReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetAdReward instance
         */
        public static create(properties?: pb.IC2SGetAdReward): pb.C2SGetAdReward;

        /**
         * Encodes the specified C2SGetAdReward message. Does not implicitly {@link pb.C2SGetAdReward.verify|verify} messages.
         * @param message C2SGetAdReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetAdReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetAdReward message, length delimited. Does not implicitly {@link pb.C2SGetAdReward.verify|verify} messages.
         * @param message C2SGetAdReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetAdReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetAdReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetAdReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetAdReward;

        /**
         * Decodes a C2SGetAdReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetAdReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetAdReward;

        /**
         * Verifies a C2SGetAdReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetAdReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetAdReward
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetAdReward;

        /**
         * Creates a plain object from a C2SGetAdReward message. Also converts values to other types if specified.
         * @param message C2SGetAdReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetAdReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetAdReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdRewardItem. */
    interface IAdRewardItem {

        /** AdRewardItem id */
        id?: (number|null);

        /** AdRewardItem btnText */
        btnText?: (string|null);

        /** AdRewardItem shuoming */
        shuoming?: (string|null);

        /** AdRewardItem value */
        value?: (number|Long|null);

        /** AdRewardItem type */
        type?: (number|null);
    }

    /** Represents an AdRewardItem. */
    class AdRewardItem implements IAdRewardItem {

        /**
         * Constructs a new AdRewardItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAdRewardItem);

        /** AdRewardItem id. */
        public id: number;

        /** AdRewardItem btnText. */
        public btnText: string;

        /** AdRewardItem shuoming. */
        public shuoming: string;

        /** AdRewardItem value. */
        public value: (number|Long);

        /** AdRewardItem type. */
        public type: number;

        /**
         * Creates a new AdRewardItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdRewardItem instance
         */
        public static create(properties?: pb.IAdRewardItem): pb.AdRewardItem;

        /**
         * Encodes the specified AdRewardItem message. Does not implicitly {@link pb.AdRewardItem.verify|verify} messages.
         * @param message AdRewardItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAdRewardItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdRewardItem message, length delimited. Does not implicitly {@link pb.AdRewardItem.verify|verify} messages.
         * @param message AdRewardItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAdRewardItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdRewardItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdRewardItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.AdRewardItem;

        /**
         * Decodes an AdRewardItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdRewardItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.AdRewardItem;

        /**
         * Verifies an AdRewardItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdRewardItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdRewardItem
         */
        public static fromObject(object: { [k: string]: any }): pb.AdRewardItem;

        /**
         * Creates a plain object from an AdRewardItem message. Also converts values to other types if specified.
         * @param message AdRewardItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.AdRewardItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdRewardItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** AdRewardType enum. */
    enum AdRewardType {
        AdRewardType_UnDef = 0,
        AdRewardType_0Buy = 1,
        AdRewardType_WinFanBei = 2,
        AdRewardType_MianShu = 3,
        AdRewardType_Achiev = 4,
        AdRewardType_Grade = 5,
        AdRewardType_DuanWei = 6,
        AdRewardType_SaiJi = 7,
        AdRewardType_ZhuanPan = 8,
        AdRewardType_QianDao = 9,
        AdRewardType_ShiDuan = 10,
        AdRewardType_GuaJi = 11,
        AdRewardType_PoChan = 12,
        AdRewardType_HuaFei = 13,
        AdRewardType_AdReward = 14
    }

    /** AdRewardState enum. */
    enum AdRewardState {
        AdRewardState_Close = 0,
        AdRewardState_VideoSucc = 1
    }

    /** Properties of a S2CAdCfgs. */
    interface IS2CAdCfgs {

        /** S2CAdCfgs items */
        items?: (pb.IAdLoopItem[]|null);
    }

    /** Represents a S2CAdCfgs. */
    class S2CAdCfgs implements IS2CAdCfgs {

        /**
         * Constructs a new S2CAdCfgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CAdCfgs);

        /** S2CAdCfgs items. */
        public items: pb.IAdLoopItem[];

        /**
         * Creates a new S2CAdCfgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CAdCfgs instance
         */
        public static create(properties?: pb.IS2CAdCfgs): pb.S2CAdCfgs;

        /**
         * Encodes the specified S2CAdCfgs message. Does not implicitly {@link pb.S2CAdCfgs.verify|verify} messages.
         * @param message S2CAdCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CAdCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CAdCfgs message, length delimited. Does not implicitly {@link pb.S2CAdCfgs.verify|verify} messages.
         * @param message S2CAdCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CAdCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CAdCfgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CAdCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CAdCfgs;

        /**
         * Decodes a S2CAdCfgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CAdCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CAdCfgs;

        /**
         * Verifies a S2CAdCfgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CAdCfgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CAdCfgs
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CAdCfgs;

        /**
         * Creates a plain object from a S2CAdCfgs message. Also converts values to other types if specified.
         * @param message S2CAdCfgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CAdCfgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CAdCfgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdData. */
    interface IAdData {

        /** AdData sdkType */
        sdkType?: (number|null);

        /** AdData funcId */
        funcId?: (number|null);

        /** AdData intParam */
        intParam?: (number|null);

        /** AdData strParam */
        strParam?: (string|null);
    }

    /** Represents an AdData. */
    class AdData implements IAdData {

        /**
         * Constructs a new AdData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAdData);

        /** AdData sdkType. */
        public sdkType: number;

        /** AdData funcId. */
        public funcId: number;

        /** AdData intParam. */
        public intParam: number;

        /** AdData strParam. */
        public strParam: string;

        /**
         * Creates a new AdData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdData instance
         */
        public static create(properties?: pb.IAdData): pb.AdData;

        /**
         * Encodes the specified AdData message. Does not implicitly {@link pb.AdData.verify|verify} messages.
         * @param message AdData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAdData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdData message, length delimited. Does not implicitly {@link pb.AdData.verify|verify} messages.
         * @param message AdData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAdData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.AdData;

        /**
         * Decodes an AdData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.AdData;

        /**
         * Verifies an AdData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdData
         */
        public static fromObject(object: { [k: string]: any }): pb.AdData;

        /**
         * Creates a plain object from an AdData message. Also converts values to other types if specified.
         * @param message AdData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.AdData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SAdStart. */
    interface IC2SAdStart {

        /** C2SAdStart item */
        item?: (pb.IAdData|null);

        /** C2SAdStart result */
        result?: (boolean|null);

        /** C2SAdStart code */
        code?: (string|null);
    }

    /** Represents a C2SAdStart. */
    class C2SAdStart implements IC2SAdStart {

        /**
         * Constructs a new C2SAdStart.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SAdStart);

        /** C2SAdStart item. */
        public item?: (pb.IAdData|null);

        /** C2SAdStart result. */
        public result: boolean;

        /** C2SAdStart code. */
        public code: string;

        /**
         * Creates a new C2SAdStart instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SAdStart instance
         */
        public static create(properties?: pb.IC2SAdStart): pb.C2SAdStart;

        /**
         * Encodes the specified C2SAdStart message. Does not implicitly {@link pb.C2SAdStart.verify|verify} messages.
         * @param message C2SAdStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SAdStart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SAdStart message, length delimited. Does not implicitly {@link pb.C2SAdStart.verify|verify} messages.
         * @param message C2SAdStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SAdStart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SAdStart message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SAdStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SAdStart;

        /**
         * Decodes a C2SAdStart message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SAdStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SAdStart;

        /**
         * Verifies a C2SAdStart message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SAdStart message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SAdStart
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SAdStart;

        /**
         * Creates a plain object from a C2SAdStart message. Also converts values to other types if specified.
         * @param message C2SAdStart
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SAdStart, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SAdStart to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SAdEnd. */
    interface IC2SAdEnd {

        /** C2SAdEnd item */
        item?: (pb.IAdData|null);

        /** C2SAdEnd code */
        code?: (string|null);
    }

    /** Represents a C2SAdEnd. */
    class C2SAdEnd implements IC2SAdEnd {

        /**
         * Constructs a new C2SAdEnd.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SAdEnd);

        /** C2SAdEnd item. */
        public item?: (pb.IAdData|null);

        /** C2SAdEnd code. */
        public code: string;

        /**
         * Creates a new C2SAdEnd instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SAdEnd instance
         */
        public static create(properties?: pb.IC2SAdEnd): pb.C2SAdEnd;

        /**
         * Encodes the specified C2SAdEnd message. Does not implicitly {@link pb.C2SAdEnd.verify|verify} messages.
         * @param message C2SAdEnd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SAdEnd, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SAdEnd message, length delimited. Does not implicitly {@link pb.C2SAdEnd.verify|verify} messages.
         * @param message C2SAdEnd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SAdEnd, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SAdEnd message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SAdEnd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SAdEnd;

        /**
         * Decodes a C2SAdEnd message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SAdEnd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SAdEnd;

        /**
         * Verifies a C2SAdEnd message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SAdEnd message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SAdEnd
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SAdEnd;

        /**
         * Creates a plain object from a C2SAdEnd message. Also converts values to other types if specified.
         * @param message C2SAdEnd
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SAdEnd, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SAdEnd to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an AdLoopItem. */
    interface IAdLoopItem {

        /** AdLoopItem id */
        id?: (number|null);

        /** AdLoopItem sdkType */
        sdkType?: (number|null);

        /** AdLoopItem startTime */
        startTime?: (number|Long|null);

        /** AdLoopItem endTime */
        endTime?: (number|Long|null);
    }

    /** Represents an AdLoopItem. */
    class AdLoopItem implements IAdLoopItem {

        /**
         * Constructs a new AdLoopItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IAdLoopItem);

        /** AdLoopItem id. */
        public id: number;

        /** AdLoopItem sdkType. */
        public sdkType: number;

        /** AdLoopItem startTime. */
        public startTime: (number|Long);

        /** AdLoopItem endTime. */
        public endTime: (number|Long);

        /**
         * Creates a new AdLoopItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AdLoopItem instance
         */
        public static create(properties?: pb.IAdLoopItem): pb.AdLoopItem;

        /**
         * Encodes the specified AdLoopItem message. Does not implicitly {@link pb.AdLoopItem.verify|verify} messages.
         * @param message AdLoopItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IAdLoopItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AdLoopItem message, length delimited. Does not implicitly {@link pb.AdLoopItem.verify|verify} messages.
         * @param message AdLoopItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IAdLoopItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AdLoopItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AdLoopItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.AdLoopItem;

        /**
         * Decodes an AdLoopItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AdLoopItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.AdLoopItem;

        /**
         * Verifies an AdLoopItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AdLoopItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AdLoopItem
         */
        public static fromObject(object: { [k: string]: any }): pb.AdLoopItem;

        /**
         * Creates a plain object from an AdLoopItem message. Also converts values to other types if specified.
         * @param message AdLoopItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.AdLoopItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AdLoopItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** AdSdkType enum. */
    enum AdSdkType {
        AdSdkType_Null = 0,
        AdSdkType_Ylh = 1,
        AdSdkType_Pangle = 2,
        AdSdkType_Bqt = 3,
        AdSdkType_Ks = 4,
        AdSdkType_Hw = 5,
        AdSdkType_Oppo = 6,
        AdSdkType_XiaoMi = 7,
        AdSdkType_Share = 10
    }

    /** AdFuncId enum. */
    enum AdFuncId {
        Ad_Null = 0,
        Ad_MatchEnter = 100,
        Ad_NoLose = 110,
        Ad_WinMore = 111,
        Ad_AdReward = 112,
        Ad_LevelReward = 120,
        Ad_TaskReward = 121,
        Ad_RankListReward = 122,
        Ad_Lottery = 123,
        Ad_Relief = 124,
        Ad_OnlineReward = 125,
        Ad_TimedLogin = 126,
        Ad_FreeCoin = 127,
        Ad_FreeProp = 128,
        Ad_SignIn = 129,
        Ad_HfExchange = 132,
        Ad_PoChanfuhuo = 133,
        Ad_SeasonReward = 134,
        Ad_DuanweiReward = 135
    }

    /** PlayerAttr enum. */
    enum PlayerAttr {
        PA_Null = 0,
        PA_Gender = 1,
        PA_Grade = 2,
        PA_Exp = 3,
        PA_PortBorder = 4,
        PA_AccountType = 5,
        PA_TotalPlay = 6,
        PA_TotalWin = 7,
        PA_Inviter = 8,
        PA_Birthday = 9,
        PA_TrueNameAuth = 10,
        PA_HideInfo = 11,
        PA_ProvId = 12,
        PA_CityId = 13,
        PA_DistId = 14,
        PA_VipLevel = 15,
        PA_SeasonNum = 20,
        PA_SafeBox = 30,
        PA_TotalAdTimes = 35,
        PA_TotalInvite = 36,
        PA_ConsumeAdTimes = 37,
        PA_ConsumeInvite = 38,
        PA_Cash = 40,
        PA_CashShow = 41,
        PA_BeginnerMoney = 42,
        PA_TotalWithDraw = 43,
        PA_TotalPhoneRecharge = 44,
        PA_DayAmount = 50,
        PA_WeekAmount = 51,
        PA_MonthAmount = 52,
        PA_YearAmount = 53,
        PA_TotalAmount = 54,
        PA_DayScore = 60,
        PA_WeekScore = 61,
        PA_MonthScore = 62,
        PA_YearScore = 63,
        PA_VipDayReward = 70,
        PA_PlayDesk = 75,
        PA_SepVal = 10000,
        PA_InitPkgType = 10001,
        PA_TrueNameAuthRewardGet = 10005,
        PA_OnLineTime = 10010,
        PA_PkgType = 10011,
        PA_NppaStatus = 10012,
        PA_TotalPay = 10013,
        PA_LastMailId = 10014,
        PA_GiveBeginnerMoney = 10015,
        PA_AiGameCat = 10030,
        PA_AiCat = 10031,
        PA_AiZnLevel = 10032,
        PA_AiGroup = 10033,
        PA_MatchTimes = 10034,
        PA_RaceTimes = 10035,
        PA_LastMjCfgId = 10036,
        PA_LogoffState = 10037
    }

    /** Properties of a C2SPing. */
    interface IC2SPing {
    }

    /** Represents a C2SPing. */
    class C2SPing implements IC2SPing {

        /**
         * Constructs a new C2SPing.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SPing);

        /**
         * Creates a new C2SPing instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SPing instance
         */
        public static create(properties?: pb.IC2SPing): pb.C2SPing;

        /**
         * Encodes the specified C2SPing message. Does not implicitly {@link pb.C2SPing.verify|verify} messages.
         * @param message C2SPing message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SPing, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SPing message, length delimited. Does not implicitly {@link pb.C2SPing.verify|verify} messages.
         * @param message C2SPing message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SPing, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SPing message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SPing
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SPing;

        /**
         * Decodes a C2SPing message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SPing
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SPing;

        /**
         * Verifies a C2SPing message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SPing message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SPing
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SPing;

        /**
         * Creates a plain object from a C2SPing message. Also converts values to other types if specified.
         * @param message C2SPing
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SPing, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SPing to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CPing. */
    interface IS2CPing {
    }

    /** Represents a S2CPing. */
    class S2CPing implements IS2CPing {

        /**
         * Constructs a new S2CPing.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CPing);

        /**
         * Creates a new S2CPing instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CPing instance
         */
        public static create(properties?: pb.IS2CPing): pb.S2CPing;

        /**
         * Encodes the specified S2CPing message. Does not implicitly {@link pb.S2CPing.verify|verify} messages.
         * @param message S2CPing message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CPing, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CPing message, length delimited. Does not implicitly {@link pb.S2CPing.verify|verify} messages.
         * @param message S2CPing message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CPing, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CPing message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CPing
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CPing;

        /**
         * Decodes a S2CPing message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CPing
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CPing;

        /**
         * Verifies a S2CPing message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CPing message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CPing
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CPing;

        /**
         * Creates a plain object from a S2CPing message. Also converts values to other types if specified.
         * @param message S2CPing
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CPing, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CPing to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** CfgType enum. */
    enum CfgType {
        CfgType_Null = 0,
        CfgType_SafeBoxStep = 1,
        CfgType_SafeBoxInLimit = 2,
        CfgType_SafeBoxInRetainCoin = 3,
        CfgType_AdGetBombCardTimes = 4,
        CfgType_AdGetHongZhongCardTimes = 5,
        CfGType_DayGiveBeginnerMoney = 6,
        CfgType_AdGetDayMaxHfq = 7,
        CfgType_GetMoneyVal = 8,
        CfgType_PhoneRechargeMin = 9,
        CfgType_PhoneRechargeMax = 10,
        CfgType_BeginnerTotalMoney = 11,
        CfgType_NoLoseTimes = 12,
        CfgType_WinMoreTimes = 13,
        CfgType_WinMultiple = 14
    }

    /** Properties of a S2CCfgs. */
    interface IS2CCfgs {

        /** S2CCfgs items */
        items?: ({ [k: string]: (number|Long) }|null);

        /** S2CCfgs quickStart */
        quickStart?: (string|null);

        /** S2CCfgs authRewards */
        authRewards?: ({ [k: string]: (number|Long) }|null);

        /** S2CCfgs yinLiuRewards */
        yinLiuRewards?: ({ [k: string]: (number|Long) }|null);
    }

    /** Represents a S2CCfgs. */
    class S2CCfgs implements IS2CCfgs {

        /**
         * Constructs a new S2CCfgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CCfgs);

        /** S2CCfgs items. */
        public items: { [k: string]: (number|Long) };

        /** S2CCfgs quickStart. */
        public quickStart: string;

        /** S2CCfgs authRewards. */
        public authRewards: { [k: string]: (number|Long) };

        /** S2CCfgs yinLiuRewards. */
        public yinLiuRewards: { [k: string]: (number|Long) };

        /**
         * Creates a new S2CCfgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CCfgs instance
         */
        public static create(properties?: pb.IS2CCfgs): pb.S2CCfgs;

        /**
         * Encodes the specified S2CCfgs message. Does not implicitly {@link pb.S2CCfgs.verify|verify} messages.
         * @param message S2CCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CCfgs message, length delimited. Does not implicitly {@link pb.S2CCfgs.verify|verify} messages.
         * @param message S2CCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CCfgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CCfgs;

        /**
         * Decodes a S2CCfgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CCfgs;

        /**
         * Verifies a S2CCfgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CCfgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CCfgs
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CCfgs;

        /**
         * Creates a plain object from a S2CCfgs message. Also converts values to other types if specified.
         * @param message S2CCfgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CCfgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CCfgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** ChatType enum. */
    enum ChatType {
        ChatType_ShortcutText = 0,
        ChatType_Emoji = 1,
        ChatType_Ani = 2
    }

    /** Properties of a C2SEmojiCfgs. */
    interface IC2SEmojiCfgs {
    }

    /** Represents a C2SEmojiCfgs. */
    class C2SEmojiCfgs implements IC2SEmojiCfgs {

        /**
         * Constructs a new C2SEmojiCfgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SEmojiCfgs);

        /**
         * Creates a new C2SEmojiCfgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SEmojiCfgs instance
         */
        public static create(properties?: pb.IC2SEmojiCfgs): pb.C2SEmojiCfgs;

        /**
         * Encodes the specified C2SEmojiCfgs message. Does not implicitly {@link pb.C2SEmojiCfgs.verify|verify} messages.
         * @param message C2SEmojiCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SEmojiCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SEmojiCfgs message, length delimited. Does not implicitly {@link pb.C2SEmojiCfgs.verify|verify} messages.
         * @param message C2SEmojiCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SEmojiCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SEmojiCfgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SEmojiCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SEmojiCfgs;

        /**
         * Decodes a C2SEmojiCfgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SEmojiCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SEmojiCfgs;

        /**
         * Verifies a C2SEmojiCfgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SEmojiCfgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SEmojiCfgs
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SEmojiCfgs;

        /**
         * Creates a plain object from a C2SEmojiCfgs message. Also converts values to other types if specified.
         * @param message C2SEmojiCfgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SEmojiCfgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SEmojiCfgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EmojiPrice. */
    interface IEmojiPrice {

        /** EmojiPrice tableCfgId */
        tableCfgId?: (number|null);

        /** EmojiPrice ct */
        ct?: (number|null);

        /** EmojiPrice price */
        price?: (number|null);
    }

    /** Represents an EmojiPrice. */
    class EmojiPrice implements IEmojiPrice {

        /**
         * Constructs a new EmojiPrice.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IEmojiPrice);

        /** EmojiPrice tableCfgId. */
        public tableCfgId: number;

        /** EmojiPrice ct. */
        public ct: number;

        /** EmojiPrice price. */
        public price: number;

        /**
         * Creates a new EmojiPrice instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EmojiPrice instance
         */
        public static create(properties?: pb.IEmojiPrice): pb.EmojiPrice;

        /**
         * Encodes the specified EmojiPrice message. Does not implicitly {@link pb.EmojiPrice.verify|verify} messages.
         * @param message EmojiPrice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IEmojiPrice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EmojiPrice message, length delimited. Does not implicitly {@link pb.EmojiPrice.verify|verify} messages.
         * @param message EmojiPrice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IEmojiPrice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EmojiPrice message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EmojiPrice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.EmojiPrice;

        /**
         * Decodes an EmojiPrice message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EmojiPrice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.EmojiPrice;

        /**
         * Verifies an EmojiPrice message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EmojiPrice message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EmojiPrice
         */
        public static fromObject(object: { [k: string]: any }): pb.EmojiPrice;

        /**
         * Creates a plain object from an EmojiPrice message. Also converts values to other types if specified.
         * @param message EmojiPrice
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.EmojiPrice, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EmojiPrice to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EmojiCfg. */
    interface IEmojiCfg {

        /** EmojiCfg id */
        id?: (number|null);

        /** EmojiCfg name */
        name?: (string|null);

        /** EmojiCfg etype */
        etype?: (number|null);

        /** EmojiCfg useNeed */
        useNeed?: (number|null);

        /** EmojiCfg consume */
        consume?: ({ [k: string]: pb.IEmojiPrice }|null);
    }

    /** Represents an EmojiCfg. */
    class EmojiCfg implements IEmojiCfg {

        /**
         * Constructs a new EmojiCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IEmojiCfg);

        /** EmojiCfg id. */
        public id: number;

        /** EmojiCfg name. */
        public name: string;

        /** EmojiCfg etype. */
        public etype: number;

        /** EmojiCfg useNeed. */
        public useNeed: number;

        /** EmojiCfg consume. */
        public consume: { [k: string]: pb.IEmojiPrice };

        /**
         * Creates a new EmojiCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EmojiCfg instance
         */
        public static create(properties?: pb.IEmojiCfg): pb.EmojiCfg;

        /**
         * Encodes the specified EmojiCfg message. Does not implicitly {@link pb.EmojiCfg.verify|verify} messages.
         * @param message EmojiCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IEmojiCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EmojiCfg message, length delimited. Does not implicitly {@link pb.EmojiCfg.verify|verify} messages.
         * @param message EmojiCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IEmojiCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EmojiCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EmojiCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.EmojiCfg;

        /**
         * Decodes an EmojiCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EmojiCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.EmojiCfg;

        /**
         * Verifies an EmojiCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EmojiCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EmojiCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.EmojiCfg;

        /**
         * Creates a plain object from an EmojiCfg message. Also converts values to other types if specified.
         * @param message EmojiCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.EmojiCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EmojiCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CEmojiCfgs. */
    interface IS2CEmojiCfgs {

        /** S2CEmojiCfgs items */
        items?: (pb.IEmojiCfg[]|null);
    }

    /** Represents a S2CEmojiCfgs. */
    class S2CEmojiCfgs implements IS2CEmojiCfgs {

        /**
         * Constructs a new S2CEmojiCfgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CEmojiCfgs);

        /** S2CEmojiCfgs items. */
        public items: pb.IEmojiCfg[];

        /**
         * Creates a new S2CEmojiCfgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CEmojiCfgs instance
         */
        public static create(properties?: pb.IS2CEmojiCfgs): pb.S2CEmojiCfgs;

        /**
         * Encodes the specified S2CEmojiCfgs message. Does not implicitly {@link pb.S2CEmojiCfgs.verify|verify} messages.
         * @param message S2CEmojiCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CEmojiCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CEmojiCfgs message, length delimited. Does not implicitly {@link pb.S2CEmojiCfgs.verify|verify} messages.
         * @param message S2CEmojiCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CEmojiCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CEmojiCfgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CEmojiCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CEmojiCfgs;

        /**
         * Decodes a S2CEmojiCfgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CEmojiCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CEmojiCfgs;

        /**
         * Verifies a S2CEmojiCfgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CEmojiCfgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CEmojiCfgs
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CEmojiCfgs;

        /**
         * Creates a plain object from a S2CEmojiCfgs message. Also converts values to other types if specified.
         * @param message S2CEmojiCfgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CEmojiCfgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CEmojiCfgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SChat. */
    interface IC2SChat {

        /** C2SChat chatType */
        chatType?: (pb.ChatType|null);

        /** C2SChat id */
        id?: (number|null);

        /** C2SChat target */
        target?: (number|Long|null);

        /** C2SChat content */
        content?: (string|null);
    }

    /** Represents a C2SChat. */
    class C2SChat implements IC2SChat {

        /**
         * Constructs a new C2SChat.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SChat);

        /** C2SChat chatType. */
        public chatType: pb.ChatType;

        /** C2SChat id. */
        public id: number;

        /** C2SChat target. */
        public target: (number|Long);

        /** C2SChat content. */
        public content: string;

        /**
         * Creates a new C2SChat instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SChat instance
         */
        public static create(properties?: pb.IC2SChat): pb.C2SChat;

        /**
         * Encodes the specified C2SChat message. Does not implicitly {@link pb.C2SChat.verify|verify} messages.
         * @param message C2SChat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SChat, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SChat message, length delimited. Does not implicitly {@link pb.C2SChat.verify|verify} messages.
         * @param message C2SChat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SChat, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SChat message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SChat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SChat;

        /**
         * Decodes a C2SChat message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SChat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SChat;

        /**
         * Verifies a C2SChat message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SChat message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SChat
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SChat;

        /**
         * Creates a plain object from a C2SChat message. Also converts values to other types if specified.
         * @param message C2SChat
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SChat, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SChat to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CChat. */
    interface IS2CChat {

        /** S2CChat player */
        player?: (number|Long|null);

        /** S2CChat chatType */
        chatType?: (pb.ChatType|null);

        /** S2CChat id */
        id?: (number|null);

        /** S2CChat target */
        target?: (number|Long|null);

        /** S2CChat param */
        param?: (string|null);

        /** S2CChat content */
        content?: (string|null);
    }

    /** Represents a S2CChat. */
    class S2CChat implements IS2CChat {

        /**
         * Constructs a new S2CChat.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CChat);

        /** S2CChat player. */
        public player: (number|Long);

        /** S2CChat chatType. */
        public chatType: pb.ChatType;

        /** S2CChat id. */
        public id: number;

        /** S2CChat target. */
        public target: (number|Long);

        /** S2CChat param. */
        public param: string;

        /** S2CChat content. */
        public content: string;

        /**
         * Creates a new S2CChat instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CChat instance
         */
        public static create(properties?: pb.IS2CChat): pb.S2CChat;

        /**
         * Encodes the specified S2CChat message. Does not implicitly {@link pb.S2CChat.verify|verify} messages.
         * @param message S2CChat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CChat, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CChat message, length delimited. Does not implicitly {@link pb.S2CChat.verify|verify} messages.
         * @param message S2CChat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CChat, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CChat message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CChat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CChat;

        /**
         * Decodes a S2CChat message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CChat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CChat;

        /**
         * Verifies a S2CChat message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CChat message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CChat
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CChat;

        /**
         * Creates a plain object from a S2CChat message. Also converts values to other types if specified.
         * @param message S2CChat
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CChat, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CChat to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CError. */
    interface IS2CError {

        /** S2CError errCode */
        errCode?: (number|null);

        /** S2CError msgName */
        msgName?: (string|null);

        /** S2CError param */
        param?: (string|null);
    }

    /** Represents a S2CError. */
    class S2CError implements IS2CError {

        /**
         * Constructs a new S2CError.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CError);

        /** S2CError errCode. */
        public errCode: number;

        /** S2CError msgName. */
        public msgName: string;

        /** S2CError param. */
        public param: string;

        /**
         * Creates a new S2CError instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CError instance
         */
        public static create(properties?: pb.IS2CError): pb.S2CError;

        /**
         * Encodes the specified S2CError message. Does not implicitly {@link pb.S2CError.verify|verify} messages.
         * @param message S2CError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CError, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CError message, length delimited. Does not implicitly {@link pb.S2CError.verify|verify} messages.
         * @param message S2CError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CError, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CError message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CError;

        /**
         * Decodes a S2CError message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CError;

        /**
         * Verifies a S2CError message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CError message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CError
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CError;

        /**
         * Creates a plain object from a S2CError message. Also converts values to other types if specified.
         * @param message S2CError
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CError, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CError to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Time. */
    interface ITime {

        /** Time timestamp */
        timestamp?: (number|Long|null);

        /** Time zone */
        zone?: (number|null);
    }

    /** Represents a Time. */
    class Time implements ITime {

        /**
         * Constructs a new Time.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITime);

        /** Time timestamp. */
        public timestamp: (number|Long);

        /** Time zone. */
        public zone: number;

        /**
         * Creates a new Time instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Time instance
         */
        public static create(properties?: pb.ITime): pb.Time;

        /**
         * Encodes the specified Time message. Does not implicitly {@link pb.Time.verify|verify} messages.
         * @param message Time message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITime, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Time message, length delimited. Does not implicitly {@link pb.Time.verify|verify} messages.
         * @param message Time message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITime, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Time message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Time
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.Time;

        /**
         * Decodes a Time message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Time
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.Time;

        /**
         * Verifies a Time message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Time message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Time
         */
        public static fromObject(object: { [k: string]: any }): pb.Time;

        /**
         * Creates a plain object from a Time message. Also converts values to other types if specified.
         * @param message Time
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.Time, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Time to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CServerInfo. */
    interface IS2CServerInfo {

        /** S2CServerInfo time */
        time?: (pb.ITime|null);
    }

    /** Represents a S2CServerInfo. */
    class S2CServerInfo implements IS2CServerInfo {

        /**
         * Constructs a new S2CServerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CServerInfo);

        /** S2CServerInfo time. */
        public time?: (pb.ITime|null);

        /**
         * Creates a new S2CServerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CServerInfo instance
         */
        public static create(properties?: pb.IS2CServerInfo): pb.S2CServerInfo;

        /**
         * Encodes the specified S2CServerInfo message. Does not implicitly {@link pb.S2CServerInfo.verify|verify} messages.
         * @param message S2CServerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CServerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CServerInfo message, length delimited. Does not implicitly {@link pb.S2CServerInfo.verify|verify} messages.
         * @param message S2CServerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CServerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CServerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CServerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CServerInfo;

        /**
         * Decodes a S2CServerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CServerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CServerInfo;

        /**
         * Verifies a S2CServerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CServerInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CServerInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CServerInfo;

        /**
         * Creates a plain object from a S2CServerInfo message. Also converts values to other types if specified.
         * @param message S2CServerInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CServerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CServerInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SCmd. */
    interface IC2SCmd {

        /** C2SCmd cmd */
        cmd?: (string|null);
    }

    /** Represents a C2SCmd. */
    class C2SCmd implements IC2SCmd {

        /**
         * Constructs a new C2SCmd.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SCmd);

        /** C2SCmd cmd. */
        public cmd: string;

        /**
         * Creates a new C2SCmd instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SCmd instance
         */
        public static create(properties?: pb.IC2SCmd): pb.C2SCmd;

        /**
         * Encodes the specified C2SCmd message. Does not implicitly {@link pb.C2SCmd.verify|verify} messages.
         * @param message C2SCmd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SCmd, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SCmd message, length delimited. Does not implicitly {@link pb.C2SCmd.verify|verify} messages.
         * @param message C2SCmd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SCmd, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SCmd message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SCmd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SCmd;

        /**
         * Decodes a C2SCmd message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SCmd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SCmd;

        /**
         * Verifies a C2SCmd message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SCmd message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SCmd
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SCmd;

        /**
         * Creates a plain object from a C2SCmd message. Also converts values to other types if specified.
         * @param message C2SCmd
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SCmd, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SCmd to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** CurrencyType enum. */
    enum CurrencyType {
        CT_Null = 0,
        CT_Coin = 1,
        CT_Gem = 2,
        CT_HuafeiQuan = 3,
        CT_RMB = 4,
        CT_HfqCash = 5
    }

    /** ClientDeviceType enum. */
    enum ClientDeviceType {
        CDT_Unknown = 0,
        CDT_IOS = 1,
        CDT_Android = 2,
        CDT_WebPlayer = 3,
        CDT_Windows = 4,
        CDT_MacOS = 5
    }

    /** Properties of a S2CDouTableInfo. */
    interface IS2CDouTableInfo {

        /** S2CDouTableInfo tableBase */
        tableBase?: (pb.ITableCommon|null);

        /** S2CDouTableInfo tableInfo */
        tableInfo?: (pb.IDouTableInfo|null);

        /** S2CDouTableInfo players */
        players?: (pb.IDouPlayerInfo[]|null);
    }

    /** Represents a S2CDouTableInfo. */
    class S2CDouTableInfo implements IS2CDouTableInfo {

        /**
         * Constructs a new S2CDouTableInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouTableInfo);

        /** S2CDouTableInfo tableBase. */
        public tableBase?: (pb.ITableCommon|null);

        /** S2CDouTableInfo tableInfo. */
        public tableInfo?: (pb.IDouTableInfo|null);

        /** S2CDouTableInfo players. */
        public players: pb.IDouPlayerInfo[];

        /**
         * Creates a new S2CDouTableInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouTableInfo instance
         */
        public static create(properties?: pb.IS2CDouTableInfo): pb.S2CDouTableInfo;

        /**
         * Encodes the specified S2CDouTableInfo message. Does not implicitly {@link pb.S2CDouTableInfo.verify|verify} messages.
         * @param message S2CDouTableInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouTableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouTableInfo message, length delimited. Does not implicitly {@link pb.S2CDouTableInfo.verify|verify} messages.
         * @param message S2CDouTableInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouTableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouTableInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouTableInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouTableInfo;

        /**
         * Decodes a S2CDouTableInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouTableInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouTableInfo;

        /**
         * Verifies a S2CDouTableInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouTableInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouTableInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouTableInfo;

        /**
         * Creates a plain object from a S2CDouTableInfo message. Also converts values to other types if specified.
         * @param message S2CDouTableInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouTableInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouTableInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouPlayerEnter. */
    interface IS2CDouPlayerEnter {

        /** S2CDouPlayerEnter player */
        player?: (pb.IDouPlayerInfo|null);
    }

    /** Represents a S2CDouPlayerEnter. */
    class S2CDouPlayerEnter implements IS2CDouPlayerEnter {

        /**
         * Constructs a new S2CDouPlayerEnter.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouPlayerEnter);

        /** S2CDouPlayerEnter player. */
        public player?: (pb.IDouPlayerInfo|null);

        /**
         * Creates a new S2CDouPlayerEnter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouPlayerEnter instance
         */
        public static create(properties?: pb.IS2CDouPlayerEnter): pb.S2CDouPlayerEnter;

        /**
         * Encodes the specified S2CDouPlayerEnter message. Does not implicitly {@link pb.S2CDouPlayerEnter.verify|verify} messages.
         * @param message S2CDouPlayerEnter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouPlayerEnter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouPlayerEnter message, length delimited. Does not implicitly {@link pb.S2CDouPlayerEnter.verify|verify} messages.
         * @param message S2CDouPlayerEnter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouPlayerEnter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouPlayerEnter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouPlayerEnter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouPlayerEnter;

        /**
         * Decodes a S2CDouPlayerEnter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouPlayerEnter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouPlayerEnter;

        /**
         * Verifies a S2CDouPlayerEnter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouPlayerEnter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouPlayerEnter
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouPlayerEnter;

        /**
         * Creates a plain object from a S2CDouPlayerEnter message. Also converts values to other types if specified.
         * @param message S2CDouPlayerEnter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouPlayerEnter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouPlayerEnter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SDouReady. */
    interface IC2SDouReady {
    }

    /** Represents a C2SDouReady. */
    class C2SDouReady implements IC2SDouReady {

        /**
         * Constructs a new C2SDouReady.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SDouReady);

        /**
         * Creates a new C2SDouReady instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SDouReady instance
         */
        public static create(properties?: pb.IC2SDouReady): pb.C2SDouReady;

        /**
         * Encodes the specified C2SDouReady message. Does not implicitly {@link pb.C2SDouReady.verify|verify} messages.
         * @param message C2SDouReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SDouReady, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SDouReady message, length delimited. Does not implicitly {@link pb.C2SDouReady.verify|verify} messages.
         * @param message C2SDouReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SDouReady, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SDouReady message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SDouReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SDouReady;

        /**
         * Decodes a C2SDouReady message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SDouReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SDouReady;

        /**
         * Verifies a C2SDouReady message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SDouReady message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SDouReady
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SDouReady;

        /**
         * Creates a plain object from a C2SDouReady message. Also converts values to other types if specified.
         * @param message C2SDouReady
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SDouReady, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SDouReady to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouReady. */
    interface IS2CDouReady {

        /** S2CDouReady pos */
        pos?: (number|null);
    }

    /** Represents a S2CDouReady. */
    class S2CDouReady implements IS2CDouReady {

        /**
         * Constructs a new S2CDouReady.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouReady);

        /** S2CDouReady pos. */
        public pos: number;

        /**
         * Creates a new S2CDouReady instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouReady instance
         */
        public static create(properties?: pb.IS2CDouReady): pb.S2CDouReady;

        /**
         * Encodes the specified S2CDouReady message. Does not implicitly {@link pb.S2CDouReady.verify|verify} messages.
         * @param message S2CDouReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouReady, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouReady message, length delimited. Does not implicitly {@link pb.S2CDouReady.verify|verify} messages.
         * @param message S2CDouReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouReady, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouReady message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouReady;

        /**
         * Decodes a S2CDouReady message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouReady;

        /**
         * Verifies a S2CDouReady message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouReady message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouReady
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouReady;

        /**
         * Creates a plain object from a S2CDouReady message. Also converts values to other types if specified.
         * @param message S2CDouReady
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouReady, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouReady to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouStart. */
    interface IS2CDouStart {
    }

    /** Represents a S2CDouStart. */
    class S2CDouStart implements IS2CDouStart {

        /**
         * Constructs a new S2CDouStart.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouStart);

        /**
         * Creates a new S2CDouStart instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouStart instance
         */
        public static create(properties?: pb.IS2CDouStart): pb.S2CDouStart;

        /**
         * Encodes the specified S2CDouStart message. Does not implicitly {@link pb.S2CDouStart.verify|verify} messages.
         * @param message S2CDouStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouStart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouStart message, length delimited. Does not implicitly {@link pb.S2CDouStart.verify|verify} messages.
         * @param message S2CDouStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouStart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouStart message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouStart;

        /**
         * Decodes a S2CDouStart message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouStart;

        /**
         * Verifies a S2CDouStart message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouStart message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouStart
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouStart;

        /**
         * Creates a plain object from a S2CDouStart message. Also converts values to other types if specified.
         * @param message S2CDouStart
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouStart, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouStart to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouAddCards. */
    interface IS2CDouAddCards {

        /** S2CDouAddCards cards */
        cards?: (number[]|null);
    }

    /** Represents a S2CDouAddCards. */
    class S2CDouAddCards implements IS2CDouAddCards {

        /**
         * Constructs a new S2CDouAddCards.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouAddCards);

        /** S2CDouAddCards cards. */
        public cards: number[];

        /**
         * Creates a new S2CDouAddCards instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouAddCards instance
         */
        public static create(properties?: pb.IS2CDouAddCards): pb.S2CDouAddCards;

        /**
         * Encodes the specified S2CDouAddCards message. Does not implicitly {@link pb.S2CDouAddCards.verify|verify} messages.
         * @param message S2CDouAddCards message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouAddCards, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouAddCards message, length delimited. Does not implicitly {@link pb.S2CDouAddCards.verify|verify} messages.
         * @param message S2CDouAddCards message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouAddCards, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouAddCards message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouAddCards
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouAddCards;

        /**
         * Decodes a S2CDouAddCards message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouAddCards
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouAddCards;

        /**
         * Verifies a S2CDouAddCards message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouAddCards message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouAddCards
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouAddCards;

        /**
         * Creates a plain object from a S2CDouAddCards message. Also converts values to other types if specified.
         * @param message S2CDouAddCards
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouAddCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouAddCards to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouCurChooseLandlord. */
    interface IS2CDouCurChooseLandlord {

        /** S2CDouCurChooseLandlord pos */
        pos?: (number|null);

        /** S2CDouCurChooseLandlord interval */
        interval?: (number|null);

        /** S2CDouCurChooseLandlord double */
        double?: (number|null);
    }

    /** Represents a S2CDouCurChooseLandlord. */
    class S2CDouCurChooseLandlord implements IS2CDouCurChooseLandlord {

        /**
         * Constructs a new S2CDouCurChooseLandlord.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouCurChooseLandlord);

        /** S2CDouCurChooseLandlord pos. */
        public pos: number;

        /** S2CDouCurChooseLandlord interval. */
        public interval: number;

        /** S2CDouCurChooseLandlord double. */
        public double: number;

        /**
         * Creates a new S2CDouCurChooseLandlord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouCurChooseLandlord instance
         */
        public static create(properties?: pb.IS2CDouCurChooseLandlord): pb.S2CDouCurChooseLandlord;

        /**
         * Encodes the specified S2CDouCurChooseLandlord message. Does not implicitly {@link pb.S2CDouCurChooseLandlord.verify|verify} messages.
         * @param message S2CDouCurChooseLandlord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouCurChooseLandlord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouCurChooseLandlord message, length delimited. Does not implicitly {@link pb.S2CDouCurChooseLandlord.verify|verify} messages.
         * @param message S2CDouCurChooseLandlord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouCurChooseLandlord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouCurChooseLandlord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouCurChooseLandlord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouCurChooseLandlord;

        /**
         * Decodes a S2CDouCurChooseLandlord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouCurChooseLandlord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouCurChooseLandlord;

        /**
         * Verifies a S2CDouCurChooseLandlord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouCurChooseLandlord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouCurChooseLandlord
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouCurChooseLandlord;

        /**
         * Creates a plain object from a S2CDouCurChooseLandlord message. Also converts values to other types if specified.
         * @param message S2CDouCurChooseLandlord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouCurChooseLandlord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouCurChooseLandlord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SDouChooseLandlord. */
    interface IC2SDouChooseLandlord {

        /** C2SDouChooseLandlord choose */
        choose?: (boolean|null);
    }

    /** Represents a C2SDouChooseLandlord. */
    class C2SDouChooseLandlord implements IC2SDouChooseLandlord {

        /**
         * Constructs a new C2SDouChooseLandlord.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SDouChooseLandlord);

        /** C2SDouChooseLandlord choose. */
        public choose: boolean;

        /**
         * Creates a new C2SDouChooseLandlord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SDouChooseLandlord instance
         */
        public static create(properties?: pb.IC2SDouChooseLandlord): pb.C2SDouChooseLandlord;

        /**
         * Encodes the specified C2SDouChooseLandlord message. Does not implicitly {@link pb.C2SDouChooseLandlord.verify|verify} messages.
         * @param message C2SDouChooseLandlord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SDouChooseLandlord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SDouChooseLandlord message, length delimited. Does not implicitly {@link pb.C2SDouChooseLandlord.verify|verify} messages.
         * @param message C2SDouChooseLandlord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SDouChooseLandlord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SDouChooseLandlord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SDouChooseLandlord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SDouChooseLandlord;

        /**
         * Decodes a C2SDouChooseLandlord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SDouChooseLandlord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SDouChooseLandlord;

        /**
         * Verifies a C2SDouChooseLandlord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SDouChooseLandlord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SDouChooseLandlord
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SDouChooseLandlord;

        /**
         * Creates a plain object from a C2SDouChooseLandlord message. Also converts values to other types if specified.
         * @param message C2SDouChooseLandlord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SDouChooseLandlord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SDouChooseLandlord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouChooseLandlord. */
    interface IS2CDouChooseLandlord {

        /** S2CDouChooseLandlord pos */
        pos?: (number|null);

        /** S2CDouChooseLandlord choose */
        choose?: (boolean|null);

        /** S2CDouChooseLandlord double */
        double?: (number|null);
    }

    /** Represents a S2CDouChooseLandlord. */
    class S2CDouChooseLandlord implements IS2CDouChooseLandlord {

        /**
         * Constructs a new S2CDouChooseLandlord.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouChooseLandlord);

        /** S2CDouChooseLandlord pos. */
        public pos: number;

        /** S2CDouChooseLandlord choose. */
        public choose: boolean;

        /** S2CDouChooseLandlord double. */
        public double: number;

        /**
         * Creates a new S2CDouChooseLandlord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouChooseLandlord instance
         */
        public static create(properties?: pb.IS2CDouChooseLandlord): pb.S2CDouChooseLandlord;

        /**
         * Encodes the specified S2CDouChooseLandlord message. Does not implicitly {@link pb.S2CDouChooseLandlord.verify|verify} messages.
         * @param message S2CDouChooseLandlord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouChooseLandlord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouChooseLandlord message, length delimited. Does not implicitly {@link pb.S2CDouChooseLandlord.verify|verify} messages.
         * @param message S2CDouChooseLandlord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouChooseLandlord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouChooseLandlord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouChooseLandlord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouChooseLandlord;

        /**
         * Decodes a S2CDouChooseLandlord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouChooseLandlord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouChooseLandlord;

        /**
         * Verifies a S2CDouChooseLandlord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouChooseLandlord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouChooseLandlord
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouChooseLandlord;

        /**
         * Creates a plain object from a S2CDouChooseLandlord message. Also converts values to other types if specified.
         * @param message S2CDouChooseLandlord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouChooseLandlord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouChooseLandlord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouSetLandlord. */
    interface IS2CDouSetLandlord {

        /** S2CDouSetLandlord pos */
        pos?: (number|null);

        /** S2CDouSetLandlord cards */
        cards?: (number[]|null);

        /** S2CDouSetLandlord finalMultiple */
        finalMultiple?: (number|null);
    }

    /** Represents a S2CDouSetLandlord. */
    class S2CDouSetLandlord implements IS2CDouSetLandlord {

        /**
         * Constructs a new S2CDouSetLandlord.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouSetLandlord);

        /** S2CDouSetLandlord pos. */
        public pos: number;

        /** S2CDouSetLandlord cards. */
        public cards: number[];

        /** S2CDouSetLandlord finalMultiple. */
        public finalMultiple: number;

        /**
         * Creates a new S2CDouSetLandlord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouSetLandlord instance
         */
        public static create(properties?: pb.IS2CDouSetLandlord): pb.S2CDouSetLandlord;

        /**
         * Encodes the specified S2CDouSetLandlord message. Does not implicitly {@link pb.S2CDouSetLandlord.verify|verify} messages.
         * @param message S2CDouSetLandlord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouSetLandlord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouSetLandlord message, length delimited. Does not implicitly {@link pb.S2CDouSetLandlord.verify|verify} messages.
         * @param message S2CDouSetLandlord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouSetLandlord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouSetLandlord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouSetLandlord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouSetLandlord;

        /**
         * Decodes a S2CDouSetLandlord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouSetLandlord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouSetLandlord;

        /**
         * Verifies a S2CDouSetLandlord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouSetLandlord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouSetLandlord
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouSetLandlord;

        /**
         * Creates a plain object from a S2CDouSetLandlord message. Also converts values to other types if specified.
         * @param message S2CDouSetLandlord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouSetLandlord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouSetLandlord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouDoubleStart. */
    interface IS2CDouDoubleStart {

        /** S2CDouDoubleStart interval */
        interval?: (number|null);
    }

    /** Represents a S2CDouDoubleStart. */
    class S2CDouDoubleStart implements IS2CDouDoubleStart {

        /**
         * Constructs a new S2CDouDoubleStart.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouDoubleStart);

        /** S2CDouDoubleStart interval. */
        public interval: number;

        /**
         * Creates a new S2CDouDoubleStart instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouDoubleStart instance
         */
        public static create(properties?: pb.IS2CDouDoubleStart): pb.S2CDouDoubleStart;

        /**
         * Encodes the specified S2CDouDoubleStart message. Does not implicitly {@link pb.S2CDouDoubleStart.verify|verify} messages.
         * @param message S2CDouDoubleStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouDoubleStart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouDoubleStart message, length delimited. Does not implicitly {@link pb.S2CDouDoubleStart.verify|verify} messages.
         * @param message S2CDouDoubleStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouDoubleStart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouDoubleStart message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouDoubleStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouDoubleStart;

        /**
         * Decodes a S2CDouDoubleStart message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouDoubleStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouDoubleStart;

        /**
         * Verifies a S2CDouDoubleStart message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouDoubleStart message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouDoubleStart
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouDoubleStart;

        /**
         * Creates a plain object from a S2CDouDoubleStart message. Also converts values to other types if specified.
         * @param message S2CDouDoubleStart
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouDoubleStart, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouDoubleStart to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SDouDouble. */
    interface IC2SDouDouble {

        /** C2SDouDouble type */
        type?: (pb.DouDoubleType|null);
    }

    /** Represents a C2SDouDouble. */
    class C2SDouDouble implements IC2SDouDouble {

        /**
         * Constructs a new C2SDouDouble.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SDouDouble);

        /** C2SDouDouble type. */
        public type: pb.DouDoubleType;

        /**
         * Creates a new C2SDouDouble instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SDouDouble instance
         */
        public static create(properties?: pb.IC2SDouDouble): pb.C2SDouDouble;

        /**
         * Encodes the specified C2SDouDouble message. Does not implicitly {@link pb.C2SDouDouble.verify|verify} messages.
         * @param message C2SDouDouble message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SDouDouble, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SDouDouble message, length delimited. Does not implicitly {@link pb.C2SDouDouble.verify|verify} messages.
         * @param message C2SDouDouble message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SDouDouble, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SDouDouble message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SDouDouble
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SDouDouble;

        /**
         * Decodes a C2SDouDouble message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SDouDouble
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SDouDouble;

        /**
         * Verifies a C2SDouDouble message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SDouDouble message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SDouDouble
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SDouDouble;

        /**
         * Creates a plain object from a C2SDouDouble message. Also converts values to other types if specified.
         * @param message C2SDouDouble
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SDouDouble, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SDouDouble to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouDouble. */
    interface IS2CDouDouble {

        /** S2CDouDouble pos */
        pos?: (number|null);

        /** S2CDouDouble type */
        type?: (pb.DouDoubleType|null);
    }

    /** Represents a S2CDouDouble. */
    class S2CDouDouble implements IS2CDouDouble {

        /**
         * Constructs a new S2CDouDouble.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouDouble);

        /** S2CDouDouble pos. */
        public pos: number;

        /** S2CDouDouble type. */
        public type: pb.DouDoubleType;

        /**
         * Creates a new S2CDouDouble instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouDouble instance
         */
        public static create(properties?: pb.IS2CDouDouble): pb.S2CDouDouble;

        /**
         * Encodes the specified S2CDouDouble message. Does not implicitly {@link pb.S2CDouDouble.verify|verify} messages.
         * @param message S2CDouDouble message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouDouble, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouDouble message, length delimited. Does not implicitly {@link pb.S2CDouDouble.verify|verify} messages.
         * @param message S2CDouDouble message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouDouble, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouDouble message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouDouble
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouDouble;

        /**
         * Decodes a S2CDouDouble message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouDouble
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouDouble;

        /**
         * Verifies a S2CDouDouble message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouDouble message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouDouble
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouDouble;

        /**
         * Creates a plain object from a S2CDouDouble message. Also converts values to other types if specified.
         * @param message S2CDouDouble
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouDouble, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouDouble to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouPlayPos. */
    interface IS2CDouPlayPos {

        /** S2CDouPlayPos pos */
        pos?: (number|null);

        /** S2CDouPlayPos interval */
        interval?: (number|null);

        /** S2CDouPlayPos first */
        first?: (boolean|null);

        /** S2CDouPlayPos group */
        group?: (pb.IDouCardGroup|null);
    }

    /** Represents a S2CDouPlayPos. */
    class S2CDouPlayPos implements IS2CDouPlayPos {

        /**
         * Constructs a new S2CDouPlayPos.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouPlayPos);

        /** S2CDouPlayPos pos. */
        public pos: number;

        /** S2CDouPlayPos interval. */
        public interval: number;

        /** S2CDouPlayPos first. */
        public first: boolean;

        /** S2CDouPlayPos group. */
        public group?: (pb.IDouCardGroup|null);

        /**
         * Creates a new S2CDouPlayPos instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouPlayPos instance
         */
        public static create(properties?: pb.IS2CDouPlayPos): pb.S2CDouPlayPos;

        /**
         * Encodes the specified S2CDouPlayPos message. Does not implicitly {@link pb.S2CDouPlayPos.verify|verify} messages.
         * @param message S2CDouPlayPos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouPlayPos, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouPlayPos message, length delimited. Does not implicitly {@link pb.S2CDouPlayPos.verify|verify} messages.
         * @param message S2CDouPlayPos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouPlayPos, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouPlayPos message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouPlayPos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouPlayPos;

        /**
         * Decodes a S2CDouPlayPos message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouPlayPos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouPlayPos;

        /**
         * Verifies a S2CDouPlayPos message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouPlayPos message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouPlayPos
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouPlayPos;

        /**
         * Creates a plain object from a S2CDouPlayPos message. Also converts values to other types if specified.
         * @param message S2CDouPlayPos
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouPlayPos, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouPlayPos to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SDouPlayCards. */
    interface IC2SDouPlayCards {

        /** C2SDouPlayCards cards */
        cards?: (number[]|null);
    }

    /** Represents a C2SDouPlayCards. */
    class C2SDouPlayCards implements IC2SDouPlayCards {

        /**
         * Constructs a new C2SDouPlayCards.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SDouPlayCards);

        /** C2SDouPlayCards cards. */
        public cards: number[];

        /**
         * Creates a new C2SDouPlayCards instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SDouPlayCards instance
         */
        public static create(properties?: pb.IC2SDouPlayCards): pb.C2SDouPlayCards;

        /**
         * Encodes the specified C2SDouPlayCards message. Does not implicitly {@link pb.C2SDouPlayCards.verify|verify} messages.
         * @param message C2SDouPlayCards message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SDouPlayCards, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SDouPlayCards message, length delimited. Does not implicitly {@link pb.C2SDouPlayCards.verify|verify} messages.
         * @param message C2SDouPlayCards message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SDouPlayCards, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SDouPlayCards message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SDouPlayCards
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SDouPlayCards;

        /**
         * Decodes a C2SDouPlayCards message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SDouPlayCards
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SDouPlayCards;

        /**
         * Verifies a C2SDouPlayCards message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SDouPlayCards message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SDouPlayCards
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SDouPlayCards;

        /**
         * Creates a plain object from a C2SDouPlayCards message. Also converts values to other types if specified.
         * @param message C2SDouPlayCards
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SDouPlayCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SDouPlayCards to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouPlayCards. */
    interface IS2CDouPlayCards {

        /** S2CDouPlayCards ec */
        ec?: (number|null);

        /** S2CDouPlayCards pos */
        pos?: (number|null);

        /** S2CDouPlayCards cards */
        cards?: (number[]|null);

        /** S2CDouPlayCards cardType */
        cardType?: (pb.DouCardType|null);

        /** S2CDouPlayCards leftCount */
        leftCount?: (number|null);
    }

    /** Represents a S2CDouPlayCards. */
    class S2CDouPlayCards implements IS2CDouPlayCards {

        /**
         * Constructs a new S2CDouPlayCards.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouPlayCards);

        /** S2CDouPlayCards ec. */
        public ec: number;

        /** S2CDouPlayCards pos. */
        public pos: number;

        /** S2CDouPlayCards cards. */
        public cards: number[];

        /** S2CDouPlayCards cardType. */
        public cardType: pb.DouCardType;

        /** S2CDouPlayCards leftCount. */
        public leftCount: number;

        /**
         * Creates a new S2CDouPlayCards instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouPlayCards instance
         */
        public static create(properties?: pb.IS2CDouPlayCards): pb.S2CDouPlayCards;

        /**
         * Encodes the specified S2CDouPlayCards message. Does not implicitly {@link pb.S2CDouPlayCards.verify|verify} messages.
         * @param message S2CDouPlayCards message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouPlayCards, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouPlayCards message, length delimited. Does not implicitly {@link pb.S2CDouPlayCards.verify|verify} messages.
         * @param message S2CDouPlayCards message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouPlayCards, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouPlayCards message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouPlayCards
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouPlayCards;

        /**
         * Decodes a S2CDouPlayCards message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouPlayCards
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouPlayCards;

        /**
         * Verifies a S2CDouPlayCards message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouPlayCards message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouPlayCards
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouPlayCards;

        /**
         * Creates a plain object from a S2CDouPlayCards message. Also converts values to other types if specified.
         * @param message S2CDouPlayCards
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouPlayCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouPlayCards to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouSettlement. */
    interface IS2CDouSettlement {

        /** S2CDouSettlement winType */
        winType?: (pb.DouWinType|null);

        /** S2CDouSettlement springType */
        springType?: (pb.SpringType|null);

        /** S2CDouSettlement settleInfo */
        settleInfo?: (pb.IDouSettleInfo[]|null);
    }

    /** Represents a S2CDouSettlement. */
    class S2CDouSettlement implements IS2CDouSettlement {

        /**
         * Constructs a new S2CDouSettlement.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouSettlement);

        /** S2CDouSettlement winType. */
        public winType: pb.DouWinType;

        /** S2CDouSettlement springType. */
        public springType: pb.SpringType;

        /** S2CDouSettlement settleInfo. */
        public settleInfo: pb.IDouSettleInfo[];

        /**
         * Creates a new S2CDouSettlement instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouSettlement instance
         */
        public static create(properties?: pb.IS2CDouSettlement): pb.S2CDouSettlement;

        /**
         * Encodes the specified S2CDouSettlement message. Does not implicitly {@link pb.S2CDouSettlement.verify|verify} messages.
         * @param message S2CDouSettlement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouSettlement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouSettlement message, length delimited. Does not implicitly {@link pb.S2CDouSettlement.verify|verify} messages.
         * @param message S2CDouSettlement message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouSettlement, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouSettlement message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouSettlement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouSettlement;

        /**
         * Decodes a S2CDouSettlement message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouSettlement
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouSettlement;

        /**
         * Verifies a S2CDouSettlement message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouSettlement message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouSettlement
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouSettlement;

        /**
         * Creates a plain object from a S2CDouSettlement message. Also converts values to other types if specified.
         * @param message S2CDouSettlement
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouSettlement, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouSettlement to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SDouSetTrusteeship. */
    interface IC2SDouSetTrusteeship {

        /** C2SDouSetTrusteeship enable */
        enable?: (boolean|null);
    }

    /** Represents a C2SDouSetTrusteeship. */
    class C2SDouSetTrusteeship implements IC2SDouSetTrusteeship {

        /**
         * Constructs a new C2SDouSetTrusteeship.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SDouSetTrusteeship);

        /** C2SDouSetTrusteeship enable. */
        public enable: boolean;

        /**
         * Creates a new C2SDouSetTrusteeship instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SDouSetTrusteeship instance
         */
        public static create(properties?: pb.IC2SDouSetTrusteeship): pb.C2SDouSetTrusteeship;

        /**
         * Encodes the specified C2SDouSetTrusteeship message. Does not implicitly {@link pb.C2SDouSetTrusteeship.verify|verify} messages.
         * @param message C2SDouSetTrusteeship message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SDouSetTrusteeship, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SDouSetTrusteeship message, length delimited. Does not implicitly {@link pb.C2SDouSetTrusteeship.verify|verify} messages.
         * @param message C2SDouSetTrusteeship message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SDouSetTrusteeship, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SDouSetTrusteeship message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SDouSetTrusteeship
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SDouSetTrusteeship;

        /**
         * Decodes a C2SDouSetTrusteeship message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SDouSetTrusteeship
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SDouSetTrusteeship;

        /**
         * Verifies a C2SDouSetTrusteeship message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SDouSetTrusteeship message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SDouSetTrusteeship
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SDouSetTrusteeship;

        /**
         * Creates a plain object from a C2SDouSetTrusteeship message. Also converts values to other types if specified.
         * @param message C2SDouSetTrusteeship
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SDouSetTrusteeship, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SDouSetTrusteeship to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouSetTrusteeship. */
    interface IS2CDouSetTrusteeship {

        /** S2CDouSetTrusteeship pos */
        pos?: (number|null);

        /** S2CDouSetTrusteeship enable */
        enable?: (boolean|null);
    }

    /** Represents a S2CDouSetTrusteeship. */
    class S2CDouSetTrusteeship implements IS2CDouSetTrusteeship {

        /**
         * Constructs a new S2CDouSetTrusteeship.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouSetTrusteeship);

        /** S2CDouSetTrusteeship pos. */
        public pos: number;

        /** S2CDouSetTrusteeship enable. */
        public enable: boolean;

        /**
         * Creates a new S2CDouSetTrusteeship instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouSetTrusteeship instance
         */
        public static create(properties?: pb.IS2CDouSetTrusteeship): pb.S2CDouSetTrusteeship;

        /**
         * Encodes the specified S2CDouSetTrusteeship message. Does not implicitly {@link pb.S2CDouSetTrusteeship.verify|verify} messages.
         * @param message S2CDouSetTrusteeship message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouSetTrusteeship, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouSetTrusteeship message, length delimited. Does not implicitly {@link pb.S2CDouSetTrusteeship.verify|verify} messages.
         * @param message S2CDouSetTrusteeship message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouSetTrusteeship, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouSetTrusteeship message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouSetTrusteeship
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouSetTrusteeship;

        /**
         * Decodes a S2CDouSetTrusteeship message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouSetTrusteeship
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouSetTrusteeship;

        /**
         * Verifies a S2CDouSetTrusteeship message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouSetTrusteeship message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouSetTrusteeship
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouSetTrusteeship;

        /**
         * Creates a plain object from a S2CDouSetTrusteeship message. Also converts values to other types if specified.
         * @param message S2CDouSetTrusteeship
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouSetTrusteeship, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouSetTrusteeship to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouBombDouble. */
    interface IS2CDouBombDouble {

        /** S2CDouBombDouble multiple */
        multiple?: (number|null);
    }

    /** Represents a S2CDouBombDouble. */
    class S2CDouBombDouble implements IS2CDouBombDouble {

        /**
         * Constructs a new S2CDouBombDouble.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouBombDouble);

        /** S2CDouBombDouble multiple. */
        public multiple: number;

        /**
         * Creates a new S2CDouBombDouble instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouBombDouble instance
         */
        public static create(properties?: pb.IS2CDouBombDouble): pb.S2CDouBombDouble;

        /**
         * Encodes the specified S2CDouBombDouble message. Does not implicitly {@link pb.S2CDouBombDouble.verify|verify} messages.
         * @param message S2CDouBombDouble message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouBombDouble, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouBombDouble message, length delimited. Does not implicitly {@link pb.S2CDouBombDouble.verify|verify} messages.
         * @param message S2CDouBombDouble message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouBombDouble, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouBombDouble message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouBombDouble
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouBombDouble;

        /**
         * Decodes a S2CDouBombDouble message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouBombDouble
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouBombDouble;

        /**
         * Verifies a S2CDouBombDouble message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouBombDouble message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouBombDouble
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouBombDouble;

        /**
         * Creates a plain object from a S2CDouBombDouble message. Also converts values to other types if specified.
         * @param message S2CDouBombDouble
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouBombDouble, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouBombDouble to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouMultiple. */
    interface IS2CDouMultiple {

        /** S2CDouMultiple multiple */
        multiple?: (number|null);
    }

    /** Represents a S2CDouMultiple. */
    class S2CDouMultiple implements IS2CDouMultiple {

        /**
         * Constructs a new S2CDouMultiple.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouMultiple);

        /** S2CDouMultiple multiple. */
        public multiple: number;

        /**
         * Creates a new S2CDouMultiple instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouMultiple instance
         */
        public static create(properties?: pb.IS2CDouMultiple): pb.S2CDouMultiple;

        /**
         * Encodes the specified S2CDouMultiple message. Does not implicitly {@link pb.S2CDouMultiple.verify|verify} messages.
         * @param message S2CDouMultiple message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouMultiple, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouMultiple message, length delimited. Does not implicitly {@link pb.S2CDouMultiple.verify|verify} messages.
         * @param message S2CDouMultiple message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouMultiple, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouMultiple message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouMultiple
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouMultiple;

        /**
         * Decodes a S2CDouMultiple message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouMultiple
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouMultiple;

        /**
         * Verifies a S2CDouMultiple message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouMultiple message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouMultiple
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouMultiple;

        /**
         * Creates a plain object from a S2CDouMultiple message. Also converts values to other types if specified.
         * @param message S2CDouMultiple
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouMultiple, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouMultiple to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouLiuJu. */
    interface IS2CDouLiuJu {

        /** S2CDouLiuJu cards */
        cards?: (pb.IDouPlayerCards[]|null);
    }

    /** Represents a S2CDouLiuJu. */
    class S2CDouLiuJu implements IS2CDouLiuJu {

        /**
         * Constructs a new S2CDouLiuJu.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouLiuJu);

        /** S2CDouLiuJu cards. */
        public cards: pb.IDouPlayerCards[];

        /**
         * Creates a new S2CDouLiuJu instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouLiuJu instance
         */
        public static create(properties?: pb.IS2CDouLiuJu): pb.S2CDouLiuJu;

        /**
         * Encodes the specified S2CDouLiuJu message. Does not implicitly {@link pb.S2CDouLiuJu.verify|verify} messages.
         * @param message S2CDouLiuJu message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouLiuJu, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouLiuJu message, length delimited. Does not implicitly {@link pb.S2CDouLiuJu.verify|verify} messages.
         * @param message S2CDouLiuJu message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouLiuJu, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouLiuJu message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouLiuJu
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouLiuJu;

        /**
         * Decodes a S2CDouLiuJu message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouLiuJu
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouLiuJu;

        /**
         * Verifies a S2CDouLiuJu message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouLiuJu message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouLiuJu
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouLiuJu;

        /**
         * Creates a plain object from a S2CDouLiuJu message. Also converts values to other types if specified.
         * @param message S2CDouLiuJu
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouLiuJu, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouLiuJu to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouRestart. */
    interface IS2CDouRestart {
    }

    /** Represents a S2CDouRestart. */
    class S2CDouRestart implements IS2CDouRestart {

        /**
         * Constructs a new S2CDouRestart.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouRestart);

        /**
         * Creates a new S2CDouRestart instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouRestart instance
         */
        public static create(properties?: pb.IS2CDouRestart): pb.S2CDouRestart;

        /**
         * Encodes the specified S2CDouRestart message. Does not implicitly {@link pb.S2CDouRestart.verify|verify} messages.
         * @param message S2CDouRestart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouRestart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouRestart message, length delimited. Does not implicitly {@link pb.S2CDouRestart.verify|verify} messages.
         * @param message S2CDouRestart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouRestart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouRestart message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouRestart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouRestart;

        /**
         * Decodes a S2CDouRestart message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouRestart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouRestart;

        /**
         * Verifies a S2CDouRestart message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouRestart message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouRestart
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouRestart;

        /**
         * Creates a plain object from a S2CDouRestart message. Also converts values to other types if specified.
         * @param message S2CDouRestart
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouRestart, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouRestart to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SDouStartNext. */
    interface IC2SDouStartNext {
    }

    /** Represents a C2SDouStartNext. */
    class C2SDouStartNext implements IC2SDouStartNext {

        /**
         * Constructs a new C2SDouStartNext.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SDouStartNext);

        /**
         * Creates a new C2SDouStartNext instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SDouStartNext instance
         */
        public static create(properties?: pb.IC2SDouStartNext): pb.C2SDouStartNext;

        /**
         * Encodes the specified C2SDouStartNext message. Does not implicitly {@link pb.C2SDouStartNext.verify|verify} messages.
         * @param message C2SDouStartNext message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SDouStartNext, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SDouStartNext message, length delimited. Does not implicitly {@link pb.C2SDouStartNext.verify|verify} messages.
         * @param message C2SDouStartNext message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SDouStartNext, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SDouStartNext message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SDouStartNext
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SDouStartNext;

        /**
         * Decodes a C2SDouStartNext message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SDouStartNext
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SDouStartNext;

        /**
         * Verifies a C2SDouStartNext message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SDouStartNext message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SDouStartNext
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SDouStartNext;

        /**
         * Creates a plain object from a C2SDouStartNext message. Also converts values to other types if specified.
         * @param message C2SDouStartNext
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SDouStartNext, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SDouStartNext to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouStartNext. */
    interface IS2CDouStartNext {

        /** S2CDouStartNext pos */
        pos?: (number|null);

        /** S2CDouStartNext round */
        round?: (number|null);
    }

    /** Represents a S2CDouStartNext. */
    class S2CDouStartNext implements IS2CDouStartNext {

        /**
         * Constructs a new S2CDouStartNext.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouStartNext);

        /** S2CDouStartNext pos. */
        public pos: number;

        /** S2CDouStartNext round. */
        public round: number;

        /**
         * Creates a new S2CDouStartNext instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouStartNext instance
         */
        public static create(properties?: pb.IS2CDouStartNext): pb.S2CDouStartNext;

        /**
         * Encodes the specified S2CDouStartNext message. Does not implicitly {@link pb.S2CDouStartNext.verify|verify} messages.
         * @param message S2CDouStartNext message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouStartNext, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouStartNext message, length delimited. Does not implicitly {@link pb.S2CDouStartNext.verify|verify} messages.
         * @param message S2CDouStartNext message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouStartNext, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouStartNext message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouStartNext
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouStartNext;

        /**
         * Decodes a S2CDouStartNext message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouStartNext
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouStartNext;

        /**
         * Verifies a S2CDouStartNext message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouStartNext message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouStartNext
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouStartNext;

        /**
         * Creates a plain object from a S2CDouStartNext message. Also converts values to other types if specified.
         * @param message S2CDouStartNext
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouStartNext, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouStartNext to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SDouSeeFinal. */
    interface IC2SDouSeeFinal {
    }

    /** Represents a C2SDouSeeFinal. */
    class C2SDouSeeFinal implements IC2SDouSeeFinal {

        /**
         * Constructs a new C2SDouSeeFinal.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SDouSeeFinal);

        /**
         * Creates a new C2SDouSeeFinal instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SDouSeeFinal instance
         */
        public static create(properties?: pb.IC2SDouSeeFinal): pb.C2SDouSeeFinal;

        /**
         * Encodes the specified C2SDouSeeFinal message. Does not implicitly {@link pb.C2SDouSeeFinal.verify|verify} messages.
         * @param message C2SDouSeeFinal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SDouSeeFinal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SDouSeeFinal message, length delimited. Does not implicitly {@link pb.C2SDouSeeFinal.verify|verify} messages.
         * @param message C2SDouSeeFinal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SDouSeeFinal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SDouSeeFinal message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SDouSeeFinal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SDouSeeFinal;

        /**
         * Decodes a C2SDouSeeFinal message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SDouSeeFinal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SDouSeeFinal;

        /**
         * Verifies a C2SDouSeeFinal message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SDouSeeFinal message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SDouSeeFinal
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SDouSeeFinal;

        /**
         * Creates a plain object from a C2SDouSeeFinal message. Also converts values to other types if specified.
         * @param message C2SDouSeeFinal
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SDouSeeFinal, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SDouSeeFinal to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouViewCards. */
    interface IS2CDouViewCards {

        /** S2CDouViewCards targetPos */
        targetPos?: (number|null);

        /** S2CDouViewCards cards */
        cards?: (number[]|null);
    }

    /** Represents a S2CDouViewCards. */
    class S2CDouViewCards implements IS2CDouViewCards {

        /**
         * Constructs a new S2CDouViewCards.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouViewCards);

        /** S2CDouViewCards targetPos. */
        public targetPos: number;

        /** S2CDouViewCards cards. */
        public cards: number[];

        /**
         * Creates a new S2CDouViewCards instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouViewCards instance
         */
        public static create(properties?: pb.IS2CDouViewCards): pb.S2CDouViewCards;

        /**
         * Encodes the specified S2CDouViewCards message. Does not implicitly {@link pb.S2CDouViewCards.verify|verify} messages.
         * @param message S2CDouViewCards message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouViewCards, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouViewCards message, length delimited. Does not implicitly {@link pb.S2CDouViewCards.verify|verify} messages.
         * @param message S2CDouViewCards message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouViewCards, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouViewCards message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouViewCards
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouViewCards;

        /**
         * Decodes a S2CDouViewCards message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouViewCards
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouViewCards;

        /**
         * Verifies a S2CDouViewCards message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouViewCards message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouViewCards
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouViewCards;

        /**
         * Creates a plain object from a S2CDouViewCards message. Also converts values to other types if specified.
         * @param message S2CDouViewCards
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouViewCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouViewCards to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouSeeFinal. */
    interface IS2CDouSeeFinal {

        /** S2CDouSeeFinal pos */
        pos?: (number|null);

        /** S2CDouSeeFinal cards */
        cards?: (number[]|null);
    }

    /** Represents a S2CDouSeeFinal. */
    class S2CDouSeeFinal implements IS2CDouSeeFinal {

        /**
         * Constructs a new S2CDouSeeFinal.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouSeeFinal);

        /** S2CDouSeeFinal pos. */
        public pos: number;

        /** S2CDouSeeFinal cards. */
        public cards: number[];

        /**
         * Creates a new S2CDouSeeFinal instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouSeeFinal instance
         */
        public static create(properties?: pb.IS2CDouSeeFinal): pb.S2CDouSeeFinal;

        /**
         * Encodes the specified S2CDouSeeFinal message. Does not implicitly {@link pb.S2CDouSeeFinal.verify|verify} messages.
         * @param message S2CDouSeeFinal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouSeeFinal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouSeeFinal message, length delimited. Does not implicitly {@link pb.S2CDouSeeFinal.verify|verify} messages.
         * @param message S2CDouSeeFinal message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouSeeFinal, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouSeeFinal message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouSeeFinal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouSeeFinal;

        /**
         * Decodes a S2CDouSeeFinal message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouSeeFinal
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouSeeFinal;

        /**
         * Verifies a S2CDouSeeFinal message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouSeeFinal message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouSeeFinal
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouSeeFinal;

        /**
         * Creates a plain object from a S2CDouSeeFinal message. Also converts values to other types if specified.
         * @param message S2CDouSeeFinal
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouSeeFinal, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouSeeFinal to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SDouUseRecorder. */
    interface IC2SDouUseRecorder {
    }

    /** Represents a C2SDouUseRecorder. */
    class C2SDouUseRecorder implements IC2SDouUseRecorder {

        /**
         * Constructs a new C2SDouUseRecorder.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SDouUseRecorder);

        /**
         * Creates a new C2SDouUseRecorder instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SDouUseRecorder instance
         */
        public static create(properties?: pb.IC2SDouUseRecorder): pb.C2SDouUseRecorder;

        /**
         * Encodes the specified C2SDouUseRecorder message. Does not implicitly {@link pb.C2SDouUseRecorder.verify|verify} messages.
         * @param message C2SDouUseRecorder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SDouUseRecorder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SDouUseRecorder message, length delimited. Does not implicitly {@link pb.C2SDouUseRecorder.verify|verify} messages.
         * @param message C2SDouUseRecorder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SDouUseRecorder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SDouUseRecorder message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SDouUseRecorder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SDouUseRecorder;

        /**
         * Decodes a C2SDouUseRecorder message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SDouUseRecorder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SDouUseRecorder;

        /**
         * Verifies a C2SDouUseRecorder message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SDouUseRecorder message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SDouUseRecorder
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SDouUseRecorder;

        /**
         * Creates a plain object from a C2SDouUseRecorder message. Also converts values to other types if specified.
         * @param message C2SDouUseRecorder
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SDouUseRecorder, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SDouUseRecorder to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouUseRecorder. */
    interface IS2CDouUseRecorder {
    }

    /** Represents a S2CDouUseRecorder. */
    class S2CDouUseRecorder implements IS2CDouUseRecorder {

        /**
         * Constructs a new S2CDouUseRecorder.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouUseRecorder);

        /**
         * Creates a new S2CDouUseRecorder instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouUseRecorder instance
         */
        public static create(properties?: pb.IS2CDouUseRecorder): pb.S2CDouUseRecorder;

        /**
         * Encodes the specified S2CDouUseRecorder message. Does not implicitly {@link pb.S2CDouUseRecorder.verify|verify} messages.
         * @param message S2CDouUseRecorder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouUseRecorder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouUseRecorder message, length delimited. Does not implicitly {@link pb.S2CDouUseRecorder.verify|verify} messages.
         * @param message S2CDouUseRecorder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouUseRecorder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouUseRecorder message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouUseRecorder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouUseRecorder;

        /**
         * Decodes a S2CDouUseRecorder message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouUseRecorder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouUseRecorder;

        /**
         * Verifies a S2CDouUseRecorder message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouUseRecorder message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouUseRecorder
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouUseRecorder;

        /**
         * Creates a plain object from a S2CDouUseRecorder message. Also converts values to other types if specified.
         * @param message S2CDouUseRecorder
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouUseRecorder, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouUseRecorder to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDouRecorderInfo. */
    interface IS2CDouRecorderInfo {

        /** S2CDouRecorderInfo items */
        items?: (pb.IDouCardRecord[]|null);
    }

    /** Represents a S2CDouRecorderInfo. */
    class S2CDouRecorderInfo implements IS2CDouRecorderInfo {

        /**
         * Constructs a new S2CDouRecorderInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDouRecorderInfo);

        /** S2CDouRecorderInfo items. */
        public items: pb.IDouCardRecord[];

        /**
         * Creates a new S2CDouRecorderInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDouRecorderInfo instance
         */
        public static create(properties?: pb.IS2CDouRecorderInfo): pb.S2CDouRecorderInfo;

        /**
         * Encodes the specified S2CDouRecorderInfo message. Does not implicitly {@link pb.S2CDouRecorderInfo.verify|verify} messages.
         * @param message S2CDouRecorderInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDouRecorderInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDouRecorderInfo message, length delimited. Does not implicitly {@link pb.S2CDouRecorderInfo.verify|verify} messages.
         * @param message S2CDouRecorderInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDouRecorderInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDouRecorderInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDouRecorderInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDouRecorderInfo;

        /**
         * Decodes a S2CDouRecorderInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDouRecorderInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDouRecorderInfo;

        /**
         * Verifies a S2CDouRecorderInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDouRecorderInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDouRecorderInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDouRecorderInfo;

        /**
         * Creates a plain object from a S2CDouRecorderInfo message. Also converts values to other types if specified.
         * @param message S2CDouRecorderInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDouRecorderInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDouRecorderInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TableInfo. */
    interface ITableInfo {

        /** TableInfo gameType */
        gameType?: (number|null);

        /** TableInfo name */
        name?: (string|null);

        /** TableInfo cfgId */
        cfgId?: (number|null);

        /** TableInfo changCiName */
        changCiName?: (string|null);

        /** TableInfo radix */
        radix?: (number|Long|null);

        /** TableInfo playerNum */
        playerNum?: (number|null);

        /** TableInfo inviteable */
        inviteable?: (boolean|null);

        /** TableInfo douXiPai */
        douXiPai?: (boolean|null);

        /** TableInfo cond */
        cond?: (string|null);

        /** TableInfo recommCurrency */
        recommCurrency?: (pb.IValRange|null);

        /** TableInfo EnterCurrency */
        EnterCurrency?: (pb.IValRange|null);
    }

    /** Represents a TableInfo. */
    class TableInfo implements ITableInfo {

        /**
         * Constructs a new TableInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITableInfo);

        /** TableInfo gameType. */
        public gameType: number;

        /** TableInfo name. */
        public name: string;

        /** TableInfo cfgId. */
        public cfgId: number;

        /** TableInfo changCiName. */
        public changCiName: string;

        /** TableInfo radix. */
        public radix: (number|Long);

        /** TableInfo playerNum. */
        public playerNum: number;

        /** TableInfo inviteable. */
        public inviteable: boolean;

        /** TableInfo douXiPai. */
        public douXiPai: boolean;

        /** TableInfo cond. */
        public cond: string;

        /** TableInfo recommCurrency. */
        public recommCurrency?: (pb.IValRange|null);

        /** TableInfo EnterCurrency. */
        public EnterCurrency?: (pb.IValRange|null);

        /**
         * Creates a new TableInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TableInfo instance
         */
        public static create(properties?: pb.ITableInfo): pb.TableInfo;

        /**
         * Encodes the specified TableInfo message. Does not implicitly {@link pb.TableInfo.verify|verify} messages.
         * @param message TableInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TableInfo message, length delimited. Does not implicitly {@link pb.TableInfo.verify|verify} messages.
         * @param message TableInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TableInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TableInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.TableInfo;

        /**
         * Decodes a TableInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TableInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.TableInfo;

        /**
         * Verifies a TableInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TableInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TableInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.TableInfo;

        /**
         * Creates a plain object from a TableInfo message. Also converts values to other types if specified.
         * @param message TableInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.TableInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TableInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TablePlayer. */
    interface ITablePlayer {

        /** TablePlayer player */
        player?: (pb.IPlayer|null);

        /** TablePlayer pos */
        pos?: (number|null);

        /** TablePlayer score */
        score?: (number|Long|null);
    }

    /** Represents a TablePlayer. */
    class TablePlayer implements ITablePlayer {

        /**
         * Constructs a new TablePlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITablePlayer);

        /** TablePlayer player. */
        public player?: (pb.IPlayer|null);

        /** TablePlayer pos. */
        public pos: number;

        /** TablePlayer score. */
        public score: (number|Long);

        /**
         * Creates a new TablePlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TablePlayer instance
         */
        public static create(properties?: pb.ITablePlayer): pb.TablePlayer;

        /**
         * Encodes the specified TablePlayer message. Does not implicitly {@link pb.TablePlayer.verify|verify} messages.
         * @param message TablePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITablePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TablePlayer message, length delimited. Does not implicitly {@link pb.TablePlayer.verify|verify} messages.
         * @param message TablePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITablePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TablePlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TablePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.TablePlayer;

        /**
         * Decodes a TablePlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TablePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.TablePlayer;

        /**
         * Verifies a TablePlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TablePlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TablePlayer
         */
        public static fromObject(object: { [k: string]: any }): pb.TablePlayer;

        /**
         * Creates a plain object from a TablePlayer message. Also converts values to other types if specified.
         * @param message TablePlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.TablePlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TablePlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TableCommon. */
    interface ITableCommon {

        /** TableCommon tableId */
        tableId?: (number|null);

        /** TableCommon catName */
        catName?: (string|null);

        /** TableCommon gameType */
        gameType?: (number|null);

        /** TableCommon players */
        players?: (pb.ITablePlayer[]|null);

        /** TableCommon ct */
        ct?: (pb.CurrencyType|null);

        /** TableCommon tablecfgId */
        tablecfgId?: (number|null);

        /** TableCommon playerCount */
        playerCount?: (number|null);

        /** TableCommon tableCat */
        tableCat?: (number|null);

        /** TableCommon inviteable */
        inviteable?: (boolean|null);
    }

    /** Represents a TableCommon. */
    class TableCommon implements ITableCommon {

        /**
         * Constructs a new TableCommon.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ITableCommon);

        /** TableCommon tableId. */
        public tableId: number;

        /** TableCommon catName. */
        public catName: string;

        /** TableCommon gameType. */
        public gameType: number;

        /** TableCommon players. */
        public players: pb.ITablePlayer[];

        /** TableCommon ct. */
        public ct: pb.CurrencyType;

        /** TableCommon tablecfgId. */
        public tablecfgId: number;

        /** TableCommon playerCount. */
        public playerCount: number;

        /** TableCommon tableCat. */
        public tableCat: number;

        /** TableCommon inviteable. */
        public inviteable: boolean;

        /**
         * Creates a new TableCommon instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TableCommon instance
         */
        public static create(properties?: pb.ITableCommon): pb.TableCommon;

        /**
         * Encodes the specified TableCommon message. Does not implicitly {@link pb.TableCommon.verify|verify} messages.
         * @param message TableCommon message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ITableCommon, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TableCommon message, length delimited. Does not implicitly {@link pb.TableCommon.verify|verify} messages.
         * @param message TableCommon message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ITableCommon, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TableCommon message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TableCommon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.TableCommon;

        /**
         * Decodes a TableCommon message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TableCommon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.TableCommon;

        /**
         * Verifies a TableCommon message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TableCommon message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TableCommon
         */
        public static fromObject(object: { [k: string]: any }): pb.TableCommon;

        /**
         * Creates a plain object from a TableCommon message. Also converts values to other types if specified.
         * @param message TableCommon
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.TableCommon, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TableCommon to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** PlayerLoc enum. */
    enum PlayerLoc {
        PlayerLoc_Lobby = 0,
        PlayerLoc_Game = 1
    }

    /** Properties of a Player. */
    interface IPlayer {

        /** Player id */
        id?: (number|Long|null);

        /** Player guid */
        guid?: (number|Long|null);

        /** Player account */
        account?: (string|null);

        /** Player name */
        name?: (string|null);

        /** Player portraits */
        portraits?: (string|null);

        /** Player trueName */
        trueName?: (string|null);

        /** Player idNum */
        idNum?: (string|null);

        /** Player attrs */
        attrs?: ({ [k: string]: (number|Long) }|null);

        /** Player currencies */
        currencies?: ({ [k: string]: (number|Long) }|null);

        /** Player groups */
        groups?: (pb.IGroupValue[]|null);

        /** Player safeBox */
        safeBox?: (Uint8Array|null);

        /** Player lbs */
        lbs?: (string|null);

        /** Player provName */
        provName?: (string|null);

        /** Player cityName */
        cityName?: (string|null);

        /** Player location */
        location?: (pb.PlayerLoc|null);
    }

    /** Represents a Player. */
    class Player implements IPlayer {

        /**
         * Constructs a new Player.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPlayer);

        /** Player id. */
        public id: (number|Long);

        /** Player guid. */
        public guid: (number|Long);

        /** Player account. */
        public account: string;

        /** Player name. */
        public name: string;

        /** Player portraits. */
        public portraits: string;

        /** Player trueName. */
        public trueName: string;

        /** Player idNum. */
        public idNum: string;

        /** Player attrs. */
        public attrs: { [k: string]: (number|Long) };

        /** Player currencies. */
        public currencies: { [k: string]: (number|Long) };

        /** Player groups. */
        public groups: pb.IGroupValue[];

        /** Player safeBox. */
        public safeBox: Uint8Array;

        /** Player lbs. */
        public lbs: string;

        /** Player provName. */
        public provName: string;

        /** Player cityName. */
        public cityName: string;

        /** Player location. */
        public location: pb.PlayerLoc;

        /**
         * Creates a new Player instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Player instance
         */
        public static create(properties?: pb.IPlayer): pb.Player;

        /**
         * Encodes the specified Player message. Does not implicitly {@link pb.Player.verify|verify} messages.
         * @param message Player message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Player message, length delimited. Does not implicitly {@link pb.Player.verify|verify} messages.
         * @param message Player message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Player message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Player
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.Player;

        /**
         * Decodes a Player message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Player
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.Player;

        /**
         * Verifies a Player message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Player message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Player
         */
        public static fromObject(object: { [k: string]: any }): pb.Player;

        /**
         * Creates a plain object from a Player message. Also converts values to other types if specified.
         * @param message Player
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.Player, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Player to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CUpdatePlayer. */
    interface IS2CUpdatePlayer {

        /** S2CUpdatePlayer data */
        data?: (pb.IPlayer|null);
    }

    /** Represents a S2CUpdatePlayer. */
    class S2CUpdatePlayer implements IS2CUpdatePlayer {

        /**
         * Constructs a new S2CUpdatePlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CUpdatePlayer);

        /** S2CUpdatePlayer data. */
        public data?: (pb.IPlayer|null);

        /**
         * Creates a new S2CUpdatePlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CUpdatePlayer instance
         */
        public static create(properties?: pb.IS2CUpdatePlayer): pb.S2CUpdatePlayer;

        /**
         * Encodes the specified S2CUpdatePlayer message. Does not implicitly {@link pb.S2CUpdatePlayer.verify|verify} messages.
         * @param message S2CUpdatePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CUpdatePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CUpdatePlayer message, length delimited. Does not implicitly {@link pb.S2CUpdatePlayer.verify|verify} messages.
         * @param message S2CUpdatePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CUpdatePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CUpdatePlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CUpdatePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CUpdatePlayer;

        /**
         * Decodes a S2CUpdatePlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CUpdatePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CUpdatePlayer;

        /**
         * Verifies a S2CUpdatePlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CUpdatePlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CUpdatePlayer
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CUpdatePlayer;

        /**
         * Creates a plain object from a S2CUpdatePlayer message. Also converts values to other types if specified.
         * @param message S2CUpdatePlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CUpdatePlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CUpdatePlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CPlayerAttr. */
    interface IS2CPlayerAttr {

        /** S2CPlayerAttr items */
        items?: ({ [k: string]: (number|Long) }|null);
    }

    /** Represents a S2CPlayerAttr. */
    class S2CPlayerAttr implements IS2CPlayerAttr {

        /**
         * Constructs a new S2CPlayerAttr.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CPlayerAttr);

        /** S2CPlayerAttr items. */
        public items: { [k: string]: (number|Long) };

        /**
         * Creates a new S2CPlayerAttr instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CPlayerAttr instance
         */
        public static create(properties?: pb.IS2CPlayerAttr): pb.S2CPlayerAttr;

        /**
         * Encodes the specified S2CPlayerAttr message. Does not implicitly {@link pb.S2CPlayerAttr.verify|verify} messages.
         * @param message S2CPlayerAttr message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CPlayerAttr, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CPlayerAttr message, length delimited. Does not implicitly {@link pb.S2CPlayerAttr.verify|verify} messages.
         * @param message S2CPlayerAttr message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CPlayerAttr, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CPlayerAttr message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CPlayerAttr
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CPlayerAttr;

        /**
         * Decodes a S2CPlayerAttr message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CPlayerAttr
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CPlayerAttr;

        /**
         * Verifies a S2CPlayerAttr message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CPlayerAttr message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CPlayerAttr
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CPlayerAttr;

        /**
         * Creates a plain object from a S2CPlayerAttr message. Also converts values to other types if specified.
         * @param message S2CPlayerAttr
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CPlayerAttr, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CPlayerAttr to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CCurrency. */
    interface IS2CCurrency {

        /** S2CCurrency items */
        items?: ({ [k: string]: (number|Long) }|null);
    }

    /** Represents a S2CCurrency. */
    class S2CCurrency implements IS2CCurrency {

        /**
         * Constructs a new S2CCurrency.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CCurrency);

        /** S2CCurrency items. */
        public items: { [k: string]: (number|Long) };

        /**
         * Creates a new S2CCurrency instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CCurrency instance
         */
        public static create(properties?: pb.IS2CCurrency): pb.S2CCurrency;

        /**
         * Encodes the specified S2CCurrency message. Does not implicitly {@link pb.S2CCurrency.verify|verify} messages.
         * @param message S2CCurrency message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CCurrency, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CCurrency message, length delimited. Does not implicitly {@link pb.S2CCurrency.verify|verify} messages.
         * @param message S2CCurrency message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CCurrency, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CCurrency message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CCurrency
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CCurrency;

        /**
         * Decodes a S2CCurrency message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CCurrency
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CCurrency;

        /**
         * Verifies a S2CCurrency message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CCurrency message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CCurrency
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CCurrency;

        /**
         * Creates a plain object from a S2CCurrency message. Also converts values to other types if specified.
         * @param message S2CCurrency
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CCurrency, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CCurrency to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGroupValue. */
    interface IS2CGroupValue {

        /** S2CGroupValue groups */
        groups?: (pb.IGroupValue[]|null);
    }

    /** Represents a S2CGroupValue. */
    class S2CGroupValue implements IS2CGroupValue {

        /**
         * Constructs a new S2CGroupValue.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGroupValue);

        /** S2CGroupValue groups. */
        public groups: pb.IGroupValue[];

        /**
         * Creates a new S2CGroupValue instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGroupValue instance
         */
        public static create(properties?: pb.IS2CGroupValue): pb.S2CGroupValue;

        /**
         * Encodes the specified S2CGroupValue message. Does not implicitly {@link pb.S2CGroupValue.verify|verify} messages.
         * @param message S2CGroupValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGroupValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGroupValue message, length delimited. Does not implicitly {@link pb.S2CGroupValue.verify|verify} messages.
         * @param message S2CGroupValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGroupValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGroupValue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGroupValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGroupValue;

        /**
         * Decodes a S2CGroupValue message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGroupValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGroupValue;

        /**
         * Verifies a S2CGroupValue message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGroupValue message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGroupValue
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGroupValue;

        /**
         * Creates a plain object from a S2CGroupValue message. Also converts values to other types if specified.
         * @param message S2CGroupValue
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGroupValue, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGroupValue to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SViewPlayer. */
    interface IC2SViewPlayer {

        /** C2SViewPlayer guid */
        guid?: (number|Long|null);
    }

    /** Represents a C2SViewPlayer. */
    class C2SViewPlayer implements IC2SViewPlayer {

        /**
         * Constructs a new C2SViewPlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SViewPlayer);

        /** C2SViewPlayer guid. */
        public guid: (number|Long);

        /**
         * Creates a new C2SViewPlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SViewPlayer instance
         */
        public static create(properties?: pb.IC2SViewPlayer): pb.C2SViewPlayer;

        /**
         * Encodes the specified C2SViewPlayer message. Does not implicitly {@link pb.C2SViewPlayer.verify|verify} messages.
         * @param message C2SViewPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SViewPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SViewPlayer message, length delimited. Does not implicitly {@link pb.C2SViewPlayer.verify|verify} messages.
         * @param message C2SViewPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SViewPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SViewPlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SViewPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SViewPlayer;

        /**
         * Decodes a C2SViewPlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SViewPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SViewPlayer;

        /**
         * Verifies a C2SViewPlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SViewPlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SViewPlayer
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SViewPlayer;

        /**
         * Creates a plain object from a C2SViewPlayer message. Also converts values to other types if specified.
         * @param message C2SViewPlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SViewPlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SViewPlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CViewPlayer. */
    interface IS2CViewPlayer {

        /** S2CViewPlayer data */
        data?: (pb.IPlayer|null);
    }

    /** Represents a S2CViewPlayer. */
    class S2CViewPlayer implements IS2CViewPlayer {

        /**
         * Constructs a new S2CViewPlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CViewPlayer);

        /** S2CViewPlayer data. */
        public data?: (pb.IPlayer|null);

        /**
         * Creates a new S2CViewPlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CViewPlayer instance
         */
        public static create(properties?: pb.IS2CViewPlayer): pb.S2CViewPlayer;

        /**
         * Encodes the specified S2CViewPlayer message. Does not implicitly {@link pb.S2CViewPlayer.verify|verify} messages.
         * @param message S2CViewPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CViewPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CViewPlayer message, length delimited. Does not implicitly {@link pb.S2CViewPlayer.verify|verify} messages.
         * @param message S2CViewPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CViewPlayer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CViewPlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CViewPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CViewPlayer;

        /**
         * Decodes a S2CViewPlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CViewPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CViewPlayer;

        /**
         * Verifies a S2CViewPlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CViewPlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CViewPlayer
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CViewPlayer;

        /**
         * Creates a plain object from a S2CViewPlayer message. Also converts values to other types if specified.
         * @param message S2CViewPlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CViewPlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CViewPlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SSyncState. */
    interface IC2SSyncState {
    }

    /** Represents a C2SSyncState. */
    class C2SSyncState implements IC2SSyncState {

        /**
         * Constructs a new C2SSyncState.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SSyncState);

        /**
         * Creates a new C2SSyncState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SSyncState instance
         */
        public static create(properties?: pb.IC2SSyncState): pb.C2SSyncState;

        /**
         * Encodes the specified C2SSyncState message. Does not implicitly {@link pb.C2SSyncState.verify|verify} messages.
         * @param message C2SSyncState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SSyncState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SSyncState message, length delimited. Does not implicitly {@link pb.C2SSyncState.verify|verify} messages.
         * @param message C2SSyncState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SSyncState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SSyncState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SSyncState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SSyncState;

        /**
         * Decodes a C2SSyncState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SSyncState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SSyncState;

        /**
         * Verifies a C2SSyncState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SSyncState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SSyncState
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SSyncState;

        /**
         * Creates a plain object from a C2SSyncState message. Also converts values to other types if specified.
         * @param message C2SSyncState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SSyncState, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SSyncState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CSyncState. */
    interface IS2CSyncState {

        /** S2CSyncState location */
        location?: (pb.PlayerLoc|null);

        /** S2CSyncState isGame */
        isGame?: (boolean|null);

        /** S2CSyncState gameCat */
        gameCat?: (number|null);

        /** S2CSyncState gameData */
        gameData?: (Uint8Array|null);
    }

    /** Represents a S2CSyncState. */
    class S2CSyncState implements IS2CSyncState {

        /**
         * Constructs a new S2CSyncState.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CSyncState);

        /** S2CSyncState location. */
        public location: pb.PlayerLoc;

        /** S2CSyncState isGame. */
        public isGame: boolean;

        /** S2CSyncState gameCat. */
        public gameCat: number;

        /** S2CSyncState gameData. */
        public gameData: Uint8Array;

        /**
         * Creates a new S2CSyncState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CSyncState instance
         */
        public static create(properties?: pb.IS2CSyncState): pb.S2CSyncState;

        /**
         * Encodes the specified S2CSyncState message. Does not implicitly {@link pb.S2CSyncState.verify|verify} messages.
         * @param message S2CSyncState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CSyncState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CSyncState message, length delimited. Does not implicitly {@link pb.S2CSyncState.verify|verify} messages.
         * @param message S2CSyncState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CSyncState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CSyncState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CSyncState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CSyncState;

        /**
         * Decodes a S2CSyncState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CSyncState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CSyncState;

        /**
         * Verifies a S2CSyncState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CSyncState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CSyncState
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CSyncState;

        /**
         * Creates a plain object from a S2CSyncState message. Also converts values to other types if specified.
         * @param message S2CSyncState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CSyncState, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CSyncState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CQuickStart. */
    interface IS2CQuickStart {

        /** S2CQuickStart cfgId */
        cfgId?: (number|null);

        /** S2CQuickStart name */
        name?: (string|null);
    }

    /** Represents a S2CQuickStart. */
    class S2CQuickStart implements IS2CQuickStart {

        /**
         * Constructs a new S2CQuickStart.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CQuickStart);

        /** S2CQuickStart cfgId. */
        public cfgId: number;

        /** S2CQuickStart name. */
        public name: string;

        /**
         * Creates a new S2CQuickStart instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CQuickStart instance
         */
        public static create(properties?: pb.IS2CQuickStart): pb.S2CQuickStart;

        /**
         * Encodes the specified S2CQuickStart message. Does not implicitly {@link pb.S2CQuickStart.verify|verify} messages.
         * @param message S2CQuickStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CQuickStart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CQuickStart message, length delimited. Does not implicitly {@link pb.S2CQuickStart.verify|verify} messages.
         * @param message S2CQuickStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CQuickStart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CQuickStart message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CQuickStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CQuickStart;

        /**
         * Decodes a S2CQuickStart message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CQuickStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CQuickStart;

        /**
         * Verifies a S2CQuickStart message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CQuickStart message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CQuickStart
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CQuickStart;

        /**
         * Creates a plain object from a S2CQuickStart message. Also converts values to other types if specified.
         * @param message S2CQuickStart
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CQuickStart, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CQuickStart to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LbsData. */
    interface ILbsData {

        /** LbsData cityId */
        cityId?: (number|null);

        /** LbsData provId */
        provId?: (number|null);

        /** LbsData cityName */
        cityName?: (string|null);

        /** LbsData provName */
        provName?: (string|null);
    }

    /** Represents a LbsData. */
    class LbsData implements ILbsData {

        /**
         * Constructs a new LbsData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILbsData);

        /** LbsData cityId. */
        public cityId: number;

        /** LbsData provId. */
        public provId: number;

        /** LbsData cityName. */
        public cityName: string;

        /** LbsData provName. */
        public provName: string;

        /**
         * Creates a new LbsData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LbsData instance
         */
        public static create(properties?: pb.ILbsData): pb.LbsData;

        /**
         * Encodes the specified LbsData message. Does not implicitly {@link pb.LbsData.verify|verify} messages.
         * @param message LbsData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILbsData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LbsData message, length delimited. Does not implicitly {@link pb.LbsData.verify|verify} messages.
         * @param message LbsData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILbsData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LbsData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LbsData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.LbsData;

        /**
         * Decodes a LbsData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LbsData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.LbsData;

        /**
         * Verifies a LbsData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LbsData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LbsData
         */
        public static fromObject(object: { [k: string]: any }): pb.LbsData;

        /**
         * Creates a plain object from a LbsData message. Also converts values to other types if specified.
         * @param message LbsData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.LbsData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LbsData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMyLbs. */
    interface IS2CMyLbs {

        /** S2CMyLbs item */
        item?: (pb.ILbsData|null);
    }

    /** Represents a S2CMyLbs. */
    class S2CMyLbs implements IS2CMyLbs {

        /**
         * Constructs a new S2CMyLbs.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMyLbs);

        /** S2CMyLbs item. */
        public item?: (pb.ILbsData|null);

        /**
         * Creates a new S2CMyLbs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMyLbs instance
         */
        public static create(properties?: pb.IS2CMyLbs): pb.S2CMyLbs;

        /**
         * Encodes the specified S2CMyLbs message. Does not implicitly {@link pb.S2CMyLbs.verify|verify} messages.
         * @param message S2CMyLbs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMyLbs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMyLbs message, length delimited. Does not implicitly {@link pb.S2CMyLbs.verify|verify} messages.
         * @param message S2CMyLbs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMyLbs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMyLbs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMyLbs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMyLbs;

        /**
         * Decodes a S2CMyLbs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMyLbs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMyLbs;

        /**
         * Verifies a S2CMyLbs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMyLbs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMyLbs
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMyLbs;

        /**
         * Creates a plain object from a S2CMyLbs message. Also converts values to other types if specified.
         * @param message S2CMyLbs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMyLbs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMyLbs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GroupValue. */
    interface IGroupValue {

        /** GroupValue groupId */
        groupId?: (number|null);

        /** GroupValue subId */
        subId?: (number|null);

        /** GroupValue value */
        value?: (number|Long|null);
    }

    /** Represents a GroupValue. */
    class GroupValue implements IGroupValue {

        /**
         * Constructs a new GroupValue.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGroupValue);

        /** GroupValue groupId. */
        public groupId: number;

        /** GroupValue subId. */
        public subId: number;

        /** GroupValue value. */
        public value: (number|Long);

        /**
         * Creates a new GroupValue instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GroupValue instance
         */
        public static create(properties?: pb.IGroupValue): pb.GroupValue;

        /**
         * Encodes the specified GroupValue message. Does not implicitly {@link pb.GroupValue.verify|verify} messages.
         * @param message GroupValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGroupValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GroupValue message, length delimited. Does not implicitly {@link pb.GroupValue.verify|verify} messages.
         * @param message GroupValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGroupValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GroupValue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GroupValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.GroupValue;

        /**
         * Decodes a GroupValue message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GroupValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.GroupValue;

        /**
         * Verifies a GroupValue message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GroupValue message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GroupValue
         */
        public static fromObject(object: { [k: string]: any }): pb.GroupValue;

        /**
         * Creates a plain object from a GroupValue message. Also converts values to other types if specified.
         * @param message GroupValue
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.GroupValue, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GroupValue to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** DouPhase enum. */
    enum DouPhase {
        DouPhase_Wait = 0,
        DouPhase_Starting = 1,
        DouPhase_DealCard = 2,
        DouPhase_Landlord = 3,
        DouPhase_Double = 4,
        DouPhase_Play = 5,
        DouPhase_Settle = 6,
        DouPhase_Ended = 7
    }

    /** DouDoubleType enum. */
    enum DouDoubleType {
        DouDouble_None = 0,
        DouDouble_Double = 1,
        DouDouble_Super = 2,
        DouDouble_Null = -1
    }

    /** SpringType enum. */
    enum SpringType {
        SpringType_None = 0,
        SpringType_Spring = 1,
        SpringType_Inverse = 2
    }

    /** DouColorType enum. */
    enum DouColorType {
        DouColor_Spade = 0,
        DouColor_Heart = 1,
        DouColor_Club = 2,
        DouColor_Diamond = 3
    }

    /** DouPoint enum. */
    enum DouPoint {
        DouPoint_Null = 0,
        DouPoint_J = 11,
        DouPoint_Q = 12,
        DouPoint_K = 13,
        DouPoint_A = 14,
        DouPoint_2 = 15,
        DouPoint_SJoker = 16,
        DouPoint_MJoker = 17
    }

    /** DouCardType enum. */
    enum DouCardType {
        DouCardType_Null = 0,
        DouCardType_Single = 1,
        DouCardType_Pair = 2,
        DouCardType_Third = 3,
        DouCardType_Bomb = 4,
        DouCardType_Sequence = 5,
        DouCardType_LinkPair = 6,
        DouCardType_Airplane = 7,
        DouCardType_ThirdSingle = 8,
        DouCardType_ThirdPair = 9,
        DouCardType_AirplaneSingle = 10,
        DouCardType_AirplanePair = 11,
        DouCardType_BombSingle = 12,
        DouCardType_BombPair = 13,
        DouCardType_Rocket = 14,
        DouCardType_BombLink = 15
    }

    /** DouWinType enum. */
    enum DouWinType {
        DouWin_Null = 0,
        DouWin_Landlord = 1,
        DouWin_Peasant = 2
    }

    /** Properties of a DouCard. */
    interface IDouCard {

        /** DouCard cards */
        cards?: (number[]|null);
    }

    /** Represents a DouCard. */
    class DouCard implements IDouCard {

        /**
         * Constructs a new DouCard.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDouCard);

        /** DouCard cards. */
        public cards: number[];

        /**
         * Creates a new DouCard instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DouCard instance
         */
        public static create(properties?: pb.IDouCard): pb.DouCard;

        /**
         * Encodes the specified DouCard message. Does not implicitly {@link pb.DouCard.verify|verify} messages.
         * @param message DouCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDouCard, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DouCard message, length delimited. Does not implicitly {@link pb.DouCard.verify|verify} messages.
         * @param message DouCard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDouCard, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DouCard message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DouCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.DouCard;

        /**
         * Decodes a DouCard message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DouCard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.DouCard;

        /**
         * Verifies a DouCard message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DouCard message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DouCard
         */
        public static fromObject(object: { [k: string]: any }): pb.DouCard;

        /**
         * Creates a plain object from a DouCard message. Also converts values to other types if specified.
         * @param message DouCard
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.DouCard, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DouCard to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DouCardRecord. */
    interface IDouCardRecord {

        /** DouCardRecord pos */
        pos?: (number|null);

        /** DouCardRecord items */
        items?: (pb.IDouCard[]|null);
    }

    /** Represents a DouCardRecord. */
    class DouCardRecord implements IDouCardRecord {

        /**
         * Constructs a new DouCardRecord.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDouCardRecord);

        /** DouCardRecord pos. */
        public pos: number;

        /** DouCardRecord items. */
        public items: pb.IDouCard[];

        /**
         * Creates a new DouCardRecord instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DouCardRecord instance
         */
        public static create(properties?: pb.IDouCardRecord): pb.DouCardRecord;

        /**
         * Encodes the specified DouCardRecord message. Does not implicitly {@link pb.DouCardRecord.verify|verify} messages.
         * @param message DouCardRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDouCardRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DouCardRecord message, length delimited. Does not implicitly {@link pb.DouCardRecord.verify|verify} messages.
         * @param message DouCardRecord message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDouCardRecord, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DouCardRecord message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DouCardRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.DouCardRecord;

        /**
         * Decodes a DouCardRecord message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DouCardRecord
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.DouCardRecord;

        /**
         * Verifies a DouCardRecord message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DouCardRecord message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DouCardRecord
         */
        public static fromObject(object: { [k: string]: any }): pb.DouCardRecord;

        /**
         * Creates a plain object from a DouCardRecord message. Also converts values to other types if specified.
         * @param message DouCardRecord
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.DouCardRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DouCardRecord to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DouPlayerCards. */
    interface IDouPlayerCards {

        /** DouPlayerCards pos */
        pos?: (number|null);

        /** DouPlayerCards cards */
        cards?: (number[]|null);
    }

    /** Represents a DouPlayerCards. */
    class DouPlayerCards implements IDouPlayerCards {

        /**
         * Constructs a new DouPlayerCards.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDouPlayerCards);

        /** DouPlayerCards pos. */
        public pos: number;

        /** DouPlayerCards cards. */
        public cards: number[];

        /**
         * Creates a new DouPlayerCards instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DouPlayerCards instance
         */
        public static create(properties?: pb.IDouPlayerCards): pb.DouPlayerCards;

        /**
         * Encodes the specified DouPlayerCards message. Does not implicitly {@link pb.DouPlayerCards.verify|verify} messages.
         * @param message DouPlayerCards message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDouPlayerCards, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DouPlayerCards message, length delimited. Does not implicitly {@link pb.DouPlayerCards.verify|verify} messages.
         * @param message DouPlayerCards message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDouPlayerCards, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DouPlayerCards message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DouPlayerCards
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.DouPlayerCards;

        /**
         * Decodes a DouPlayerCards message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DouPlayerCards
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.DouPlayerCards;

        /**
         * Verifies a DouPlayerCards message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DouPlayerCards message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DouPlayerCards
         */
        public static fromObject(object: { [k: string]: any }): pb.DouPlayerCards;

        /**
         * Creates a plain object from a DouPlayerCards message. Also converts values to other types if specified.
         * @param message DouPlayerCards
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.DouPlayerCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DouPlayerCards to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DouTableInfo. */
    interface IDouTableInfo {

        /** DouTableInfo rules */
        rules?: (pb.IDouRule|null);

        /** DouTableInfo phase */
        phase?: (pb.DouPhase|null);

        /** DouTableInfo round */
        round?: (number|null);

        /** DouTableInfo landlordDouble */
        landlordDouble?: (number|null);

        /** DouTableInfo finalCards */
        finalCards?: (number[]|null);

        /** DouTableInfo recordCards */
        recordCards?: (pb.IDouCardRecord[]|null);

        /** DouTableInfo boutCards */
        boutCards?: (pb.IDouPlayerCards[]|null);

        /** DouTableInfo curActPos */
        curActPos?: (number|null);

        /** DouTableInfo curActTime */
        curActTime?: (number|null);

        /** DouTableInfo bombDouble */
        bombDouble?: (number|null);

        /** DouTableInfo springDouble */
        springDouble?: (number|null);

        /** DouTableInfo winType */
        winType?: (pb.DouWinType|null);

        /** DouTableInfo lastPlayPos */
        lastPlayPos?: (number|null);

        /** DouTableInfo lastCardType */
        lastCardType?: (pb.DouCardType|null);
    }

    /** Represents a DouTableInfo. */
    class DouTableInfo implements IDouTableInfo {

        /**
         * Constructs a new DouTableInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDouTableInfo);

        /** DouTableInfo rules. */
        public rules?: (pb.IDouRule|null);

        /** DouTableInfo phase. */
        public phase: pb.DouPhase;

        /** DouTableInfo round. */
        public round: number;

        /** DouTableInfo landlordDouble. */
        public landlordDouble: number;

        /** DouTableInfo finalCards. */
        public finalCards: number[];

        /** DouTableInfo recordCards. */
        public recordCards: pb.IDouCardRecord[];

        /** DouTableInfo boutCards. */
        public boutCards: pb.IDouPlayerCards[];

        /** DouTableInfo curActPos. */
        public curActPos: number;

        /** DouTableInfo curActTime. */
        public curActTime: number;

        /** DouTableInfo bombDouble. */
        public bombDouble: number;

        /** DouTableInfo springDouble. */
        public springDouble: number;

        /** DouTableInfo winType. */
        public winType: pb.DouWinType;

        /** DouTableInfo lastPlayPos. */
        public lastPlayPos: number;

        /** DouTableInfo lastCardType. */
        public lastCardType: pb.DouCardType;

        /**
         * Creates a new DouTableInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DouTableInfo instance
         */
        public static create(properties?: pb.IDouTableInfo): pb.DouTableInfo;

        /**
         * Encodes the specified DouTableInfo message. Does not implicitly {@link pb.DouTableInfo.verify|verify} messages.
         * @param message DouTableInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDouTableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DouTableInfo message, length delimited. Does not implicitly {@link pb.DouTableInfo.verify|verify} messages.
         * @param message DouTableInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDouTableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DouTableInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DouTableInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.DouTableInfo;

        /**
         * Decodes a DouTableInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DouTableInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.DouTableInfo;

        /**
         * Verifies a DouTableInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DouTableInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DouTableInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.DouTableInfo;

        /**
         * Creates a plain object from a DouTableInfo message. Also converts values to other types if specified.
         * @param message DouTableInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.DouTableInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DouTableInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DouPlayerInfo. */
    interface IDouPlayerInfo {

        /** DouPlayerInfo pos */
        pos?: (number|null);

        /** DouPlayerInfo isLandlord */
        isLandlord?: (boolean|null);

        /** DouPlayerInfo doubleType */
        doubleType?: (pb.DouDoubleType|null);

        /** DouPlayerInfo isReady */
        isReady?: (boolean|null);

        /** DouPlayerInfo handCards */
        handCards?: (number[]|null);

        /** DouPlayerInfo handCardsNum */
        handCardsNum?: (number|null);

        /** DouPlayerInfo useRecord */
        useRecord?: (boolean|null);

        /** DouPlayerInfo isJiao */
        isJiao?: (boolean|null);

        /** DouPlayerInfo isTrusteeship */
        isTrusteeship?: (boolean|null);

        /** DouPlayerInfo group */
        group?: (pb.IDouCardGroup|null);
    }

    /** Represents a DouPlayerInfo. */
    class DouPlayerInfo implements IDouPlayerInfo {

        /**
         * Constructs a new DouPlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDouPlayerInfo);

        /** DouPlayerInfo pos. */
        public pos: number;

        /** DouPlayerInfo isLandlord. */
        public isLandlord: boolean;

        /** DouPlayerInfo doubleType. */
        public doubleType: pb.DouDoubleType;

        /** DouPlayerInfo isReady. */
        public isReady: boolean;

        /** DouPlayerInfo handCards. */
        public handCards: number[];

        /** DouPlayerInfo handCardsNum. */
        public handCardsNum: number;

        /** DouPlayerInfo useRecord. */
        public useRecord: boolean;

        /** DouPlayerInfo isJiao. */
        public isJiao: boolean;

        /** DouPlayerInfo isTrusteeship. */
        public isTrusteeship: boolean;

        /** DouPlayerInfo group. */
        public group?: (pb.IDouCardGroup|null);

        /**
         * Creates a new DouPlayerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DouPlayerInfo instance
         */
        public static create(properties?: pb.IDouPlayerInfo): pb.DouPlayerInfo;

        /**
         * Encodes the specified DouPlayerInfo message. Does not implicitly {@link pb.DouPlayerInfo.verify|verify} messages.
         * @param message DouPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDouPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DouPlayerInfo message, length delimited. Does not implicitly {@link pb.DouPlayerInfo.verify|verify} messages.
         * @param message DouPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDouPlayerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DouPlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DouPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.DouPlayerInfo;

        /**
         * Decodes a DouPlayerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DouPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.DouPlayerInfo;

        /**
         * Verifies a DouPlayerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DouPlayerInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DouPlayerInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.DouPlayerInfo;

        /**
         * Creates a plain object from a DouPlayerInfo message. Also converts values to other types if specified.
         * @param message DouPlayerInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.DouPlayerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DouPlayerInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DouSettleInfo. */
    interface IDouSettleInfo {

        /** DouSettleInfo pos */
        pos?: (number|null);

        /** DouSettleInfo cards */
        cards?: (number[]|null);

        /** DouSettleInfo initCards */
        initCards?: (number[]|null);

        /** DouSettleInfo multiple */
        multiple?: (number|null);

        /** DouSettleInfo score */
        score?: (number|Long|null);

        /** DouSettleInfo expend */
        expend?: (number|Long|null);

        /** DouSettleInfo isCoinLimit */
        isCoinLimit?: (boolean|null);

        /** DouSettleInfo isPochan */
        isPochan?: (boolean|null);

        /** DouSettleInfo isUpLimit */
        isUpLimit?: (boolean|null);
    }

    /** Represents a DouSettleInfo. */
    class DouSettleInfo implements IDouSettleInfo {

        /**
         * Constructs a new DouSettleInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDouSettleInfo);

        /** DouSettleInfo pos. */
        public pos: number;

        /** DouSettleInfo cards. */
        public cards: number[];

        /** DouSettleInfo initCards. */
        public initCards: number[];

        /** DouSettleInfo multiple. */
        public multiple: number;

        /** DouSettleInfo score. */
        public score: (number|Long);

        /** DouSettleInfo expend. */
        public expend: (number|Long);

        /** DouSettleInfo isCoinLimit. */
        public isCoinLimit: boolean;

        /** DouSettleInfo isPochan. */
        public isPochan: boolean;

        /** DouSettleInfo isUpLimit. */
        public isUpLimit: boolean;

        /**
         * Creates a new DouSettleInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DouSettleInfo instance
         */
        public static create(properties?: pb.IDouSettleInfo): pb.DouSettleInfo;

        /**
         * Encodes the specified DouSettleInfo message. Does not implicitly {@link pb.DouSettleInfo.verify|verify} messages.
         * @param message DouSettleInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDouSettleInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DouSettleInfo message, length delimited. Does not implicitly {@link pb.DouSettleInfo.verify|verify} messages.
         * @param message DouSettleInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDouSettleInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DouSettleInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DouSettleInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.DouSettleInfo;

        /**
         * Decodes a DouSettleInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DouSettleInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.DouSettleInfo;

        /**
         * Verifies a DouSettleInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DouSettleInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DouSettleInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.DouSettleInfo;

        /**
         * Creates a plain object from a DouSettleInfo message. Also converts values to other types if specified.
         * @param message DouSettleInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.DouSettleInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DouSettleInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DouCards. */
    interface IDouCards {

        /** DouCards cards */
        cards?: (number[]|null);
    }

    /** Represents a DouCards. */
    class DouCards implements IDouCards {

        /**
         * Constructs a new DouCards.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDouCards);

        /** DouCards cards. */
        public cards: number[];

        /**
         * Creates a new DouCards instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DouCards instance
         */
        public static create(properties?: pb.IDouCards): pb.DouCards;

        /**
         * Encodes the specified DouCards message. Does not implicitly {@link pb.DouCards.verify|verify} messages.
         * @param message DouCards message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDouCards, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DouCards message, length delimited. Does not implicitly {@link pb.DouCards.verify|verify} messages.
         * @param message DouCards message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDouCards, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DouCards message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DouCards
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.DouCards;

        /**
         * Decodes a DouCards message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DouCards
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.DouCards;

        /**
         * Verifies a DouCards message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DouCards message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DouCards
         */
        public static fromObject(object: { [k: string]: any }): pb.DouCards;

        /**
         * Creates a plain object from a DouCards message. Also converts values to other types if specified.
         * @param message DouCards
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.DouCards, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DouCards to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DouCardGroup. */
    interface IDouCardGroup {

        /** DouCardGroup single */
        single?: (number[]|null);

        /** DouCardGroup pair */
        pair?: (pb.IDouCards[]|null);

        /** DouCardGroup third */
        third?: (pb.IDouCards[]|null);

        /** DouCardGroup bomb */
        bomb?: (pb.IDouCards[]|null);

        /** DouCardGroup sequence */
        sequence?: (pb.IDouCards[]|null);

        /** DouCardGroup linkPair */
        linkPair?: (pb.IDouCards[]|null);

        /** DouCardGroup airplane */
        airplane?: (pb.IDouCards[]|null);

        /** DouCardGroup bombLink */
        bombLink?: (pb.IDouCards[]|null);

        /** DouCardGroup joker */
        joker?: (number[]|null);
    }

    /** Represents a DouCardGroup. */
    class DouCardGroup implements IDouCardGroup {

        /**
         * Constructs a new DouCardGroup.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDouCardGroup);

        /** DouCardGroup single. */
        public single: number[];

        /** DouCardGroup pair. */
        public pair: pb.IDouCards[];

        /** DouCardGroup third. */
        public third: pb.IDouCards[];

        /** DouCardGroup bomb. */
        public bomb: pb.IDouCards[];

        /** DouCardGroup sequence. */
        public sequence: pb.IDouCards[];

        /** DouCardGroup linkPair. */
        public linkPair: pb.IDouCards[];

        /** DouCardGroup airplane. */
        public airplane: pb.IDouCards[];

        /** DouCardGroup bombLink. */
        public bombLink: pb.IDouCards[];

        /** DouCardGroup joker. */
        public joker: number[];

        /**
         * Creates a new DouCardGroup instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DouCardGroup instance
         */
        public static create(properties?: pb.IDouCardGroup): pb.DouCardGroup;

        /**
         * Encodes the specified DouCardGroup message. Does not implicitly {@link pb.DouCardGroup.verify|verify} messages.
         * @param message DouCardGroup message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDouCardGroup, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DouCardGroup message, length delimited. Does not implicitly {@link pb.DouCardGroup.verify|verify} messages.
         * @param message DouCardGroup message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDouCardGroup, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DouCardGroup message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DouCardGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.DouCardGroup;

        /**
         * Decodes a DouCardGroup message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DouCardGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.DouCardGroup;

        /**
         * Verifies a DouCardGroup message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DouCardGroup message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DouCardGroup
         */
        public static fromObject(object: { [k: string]: any }): pb.DouCardGroup;

        /**
         * Creates a plain object from a DouCardGroup message. Also converts values to other types if specified.
         * @param message DouCardGroup
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.DouCardGroup, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DouCardGroup to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DouRule. */
    interface IDouRule {

        /** DouRule base */
        base?: (number|Long|null);

        /** DouRule peek */
        peek?: (boolean|null);

        /** DouRule superDouble */
        superDouble?: (boolean|null);

        /** DouRule finalCardDouble */
        finalCardDouble?: (boolean|null);

        /** DouRule maxFan */
        maxFan?: (number|null);

        /** DouRule maxRound */
        maxRound?: (number|null);

        /** DouRule xiPai */
        xiPai?: (boolean|null);
    }

    /** Represents a DouRule. */
    class DouRule implements IDouRule {

        /**
         * Constructs a new DouRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDouRule);

        /** DouRule base. */
        public base: (number|Long);

        /** DouRule peek. */
        public peek: boolean;

        /** DouRule superDouble. */
        public superDouble: boolean;

        /** DouRule finalCardDouble. */
        public finalCardDouble: boolean;

        /** DouRule maxFan. */
        public maxFan: number;

        /** DouRule maxRound. */
        public maxRound: number;

        /** DouRule xiPai. */
        public xiPai: boolean;

        /**
         * Creates a new DouRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DouRule instance
         */
        public static create(properties?: pb.IDouRule): pb.DouRule;

        /**
         * Encodes the specified DouRule message. Does not implicitly {@link pb.DouRule.verify|verify} messages.
         * @param message DouRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDouRule, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DouRule message, length delimited. Does not implicitly {@link pb.DouRule.verify|verify} messages.
         * @param message DouRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDouRule, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DouRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DouRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.DouRule;

        /**
         * Decodes a DouRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DouRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.DouRule;

        /**
         * Verifies a DouRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DouRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DouRule
         */
        public static fromObject(object: { [k: string]: any }): pb.DouRule;

        /**
         * Creates a plain object from a DouRule message. Also converts values to other types if specified.
         * @param message DouRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.DouRule, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DouRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** GameCat enum. */
    enum GameCat {
        GameCat_Null = 0,
        GameCat_Dou = 1001,
        GameCat_Mahjong = 3001,
        GameCat_Mah3Ren2Fang = 3002,
        GameCat_TuiDaoHuMah = 4001
    }

    /** GameEndGiftType enum. */
    enum GameEndGiftType {
        GEGT_Null = 0,
        GEGT_NoLose = 1,
        GEGT_WinMore = 2
    }

    /** Properties of a S2CGameEndGiftValue. */
    interface IS2CGameEndGiftValue {

        /** S2CGameEndGiftValue type */
        type?: (pb.GameEndGiftType|null);

        /** S2CGameEndGiftValue param */
        param?: (number|Long|null);
    }

    /** Represents a S2CGameEndGiftValue. */
    class S2CGameEndGiftValue implements IS2CGameEndGiftValue {

        /**
         * Constructs a new S2CGameEndGiftValue.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGameEndGiftValue);

        /** S2CGameEndGiftValue type. */
        public type: pb.GameEndGiftType;

        /** S2CGameEndGiftValue param. */
        public param: (number|Long);

        /**
         * Creates a new S2CGameEndGiftValue instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGameEndGiftValue instance
         */
        public static create(properties?: pb.IS2CGameEndGiftValue): pb.S2CGameEndGiftValue;

        /**
         * Encodes the specified S2CGameEndGiftValue message. Does not implicitly {@link pb.S2CGameEndGiftValue.verify|verify} messages.
         * @param message S2CGameEndGiftValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGameEndGiftValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGameEndGiftValue message, length delimited. Does not implicitly {@link pb.S2CGameEndGiftValue.verify|verify} messages.
         * @param message S2CGameEndGiftValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGameEndGiftValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGameEndGiftValue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGameEndGiftValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGameEndGiftValue;

        /**
         * Decodes a S2CGameEndGiftValue message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGameEndGiftValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGameEndGiftValue;

        /**
         * Verifies a S2CGameEndGiftValue message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGameEndGiftValue message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGameEndGiftValue
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGameEndGiftValue;

        /**
         * Creates a plain object from a S2CGameEndGiftValue message. Also converts values to other types if specified.
         * @param message S2CGameEndGiftValue
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGameEndGiftValue, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGameEndGiftValue to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SNoLoseWinMore. */
    interface IC2SNoLoseWinMore {
    }

    /** Represents a C2SNoLoseWinMore. */
    class C2SNoLoseWinMore implements IC2SNoLoseWinMore {

        /**
         * Constructs a new C2SNoLoseWinMore.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SNoLoseWinMore);

        /**
         * Creates a new C2SNoLoseWinMore instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SNoLoseWinMore instance
         */
        public static create(properties?: pb.IC2SNoLoseWinMore): pb.C2SNoLoseWinMore;

        /**
         * Encodes the specified C2SNoLoseWinMore message. Does not implicitly {@link pb.C2SNoLoseWinMore.verify|verify} messages.
         * @param message C2SNoLoseWinMore message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SNoLoseWinMore, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SNoLoseWinMore message, length delimited. Does not implicitly {@link pb.C2SNoLoseWinMore.verify|verify} messages.
         * @param message C2SNoLoseWinMore message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SNoLoseWinMore, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SNoLoseWinMore message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SNoLoseWinMore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SNoLoseWinMore;

        /**
         * Decodes a C2SNoLoseWinMore message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SNoLoseWinMore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SNoLoseWinMore;

        /**
         * Verifies a C2SNoLoseWinMore message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SNoLoseWinMore message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SNoLoseWinMore
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SNoLoseWinMore;

        /**
         * Creates a plain object from a C2SNoLoseWinMore message. Also converts values to other types if specified.
         * @param message C2SNoLoseWinMore
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SNoLoseWinMore, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SNoLoseWinMore to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CNoLoseWinMore. */
    interface IS2CNoLoseWinMore {

        /** S2CNoLoseWinMore type */
        type?: (pb.GameEndGiftType|null);

        /** S2CNoLoseWinMore param */
        param?: (number|Long|null);
    }

    /** Represents a S2CNoLoseWinMore. */
    class S2CNoLoseWinMore implements IS2CNoLoseWinMore {

        /**
         * Constructs a new S2CNoLoseWinMore.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CNoLoseWinMore);

        /** S2CNoLoseWinMore type. */
        public type: pb.GameEndGiftType;

        /** S2CNoLoseWinMore param. */
        public param: (number|Long);

        /**
         * Creates a new S2CNoLoseWinMore instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CNoLoseWinMore instance
         */
        public static create(properties?: pb.IS2CNoLoseWinMore): pb.S2CNoLoseWinMore;

        /**
         * Encodes the specified S2CNoLoseWinMore message. Does not implicitly {@link pb.S2CNoLoseWinMore.verify|verify} messages.
         * @param message S2CNoLoseWinMore message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CNoLoseWinMore, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CNoLoseWinMore message, length delimited. Does not implicitly {@link pb.S2CNoLoseWinMore.verify|verify} messages.
         * @param message S2CNoLoseWinMore message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CNoLoseWinMore, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CNoLoseWinMore message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CNoLoseWinMore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CNoLoseWinMore;

        /**
         * Decodes a S2CNoLoseWinMore message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CNoLoseWinMore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CNoLoseWinMore;

        /**
         * Verifies a S2CNoLoseWinMore message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CNoLoseWinMore message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CNoLoseWinMore
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CNoLoseWinMore;

        /**
         * Creates a plain object from a S2CNoLoseWinMore message. Also converts values to other types if specified.
         * @param message S2CNoLoseWinMore
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CNoLoseWinMore, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CNoLoseWinMore to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGenAuthCode. */
    interface IC2SGenAuthCode {

        /** C2SGenAuthCode phone */
        phone?: (string|null);
    }

    /** Represents a C2SGenAuthCode. */
    class C2SGenAuthCode implements IC2SGenAuthCode {

        /**
         * Constructs a new C2SGenAuthCode.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGenAuthCode);

        /** C2SGenAuthCode phone. */
        public phone: string;

        /**
         * Creates a new C2SGenAuthCode instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGenAuthCode instance
         */
        public static create(properties?: pb.IC2SGenAuthCode): pb.C2SGenAuthCode;

        /**
         * Encodes the specified C2SGenAuthCode message. Does not implicitly {@link pb.C2SGenAuthCode.verify|verify} messages.
         * @param message C2SGenAuthCode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGenAuthCode, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGenAuthCode message, length delimited. Does not implicitly {@link pb.C2SGenAuthCode.verify|verify} messages.
         * @param message C2SGenAuthCode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGenAuthCode, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGenAuthCode message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGenAuthCode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGenAuthCode;

        /**
         * Decodes a C2SGenAuthCode message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGenAuthCode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGenAuthCode;

        /**
         * Verifies a C2SGenAuthCode message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGenAuthCode message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGenAuthCode
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGenAuthCode;

        /**
         * Creates a plain object from a C2SGenAuthCode message. Also converts values to other types if specified.
         * @param message C2SGenAuthCode
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGenAuthCode, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGenAuthCode to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGobackLobby. */
    interface IC2SGobackLobby {
    }

    /** Represents a C2SGobackLobby. */
    class C2SGobackLobby implements IC2SGobackLobby {

        /**
         * Constructs a new C2SGobackLobby.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGobackLobby);

        /**
         * Creates a new C2SGobackLobby instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGobackLobby instance
         */
        public static create(properties?: pb.IC2SGobackLobby): pb.C2SGobackLobby;

        /**
         * Encodes the specified C2SGobackLobby message. Does not implicitly {@link pb.C2SGobackLobby.verify|verify} messages.
         * @param message C2SGobackLobby message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGobackLobby, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGobackLobby message, length delimited. Does not implicitly {@link pb.C2SGobackLobby.verify|verify} messages.
         * @param message C2SGobackLobby message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGobackLobby, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGobackLobby message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGobackLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGobackLobby;

        /**
         * Decodes a C2SGobackLobby message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGobackLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGobackLobby;

        /**
         * Verifies a C2SGobackLobby message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGobackLobby message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGobackLobby
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGobackLobby;

        /**
         * Creates a plain object from a C2SGobackLobby message. Also converts values to other types if specified.
         * @param message C2SGobackLobby
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGobackLobby, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGobackLobby to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** GoodsType enum. */
    enum GoodsType {
        GoodsType_Null = 0,
        GoodsType_Coin = 1,
        GoodsType_Gem = 2,
        GoodsType_HuaFeiQuan = 3,
        GoodsType_Sep = 10,
        GoodsType_PortBorder = 11
    }

    /** Properties of a C2SGetGradeReward. */
    interface IC2SGetGradeReward {

        /** C2SGetGradeReward grade */
        grade?: (number|null);
    }

    /** Represents a C2SGetGradeReward. */
    class C2SGetGradeReward implements IC2SGetGradeReward {

        /**
         * Constructs a new C2SGetGradeReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetGradeReward);

        /** C2SGetGradeReward grade. */
        public grade: number;

        /**
         * Creates a new C2SGetGradeReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetGradeReward instance
         */
        public static create(properties?: pb.IC2SGetGradeReward): pb.C2SGetGradeReward;

        /**
         * Encodes the specified C2SGetGradeReward message. Does not implicitly {@link pb.C2SGetGradeReward.verify|verify} messages.
         * @param message C2SGetGradeReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetGradeReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetGradeReward message, length delimited. Does not implicitly {@link pb.C2SGetGradeReward.verify|verify} messages.
         * @param message C2SGetGradeReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetGradeReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetGradeReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetGradeReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetGradeReward;

        /**
         * Decodes a C2SGetGradeReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetGradeReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetGradeReward;

        /**
         * Verifies a C2SGetGradeReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetGradeReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetGradeReward
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetGradeReward;

        /**
         * Creates a plain object from a C2SGetGradeReward message. Also converts values to other types if specified.
         * @param message C2SGetGradeReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetGradeReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetGradeReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetGradeReward. */
    interface IS2CGetGradeReward {

        /** S2CGetGradeReward grade */
        grade?: (number|null);

        /** S2CGetGradeReward isOk */
        isOk?: (boolean|null);
    }

    /** Represents a S2CGetGradeReward. */
    class S2CGetGradeReward implements IS2CGetGradeReward {

        /**
         * Constructs a new S2CGetGradeReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetGradeReward);

        /** S2CGetGradeReward grade. */
        public grade: number;

        /** S2CGetGradeReward isOk. */
        public isOk: boolean;

        /**
         * Creates a new S2CGetGradeReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetGradeReward instance
         */
        public static create(properties?: pb.IS2CGetGradeReward): pb.S2CGetGradeReward;

        /**
         * Encodes the specified S2CGetGradeReward message. Does not implicitly {@link pb.S2CGetGradeReward.verify|verify} messages.
         * @param message S2CGetGradeReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetGradeReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetGradeReward message, length delimited. Does not implicitly {@link pb.S2CGetGradeReward.verify|verify} messages.
         * @param message S2CGetGradeReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetGradeReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetGradeReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetGradeReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetGradeReward;

        /**
         * Decodes a S2CGetGradeReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetGradeReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetGradeReward;

        /**
         * Verifies a S2CGetGradeReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetGradeReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetGradeReward
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetGradeReward;

        /**
         * Creates a plain object from a S2CGetGradeReward message. Also converts values to other types if specified.
         * @param message S2CGetGradeReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetGradeReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetGradeReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GradeCfg. */
    interface IGradeCfg {

        /** GradeCfg grade */
        grade?: (number|null);

        /** GradeCfg exp */
        exp?: (number|null);

        /** GradeCfg rewards */
        rewards?: ({ [k: string]: (number|Long) }|null);

        /** GradeCfg title */
        title?: (string|null);

        /** GradeCfg titleImg */
        titleImg?: (string|null);

        /** GradeCfg icon */
        icon?: (string|null);
    }

    /** Represents a GradeCfg. */
    class GradeCfg implements IGradeCfg {

        /**
         * Constructs a new GradeCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGradeCfg);

        /** GradeCfg grade. */
        public grade: number;

        /** GradeCfg exp. */
        public exp: number;

        /** GradeCfg rewards. */
        public rewards: { [k: string]: (number|Long) };

        /** GradeCfg title. */
        public title: string;

        /** GradeCfg titleImg. */
        public titleImg: string;

        /** GradeCfg icon. */
        public icon: string;

        /**
         * Creates a new GradeCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GradeCfg instance
         */
        public static create(properties?: pb.IGradeCfg): pb.GradeCfg;

        /**
         * Encodes the specified GradeCfg message. Does not implicitly {@link pb.GradeCfg.verify|verify} messages.
         * @param message GradeCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGradeCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GradeCfg message, length delimited. Does not implicitly {@link pb.GradeCfg.verify|verify} messages.
         * @param message GradeCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGradeCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GradeCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GradeCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.GradeCfg;

        /**
         * Decodes a GradeCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GradeCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.GradeCfg;

        /**
         * Verifies a GradeCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GradeCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GradeCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.GradeCfg;

        /**
         * Creates a plain object from a GradeCfg message. Also converts values to other types if specified.
         * @param message GradeCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.GradeCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GradeCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGradeCfgs. */
    interface IC2SGradeCfgs {
    }

    /** Represents a C2SGradeCfgs. */
    class C2SGradeCfgs implements IC2SGradeCfgs {

        /**
         * Constructs a new C2SGradeCfgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGradeCfgs);

        /**
         * Creates a new C2SGradeCfgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGradeCfgs instance
         */
        public static create(properties?: pb.IC2SGradeCfgs): pb.C2SGradeCfgs;

        /**
         * Encodes the specified C2SGradeCfgs message. Does not implicitly {@link pb.C2SGradeCfgs.verify|verify} messages.
         * @param message C2SGradeCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGradeCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGradeCfgs message, length delimited. Does not implicitly {@link pb.C2SGradeCfgs.verify|verify} messages.
         * @param message C2SGradeCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGradeCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGradeCfgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGradeCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGradeCfgs;

        /**
         * Decodes a C2SGradeCfgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGradeCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGradeCfgs;

        /**
         * Verifies a C2SGradeCfgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGradeCfgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGradeCfgs
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGradeCfgs;

        /**
         * Creates a plain object from a C2SGradeCfgs message. Also converts values to other types if specified.
         * @param message C2SGradeCfgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGradeCfgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGradeCfgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGradeCfgs. */
    interface IS2CGradeCfgs {

        /** S2CGradeCfgs items */
        items?: (pb.IGradeCfg[]|null);
    }

    /** Represents a S2CGradeCfgs. */
    class S2CGradeCfgs implements IS2CGradeCfgs {

        /**
         * Constructs a new S2CGradeCfgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGradeCfgs);

        /** S2CGradeCfgs items. */
        public items: pb.IGradeCfg[];

        /**
         * Creates a new S2CGradeCfgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGradeCfgs instance
         */
        public static create(properties?: pb.IS2CGradeCfgs): pb.S2CGradeCfgs;

        /**
         * Encodes the specified S2CGradeCfgs message. Does not implicitly {@link pb.S2CGradeCfgs.verify|verify} messages.
         * @param message S2CGradeCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGradeCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGradeCfgs message, length delimited. Does not implicitly {@link pb.S2CGradeCfgs.verify|verify} messages.
         * @param message S2CGradeCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGradeCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGradeCfgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGradeCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGradeCfgs;

        /**
         * Decodes a S2CGradeCfgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGradeCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGradeCfgs;

        /**
         * Verifies a S2CGradeCfgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGradeCfgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGradeCfgs
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGradeCfgs;

        /**
         * Creates a plain object from a S2CGradeCfgs message. Also converts values to other types if specified.
         * @param message S2CGradeCfgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGradeCfgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGradeCfgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** GroupId enum. */
    enum GroupId {
        GI_Null = 0,
        GI_PlayTimes = 1,
        GI_WinTimes = 2,
        GI_EmojiTimes = 5,
        GI_ShopBuyTimes = 6,
        GI_ShopBuyDonate = 11,
        GI_ZeroBuyAdTimes = 8,
        GI_Mail = 7,
        GI_MacthTimes = 9,
        GI_Comm = 10,
        GI_Dou = 12,
        GI_Mj = 14,
        GI_RedDot = 15,
        GI_SeasonScore = 20,
        GI_SeasonDuanWei = 21,
        GI_SeasonDuanWeiReward = 22,
        GI_SeasonRank = 23,
        GI_SeasonHint = 24,
        GI_SeasonAreaId = 25,
        GI_SeasonReward = 26,
        GI_SeasonHighestRank = 30,
        GI_SeasonHighestDuanWei = 31,
        GI_SeasonHighestScore = 32,
        GI_SeasonHighestAreaId = 33,
        GI_GradeReward = 40,
        GI_RankData = 50,
        GI_RankRedDot = 51,
        GI_RankGetedReward = 52,
        GI_RankNum = 53,
        GI_UsePropNotInTable = 60,
        GI_UsePropTimes = 61,
        GI_AutoUseItem = 62,
        GI_GetMoneyUseAdTimes = 70,
        GI_GetMoneyUseInvite = 71,
        GI_PoChanInfo = 75,
        GI_ActLotteryFreeTimes = 80,
        GI_ActLotteryAdvertTimes = 81,
        GI_ActContLoginBack = 82,
        GI_ActProgress = 83,
        GI_ActContLoginRewardState = 84,
        GI_ActRedDot = 85,
        GI_ActState = 86,
        GI_ActCurDay = 87,
        GI_ActCurRound = 88,
        GI_SeasonRound = 1000,
        GI_DayScore = 100,
        GI_WeekScore = 101,
        GI_MonthScore = 102,
        GI_YearScore = 103,
        GI_DayPay = 104,
        GI_WeekPay = 105,
        GI_MonthPay = 106,
        GI_YearPay = 107,
        GI_DayScoreRewardState = 108,
        GI_WeekScoreRewardState = 109,
        GI_MonthScoreRewardState = 110,
        GI_YearScoreRewardState = 111,
        GI_DayPayScore = 114,
        GI_WeekPayScore = 115,
        GI_MonthPayScore = 116,
        GI_YearPayScore = 117,
        GI_VipReward = 130,
        GI_SepVal = 10000,
        GI_LuckyVal = 10001,
        GI_AIGameInit = 10002,
        GI_Relief = 10003,
        GI_LuckyValInit = 10004,
        GI_SeasonRankDate = 10005,
        GI_ActFirstJoinTime = 10006,
        GI_ActLastJoinTime = 10007,
        GI_FakeServerTime = 10009,
        GI_AchievStage = 10060,
        GI_AchievState = 10061,
        GI_AchievGroupVal = 10062,
        GI_AChievCD = 10063,
        GI_AchievInfo = 10064,
        GI_AchievAdCout = 10065,
        GI_AchievAdGetCount = 10067,
        GI_GuaJiInfo = 10070,
        GI_ShiDuanCoin = 10071,
        GI_ShiDuanState = 10072,
        GI_AdRewardSaveVal = 10074,
        GI_AdRewardInfo = 10075,
        GI_ZhanJi = 10076,
        GI_ShowBox = 10077
    }

    /** CommSubID enum. */
    enum CommSubID {
        CommSubID_Null = 0,
        CommSubID_ResetTime = 1,
        CommSubID_NoLoseTimes = 2,
        CommSubID_WinMultipleTimes = 3,
        CommSubID_GradeReward = 4,
        CommSubID_AdBombCard = 5,
        CommSubID_AdHongZhongCard = 6,
        CommSubID_Train = 7,
        CommSubID_RankDate = 8,
        CommSubID_AchievRed = 21,
        CommSubID_YinLiuRewardState = 22
    }

    /** MailSubID enum. */
    enum MailSubID {
        MailSubID_Null = 0,
        MailSubID_MailRedDot = 1
    }

    /** DouSubID enum. */
    enum DouSubID {
        DouSubID_Null = 0,
        DouSubID_RecordExpireTime = 1,
        DouSubID_BombCard = 2,
        DouSubID_WinStreak = 8
    }

    /** MahSubID enum. */
    enum MahSubID {
        MahSubID_Null = 0,
        MahSubID_JiPaiQiRestTime = 1,
        MahSubID_IsNew = 2,
        MahSubID_PlayerTime = 3,
        MahSubID_YinDao = 4
    }

    /** RewardState enum. */
    enum RewardState {
        RewardState_Null = 0,
        RewardState_Reach = 1,
        RewardState_Geted = 2,
        RewardState_Back = 3
    }

    /** AchievSubId enum. */
    enum AchievSubId {
        AchievSubId_Null = 0,
        AchievSubId_LianWin = 1
    }

    /** PoChanSubId enum. */
    enum PoChanSubId {
        PoChanSubId_UnDef = 0,
        PoChanSubId_AddGem = 1,
        PoChanSubId_DayFreeCount = 2,
        PoChanSubId_DayAdCount = 3,
        PoChanSubId_InningFreeCount = 4,
        PoChanSubId_InningAdCount = 5
    }

    /** ActSubID enum. */
    enum ActSubID {
        ActSubID_Unknown = 0,
        ActSubID_IN = 1,
        ActSubID_Finish = 2,
        ActSubID_Abort = 3
    }

    /** GuaJiSubId enum. */
    enum GuaJiSubId {
        GuaJiSubId_cfgId = 0,
        GuaJiSubId_coin = 1,
        GuaJiSubId_RestTime = 2
    }

    /** GsCat enum. */
    enum GsCat {
        GsCat_Normal = 0,
        GsCat_Rank = 1
    }

    /** Properties of a C2SGames. */
    interface IC2SGames {
    }

    /** Represents a C2SGames. */
    class C2SGames implements IC2SGames {

        /**
         * Constructs a new C2SGames.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGames);

        /**
         * Creates a new C2SGames instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGames instance
         */
        public static create(properties?: pb.IC2SGames): pb.C2SGames;

        /**
         * Encodes the specified C2SGames message. Does not implicitly {@link pb.C2SGames.verify|verify} messages.
         * @param message C2SGames message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGames, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGames message, length delimited. Does not implicitly {@link pb.C2SGames.verify|verify} messages.
         * @param message C2SGames message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGames, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGames message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGames
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGames;

        /**
         * Decodes a C2SGames message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGames
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGames;

        /**
         * Verifies a C2SGames message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGames message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGames
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGames;

        /**
         * Creates a plain object from a C2SGames message. Also converts values to other types if specified.
         * @param message C2SGames
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGames, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGames to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GameItem. */
    interface IGameItem {

        /** GameItem id */
        id?: (number|null);

        /** GameItem name */
        name?: (string|null);
    }

    /** Represents a GameItem. */
    class GameItem implements IGameItem {

        /**
         * Constructs a new GameItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGameItem);

        /** GameItem id. */
        public id: number;

        /** GameItem name. */
        public name: string;

        /**
         * Creates a new GameItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GameItem instance
         */
        public static create(properties?: pb.IGameItem): pb.GameItem;

        /**
         * Encodes the specified GameItem message. Does not implicitly {@link pb.GameItem.verify|verify} messages.
         * @param message GameItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGameItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GameItem message, length delimited. Does not implicitly {@link pb.GameItem.verify|verify} messages.
         * @param message GameItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGameItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GameItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GameItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.GameItem;

        /**
         * Decodes a GameItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GameItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.GameItem;

        /**
         * Verifies a GameItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GameItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GameItem
         */
        public static fromObject(object: { [k: string]: any }): pb.GameItem;

        /**
         * Creates a plain object from a GameItem message. Also converts values to other types if specified.
         * @param message GameItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.GameItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GameItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGames. */
    interface IS2CGames {

        /** S2CGames items */
        items?: (pb.IGameItem[]|null);
    }

    /** Represents a S2CGames. */
    class S2CGames implements IS2CGames {

        /**
         * Constructs a new S2CGames.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGames);

        /** S2CGames items. */
        public items: pb.IGameItem[];

        /**
         * Creates a new S2CGames instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGames instance
         */
        public static create(properties?: pb.IS2CGames): pb.S2CGames;

        /**
         * Encodes the specified S2CGames message. Does not implicitly {@link pb.S2CGames.verify|verify} messages.
         * @param message S2CGames message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGames, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGames message, length delimited. Does not implicitly {@link pb.S2CGames.verify|verify} messages.
         * @param message S2CGames message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGames, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGames message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGames
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGames;

        /**
         * Decodes a S2CGames message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGames
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGames;

        /**
         * Verifies a S2CGames message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGames message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGames
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGames;

        /**
         * Creates a plain object from a S2CGames message. Also converts values to other types if specified.
         * @param message S2CGames
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGames, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGames to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SEnterGame. */
    interface IC2SEnterGame {

        /** C2SEnterGame game */
        game?: (number|null);

        /** C2SEnterGame gsCat */
        gsCat?: (pb.GsCat|null);
    }

    /** Represents a C2SEnterGame. */
    class C2SEnterGame implements IC2SEnterGame {

        /**
         * Constructs a new C2SEnterGame.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SEnterGame);

        /** C2SEnterGame game. */
        public game: number;

        /** C2SEnterGame gsCat. */
        public gsCat: pb.GsCat;

        /**
         * Creates a new C2SEnterGame instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SEnterGame instance
         */
        public static create(properties?: pb.IC2SEnterGame): pb.C2SEnterGame;

        /**
         * Encodes the specified C2SEnterGame message. Does not implicitly {@link pb.C2SEnterGame.verify|verify} messages.
         * @param message C2SEnterGame message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SEnterGame, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SEnterGame message, length delimited. Does not implicitly {@link pb.C2SEnterGame.verify|verify} messages.
         * @param message C2SEnterGame message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SEnterGame, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SEnterGame message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SEnterGame
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SEnterGame;

        /**
         * Decodes a C2SEnterGame message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SEnterGame
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SEnterGame;

        /**
         * Verifies a C2SEnterGame message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SEnterGame message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SEnterGame
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SEnterGame;

        /**
         * Creates a plain object from a C2SEnterGame message. Also converts values to other types if specified.
         * @param message C2SEnterGame
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SEnterGame, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SEnterGame to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CBackLobby. */
    interface IS2CBackLobby {
    }

    /** Represents a S2CBackLobby. */
    class S2CBackLobby implements IS2CBackLobby {

        /**
         * Constructs a new S2CBackLobby.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CBackLobby);

        /**
         * Creates a new S2CBackLobby instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CBackLobby instance
         */
        public static create(properties?: pb.IS2CBackLobby): pb.S2CBackLobby;

        /**
         * Encodes the specified S2CBackLobby message. Does not implicitly {@link pb.S2CBackLobby.verify|verify} messages.
         * @param message S2CBackLobby message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CBackLobby, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CBackLobby message, length delimited. Does not implicitly {@link pb.S2CBackLobby.verify|verify} messages.
         * @param message S2CBackLobby message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CBackLobby, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CBackLobby message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CBackLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CBackLobby;

        /**
         * Decodes a S2CBackLobby message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CBackLobby
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CBackLobby;

        /**
         * Verifies a S2CBackLobby message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CBackLobby message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CBackLobby
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CBackLobby;

        /**
         * Creates a plain object from a S2CBackLobby message. Also converts values to other types if specified.
         * @param message S2CBackLobby
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CBackLobby, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CBackLobby to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SQuickStart. */
    interface IC2SQuickStart {
    }

    /** Represents a C2SQuickStart. */
    class C2SQuickStart implements IC2SQuickStart {

        /**
         * Constructs a new C2SQuickStart.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SQuickStart);

        /**
         * Creates a new C2SQuickStart instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SQuickStart instance
         */
        public static create(properties?: pb.IC2SQuickStart): pb.C2SQuickStart;

        /**
         * Encodes the specified C2SQuickStart message. Does not implicitly {@link pb.C2SQuickStart.verify|verify} messages.
         * @param message C2SQuickStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SQuickStart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SQuickStart message, length delimited. Does not implicitly {@link pb.C2SQuickStart.verify|verify} messages.
         * @param message C2SQuickStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SQuickStart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SQuickStart message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SQuickStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SQuickStart;

        /**
         * Decodes a C2SQuickStart message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SQuickStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SQuickStart;

        /**
         * Verifies a C2SQuickStart message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SQuickStart message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SQuickStart
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SQuickStart;

        /**
         * Creates a plain object from a C2SQuickStart message. Also converts values to other types if specified.
         * @param message C2SQuickStart
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SQuickStart, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SQuickStart to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SLogin. */
    interface IC2SLogin {
    }

    /** Represents a C2SLogin. */
    class C2SLogin implements IC2SLogin {

        /**
         * Constructs a new C2SLogin.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SLogin);

        /**
         * Creates a new C2SLogin instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SLogin instance
         */
        public static create(properties?: pb.IC2SLogin): pb.C2SLogin;

        /**
         * Encodes the specified C2SLogin message. Does not implicitly {@link pb.C2SLogin.verify|verify} messages.
         * @param message C2SLogin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SLogin, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SLogin message, length delimited. Does not implicitly {@link pb.C2SLogin.verify|verify} messages.
         * @param message C2SLogin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SLogin, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SLogin message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SLogin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SLogin;

        /**
         * Decodes a C2SLogin message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SLogin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SLogin;

        /**
         * Verifies a C2SLogin message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SLogin message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SLogin
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SLogin;

        /**
         * Creates a plain object from a C2SLogin message. Also converts values to other types if specified.
         * @param message C2SLogin
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SLogin, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SLogin to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CLogin. */
    interface IS2CLogin {

        /** S2CLogin data */
        data?: (pb.IPlayer|null);
    }

    /** Represents a S2CLogin. */
    class S2CLogin implements IS2CLogin {

        /**
         * Constructs a new S2CLogin.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CLogin);

        /** S2CLogin data. */
        public data?: (pb.IPlayer|null);

        /**
         * Creates a new S2CLogin instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CLogin instance
         */
        public static create(properties?: pb.IS2CLogin): pb.S2CLogin;

        /**
         * Encodes the specified S2CLogin message. Does not implicitly {@link pb.S2CLogin.verify|verify} messages.
         * @param message S2CLogin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CLogin, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CLogin message, length delimited. Does not implicitly {@link pb.S2CLogin.verify|verify} messages.
         * @param message S2CLogin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CLogin, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CLogin message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CLogin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CLogin;

        /**
         * Decodes a S2CLogin message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CLogin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CLogin;

        /**
         * Verifies a S2CLogin message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CLogin message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CLogin
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CLogin;

        /**
         * Creates a plain object from a S2CLogin message. Also converts values to other types if specified.
         * @param message S2CLogin
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CLogin, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CLogin to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SLogined. */
    interface IC2SLogined {
    }

    /** Represents a C2SLogined. */
    class C2SLogined implements IC2SLogined {

        /**
         * Constructs a new C2SLogined.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SLogined);

        /**
         * Creates a new C2SLogined instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SLogined instance
         */
        public static create(properties?: pb.IC2SLogined): pb.C2SLogined;

        /**
         * Encodes the specified C2SLogined message. Does not implicitly {@link pb.C2SLogined.verify|verify} messages.
         * @param message C2SLogined message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SLogined, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SLogined message, length delimited. Does not implicitly {@link pb.C2SLogined.verify|verify} messages.
         * @param message C2SLogined message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SLogined, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SLogined message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SLogined
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SLogined;

        /**
         * Decodes a C2SLogined message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SLogined
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SLogined;

        /**
         * Verifies a C2SLogined message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SLogined message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SLogined
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SLogined;

        /**
         * Creates a plain object from a C2SLogined message. Also converts values to other types if specified.
         * @param message C2SLogined
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SLogined, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SLogined to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahNewPlayerEnter. */
    interface IS2CMahNewPlayerEnter {

        /** S2CMahNewPlayerEnter tableCommon */
        tableCommon?: (pb.ITableCommon|null);

        /** S2CMahNewPlayerEnter gamePlayer */
        gamePlayer?: (pb.IMahPlayerData[]|null);
    }

    /** Represents a S2CMahNewPlayerEnter. */
    class S2CMahNewPlayerEnter implements IS2CMahNewPlayerEnter {

        /**
         * Constructs a new S2CMahNewPlayerEnter.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahNewPlayerEnter);

        /** S2CMahNewPlayerEnter tableCommon. */
        public tableCommon?: (pb.ITableCommon|null);

        /** S2CMahNewPlayerEnter gamePlayer. */
        public gamePlayer: pb.IMahPlayerData[];

        /**
         * Creates a new S2CMahNewPlayerEnter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahNewPlayerEnter instance
         */
        public static create(properties?: pb.IS2CMahNewPlayerEnter): pb.S2CMahNewPlayerEnter;

        /**
         * Encodes the specified S2CMahNewPlayerEnter message. Does not implicitly {@link pb.S2CMahNewPlayerEnter.verify|verify} messages.
         * @param message S2CMahNewPlayerEnter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahNewPlayerEnter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahNewPlayerEnter message, length delimited. Does not implicitly {@link pb.S2CMahNewPlayerEnter.verify|verify} messages.
         * @param message S2CMahNewPlayerEnter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahNewPlayerEnter, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahNewPlayerEnter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahNewPlayerEnter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahNewPlayerEnter;

        /**
         * Decodes a S2CMahNewPlayerEnter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahNewPlayerEnter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahNewPlayerEnter;

        /**
         * Verifies a S2CMahNewPlayerEnter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahNewPlayerEnter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahNewPlayerEnter
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahNewPlayerEnter;

        /**
         * Creates a plain object from a S2CMahNewPlayerEnter message. Also converts values to other types if specified.
         * @param message S2CMahNewPlayerEnter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahNewPlayerEnter, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahNewPlayerEnter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahResetTable. */
    interface IS2CMahResetTable {

        /** S2CMahResetTable tableCommon */
        tableCommon?: (pb.ITableCommon|null);

        /** S2CMahResetTable gameTable */
        gameTable?: (pb.IMahTableGameData|null);

        /** S2CMahResetTable gameRule */
        gameRule?: (pb.IMahTableRule|null);

        /** S2CMahResetTable gamePlayers */
        gamePlayers?: (pb.IMahPlayerData[]|null);
    }

    /** Represents a S2CMahResetTable. */
    class S2CMahResetTable implements IS2CMahResetTable {

        /**
         * Constructs a new S2CMahResetTable.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahResetTable);

        /** S2CMahResetTable tableCommon. */
        public tableCommon?: (pb.ITableCommon|null);

        /** S2CMahResetTable gameTable. */
        public gameTable?: (pb.IMahTableGameData|null);

        /** S2CMahResetTable gameRule. */
        public gameRule?: (pb.IMahTableRule|null);

        /** S2CMahResetTable gamePlayers. */
        public gamePlayers: pb.IMahPlayerData[];

        /**
         * Creates a new S2CMahResetTable instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahResetTable instance
         */
        public static create(properties?: pb.IS2CMahResetTable): pb.S2CMahResetTable;

        /**
         * Encodes the specified S2CMahResetTable message. Does not implicitly {@link pb.S2CMahResetTable.verify|verify} messages.
         * @param message S2CMahResetTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahResetTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahResetTable message, length delimited. Does not implicitly {@link pb.S2CMahResetTable.verify|verify} messages.
         * @param message S2CMahResetTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahResetTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahResetTable message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahResetTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahResetTable;

        /**
         * Decodes a S2CMahResetTable message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahResetTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahResetTable;

        /**
         * Verifies a S2CMahResetTable message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahResetTable message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahResetTable
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahResetTable;

        /**
         * Creates a plain object from a S2CMahResetTable message. Also converts values to other types if specified.
         * @param message S2CMahResetTable
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahResetTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahResetTable to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahTableData. */
    interface IS2CMahTableData {

        /** S2CMahTableData tableCommon */
        tableCommon?: (pb.ITableCommon|null);

        /** S2CMahTableData gameTable */
        gameTable?: (pb.IMahTableGameData|null);

        /** S2CMahTableData gameRule */
        gameRule?: (pb.IMahTableRule|null);

        /** S2CMahTableData gamePlayers */
        gamePlayers?: (pb.IMahPlayerData[]|null);
    }

    /** Represents a S2CMahTableData. */
    class S2CMahTableData implements IS2CMahTableData {

        /**
         * Constructs a new S2CMahTableData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahTableData);

        /** S2CMahTableData tableCommon. */
        public tableCommon?: (pb.ITableCommon|null);

        /** S2CMahTableData gameTable. */
        public gameTable?: (pb.IMahTableGameData|null);

        /** S2CMahTableData gameRule. */
        public gameRule?: (pb.IMahTableRule|null);

        /** S2CMahTableData gamePlayers. */
        public gamePlayers: pb.IMahPlayerData[];

        /**
         * Creates a new S2CMahTableData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahTableData instance
         */
        public static create(properties?: pb.IS2CMahTableData): pb.S2CMahTableData;

        /**
         * Encodes the specified S2CMahTableData message. Does not implicitly {@link pb.S2CMahTableData.verify|verify} messages.
         * @param message S2CMahTableData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahTableData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahTableData message, length delimited. Does not implicitly {@link pb.S2CMahTableData.verify|verify} messages.
         * @param message S2CMahTableData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahTableData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahTableData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahTableData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahTableData;

        /**
         * Decodes a S2CMahTableData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahTableData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahTableData;

        /**
         * Verifies a S2CMahTableData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahTableData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahTableData
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahTableData;

        /**
         * Creates a plain object from a S2CMahTableData message. Also converts values to other types if specified.
         * @param message S2CMahTableData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahTableData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahTableData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahUpdateTableAndPlayerState. */
    interface IS2CMahUpdateTableAndPlayerState {

        /** S2CMahUpdateTableAndPlayerState tableStage */
        tableStage?: (number|null);

        /** S2CMahUpdateTableAndPlayerState playerState */
        playerState?: (pb.IId2Val[]|null);
    }

    /** Represents a S2CMahUpdateTableAndPlayerState. */
    class S2CMahUpdateTableAndPlayerState implements IS2CMahUpdateTableAndPlayerState {

        /**
         * Constructs a new S2CMahUpdateTableAndPlayerState.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahUpdateTableAndPlayerState);

        /** S2CMahUpdateTableAndPlayerState tableStage. */
        public tableStage: number;

        /** S2CMahUpdateTableAndPlayerState playerState. */
        public playerState: pb.IId2Val[];

        /**
         * Creates a new S2CMahUpdateTableAndPlayerState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahUpdateTableAndPlayerState instance
         */
        public static create(properties?: pb.IS2CMahUpdateTableAndPlayerState): pb.S2CMahUpdateTableAndPlayerState;

        /**
         * Encodes the specified S2CMahUpdateTableAndPlayerState message. Does not implicitly {@link pb.S2CMahUpdateTableAndPlayerState.verify|verify} messages.
         * @param message S2CMahUpdateTableAndPlayerState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahUpdateTableAndPlayerState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahUpdateTableAndPlayerState message, length delimited. Does not implicitly {@link pb.S2CMahUpdateTableAndPlayerState.verify|verify} messages.
         * @param message S2CMahUpdateTableAndPlayerState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahUpdateTableAndPlayerState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahUpdateTableAndPlayerState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahUpdateTableAndPlayerState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahUpdateTableAndPlayerState;

        /**
         * Decodes a S2CMahUpdateTableAndPlayerState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahUpdateTableAndPlayerState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahUpdateTableAndPlayerState;

        /**
         * Verifies a S2CMahUpdateTableAndPlayerState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahUpdateTableAndPlayerState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahUpdateTableAndPlayerState
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahUpdateTableAndPlayerState;

        /**
         * Creates a plain object from a S2CMahUpdateTableAndPlayerState message. Also converts values to other types if specified.
         * @param message S2CMahUpdateTableAndPlayerState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahUpdateTableAndPlayerState, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahUpdateTableAndPlayerState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGameBegin. */
    interface IS2CGameBegin {

        /** S2CGameBegin curinning */
        curinning?: (number|null);

        /** S2CGameBegin index */
        index?: (number|null);

        /** S2CGameBegin touZi */
        touZi?: (number[]|null);
    }

    /** Represents a S2CGameBegin. */
    class S2CGameBegin implements IS2CGameBegin {

        /**
         * Constructs a new S2CGameBegin.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGameBegin);

        /** S2CGameBegin curinning. */
        public curinning: number;

        /** S2CGameBegin index. */
        public index: number;

        /** S2CGameBegin touZi. */
        public touZi: number[];

        /**
         * Creates a new S2CGameBegin instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGameBegin instance
         */
        public static create(properties?: pb.IS2CGameBegin): pb.S2CGameBegin;

        /**
         * Encodes the specified S2CGameBegin message. Does not implicitly {@link pb.S2CGameBegin.verify|verify} messages.
         * @param message S2CGameBegin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGameBegin, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGameBegin message, length delimited. Does not implicitly {@link pb.S2CGameBegin.verify|verify} messages.
         * @param message S2CGameBegin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGameBegin, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGameBegin message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGameBegin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGameBegin;

        /**
         * Decodes a S2CGameBegin message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGameBegin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGameBegin;

        /**
         * Verifies a S2CGameBegin message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGameBegin message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGameBegin
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGameBegin;

        /**
         * Creates a plain object from a S2CGameBegin message. Also converts values to other types if specified.
         * @param message S2CGameBegin
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGameBegin, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGameBegin to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SMahReady. */
    interface IC2SMahReady {
    }

    /** Represents a C2SMahReady. */
    class C2SMahReady implements IC2SMahReady {

        /**
         * Constructs a new C2SMahReady.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SMahReady);

        /**
         * Creates a new C2SMahReady instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SMahReady instance
         */
        public static create(properties?: pb.IC2SMahReady): pb.C2SMahReady;

        /**
         * Encodes the specified C2SMahReady message. Does not implicitly {@link pb.C2SMahReady.verify|verify} messages.
         * @param message C2SMahReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SMahReady, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SMahReady message, length delimited. Does not implicitly {@link pb.C2SMahReady.verify|verify} messages.
         * @param message C2SMahReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SMahReady, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SMahReady message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SMahReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SMahReady;

        /**
         * Decodes a C2SMahReady message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SMahReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SMahReady;

        /**
         * Verifies a C2SMahReady message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SMahReady message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SMahReady
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SMahReady;

        /**
         * Creates a plain object from a C2SMahReady message. Also converts values to other types if specified.
         * @param message C2SMahReady
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SMahReady, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SMahReady to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahFaPai. */
    interface IS2CMahFaPai {

        /** S2CMahFaPai stage */
        stage?: (pb.MahTableStage|null);

        /** S2CMahFaPai restCount */
        restCount?: (number|null);

        /** S2CMahFaPai moPai */
        moPai?: (number|null);

        /** S2CMahFaPai mjs */
        mjs?: (number[]|null);

        /** S2CMahFaPai FuKaHZIndex */
        FuKaHZIndex?: (number[]|null);

        /** S2CMahFaPai touZi */
        touZi?: (number[]|null);
    }

    /** Represents a S2CMahFaPai. */
    class S2CMahFaPai implements IS2CMahFaPai {

        /**
         * Constructs a new S2CMahFaPai.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahFaPai);

        /** S2CMahFaPai stage. */
        public stage: pb.MahTableStage;

        /** S2CMahFaPai restCount. */
        public restCount: number;

        /** S2CMahFaPai moPai. */
        public moPai: number;

        /** S2CMahFaPai mjs. */
        public mjs: number[];

        /** S2CMahFaPai FuKaHZIndex. */
        public FuKaHZIndex: number[];

        /** S2CMahFaPai touZi. */
        public touZi: number[];

        /**
         * Creates a new S2CMahFaPai instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahFaPai instance
         */
        public static create(properties?: pb.IS2CMahFaPai): pb.S2CMahFaPai;

        /**
         * Encodes the specified S2CMahFaPai message. Does not implicitly {@link pb.S2CMahFaPai.verify|verify} messages.
         * @param message S2CMahFaPai message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahFaPai, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahFaPai message, length delimited. Does not implicitly {@link pb.S2CMahFaPai.verify|verify} messages.
         * @param message S2CMahFaPai message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahFaPai, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahFaPai message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahFaPai
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahFaPai;

        /**
         * Decodes a S2CMahFaPai message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahFaPai
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahFaPai;

        /**
         * Verifies a S2CMahFaPai message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahFaPai message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahFaPai
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahFaPai;

        /**
         * Creates a plain object from a S2CMahFaPai message. Also converts values to other types if specified.
         * @param message S2CMahFaPai
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahFaPai, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahFaPai to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahHSZNotify. */
    interface IS2CMahHSZNotify {

        /** S2CMahHSZNotify stage */
        stage?: (pb.MahTableStage|null);

        /** S2CMahHSZNotify mjId */
        mjId?: (number[]|null);
    }

    /** Represents a S2CMahHSZNotify. */
    class S2CMahHSZNotify implements IS2CMahHSZNotify {

        /**
         * Constructs a new S2CMahHSZNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahHSZNotify);

        /** S2CMahHSZNotify stage. */
        public stage: pb.MahTableStage;

        /** S2CMahHSZNotify mjId. */
        public mjId: number[];

        /**
         * Creates a new S2CMahHSZNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahHSZNotify instance
         */
        public static create(properties?: pb.IS2CMahHSZNotify): pb.S2CMahHSZNotify;

        /**
         * Encodes the specified S2CMahHSZNotify message. Does not implicitly {@link pb.S2CMahHSZNotify.verify|verify} messages.
         * @param message S2CMahHSZNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahHSZNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahHSZNotify message, length delimited. Does not implicitly {@link pb.S2CMahHSZNotify.verify|verify} messages.
         * @param message S2CMahHSZNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahHSZNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahHSZNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahHSZNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahHSZNotify;

        /**
         * Decodes a S2CMahHSZNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahHSZNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahHSZNotify;

        /**
         * Verifies a S2CMahHSZNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahHSZNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahHSZNotify
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahHSZNotify;

        /**
         * Creates a plain object from a S2CMahHSZNotify message. Also converts values to other types if specified.
         * @param message S2CMahHSZNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahHSZNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahHSZNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SMahHSZ. */
    interface IC2SMahHSZ {

        /** C2SMahHSZ mjs */
        mjs?: (number[]|null);

        /** C2SMahHSZ useMo */
        useMo?: (boolean|null);
    }

    /** Represents a C2SMahHSZ. */
    class C2SMahHSZ implements IC2SMahHSZ {

        /**
         * Constructs a new C2SMahHSZ.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SMahHSZ);

        /** C2SMahHSZ mjs. */
        public mjs: number[];

        /** C2SMahHSZ useMo. */
        public useMo: boolean;

        /**
         * Creates a new C2SMahHSZ instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SMahHSZ instance
         */
        public static create(properties?: pb.IC2SMahHSZ): pb.C2SMahHSZ;

        /**
         * Encodes the specified C2SMahHSZ message. Does not implicitly {@link pb.C2SMahHSZ.verify|verify} messages.
         * @param message C2SMahHSZ message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SMahHSZ, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SMahHSZ message, length delimited. Does not implicitly {@link pb.C2SMahHSZ.verify|verify} messages.
         * @param message C2SMahHSZ message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SMahHSZ, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SMahHSZ message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SMahHSZ
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SMahHSZ;

        /**
         * Decodes a C2SMahHSZ message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SMahHSZ
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SMahHSZ;

        /**
         * Verifies a C2SMahHSZ message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SMahHSZ message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SMahHSZ
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SMahHSZ;

        /**
         * Creates a plain object from a C2SMahHSZ message. Also converts values to other types if specified.
         * @param message C2SMahHSZ
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SMahHSZ, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SMahHSZ to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahHSZResult. */
    interface IS2CMahHSZResult {

        /** S2CMahHSZResult type */
        type?: (pb.MahHSZType|null);

        /** S2CMahHSZResult getMahs */
        getMahs?: (number[]|null);

        /** S2CMahHSZResult delMahs */
        delMahs?: (number[]|null);

        /** S2CMahHSZResult newMo */
        newMo?: (number|null);
    }

    /** Represents a S2CMahHSZResult. */
    class S2CMahHSZResult implements IS2CMahHSZResult {

        /**
         * Constructs a new S2CMahHSZResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahHSZResult);

        /** S2CMahHSZResult type. */
        public type: pb.MahHSZType;

        /** S2CMahHSZResult getMahs. */
        public getMahs: number[];

        /** S2CMahHSZResult delMahs. */
        public delMahs: number[];

        /** S2CMahHSZResult newMo. */
        public newMo: number;

        /**
         * Creates a new S2CMahHSZResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahHSZResult instance
         */
        public static create(properties?: pb.IS2CMahHSZResult): pb.S2CMahHSZResult;

        /**
         * Encodes the specified S2CMahHSZResult message. Does not implicitly {@link pb.S2CMahHSZResult.verify|verify} messages.
         * @param message S2CMahHSZResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahHSZResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahHSZResult message, length delimited. Does not implicitly {@link pb.S2CMahHSZResult.verify|verify} messages.
         * @param message S2CMahHSZResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahHSZResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahHSZResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahHSZResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahHSZResult;

        /**
         * Decodes a S2CMahHSZResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahHSZResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahHSZResult;

        /**
         * Verifies a S2CMahHSZResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahHSZResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahHSZResult
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahHSZResult;

        /**
         * Creates a plain object from a S2CMahHSZResult message. Also converts values to other types if specified.
         * @param message S2CMahHSZResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahHSZResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahHSZResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahDingQueNotify. */
    interface IS2CMahDingQueNotify {

        /** S2CMahDingQueNotify stage */
        stage?: (pb.MahTableStage|null);

        /** S2CMahDingQueNotify que */
        que?: (number|null);
    }

    /** Represents a S2CMahDingQueNotify. */
    class S2CMahDingQueNotify implements IS2CMahDingQueNotify {

        /**
         * Constructs a new S2CMahDingQueNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahDingQueNotify);

        /** S2CMahDingQueNotify stage. */
        public stage: pb.MahTableStage;

        /** S2CMahDingQueNotify que. */
        public que: number;

        /**
         * Creates a new S2CMahDingQueNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahDingQueNotify instance
         */
        public static create(properties?: pb.IS2CMahDingQueNotify): pb.S2CMahDingQueNotify;

        /**
         * Encodes the specified S2CMahDingQueNotify message. Does not implicitly {@link pb.S2CMahDingQueNotify.verify|verify} messages.
         * @param message S2CMahDingQueNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahDingQueNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahDingQueNotify message, length delimited. Does not implicitly {@link pb.S2CMahDingQueNotify.verify|verify} messages.
         * @param message S2CMahDingQueNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahDingQueNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahDingQueNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahDingQueNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahDingQueNotify;

        /**
         * Decodes a S2CMahDingQueNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahDingQueNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahDingQueNotify;

        /**
         * Verifies a S2CMahDingQueNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahDingQueNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahDingQueNotify
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahDingQueNotify;

        /**
         * Creates a plain object from a S2CMahDingQueNotify message. Also converts values to other types if specified.
         * @param message S2CMahDingQueNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahDingQueNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahDingQueNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SMahDingQue. */
    interface IC2SMahDingQue {

        /** C2SMahDingQue que */
        que?: (number|null);
    }

    /** Represents a C2SMahDingQue. */
    class C2SMahDingQue implements IC2SMahDingQue {

        /**
         * Constructs a new C2SMahDingQue.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SMahDingQue);

        /** C2SMahDingQue que. */
        public que: number;

        /**
         * Creates a new C2SMahDingQue instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SMahDingQue instance
         */
        public static create(properties?: pb.IC2SMahDingQue): pb.C2SMahDingQue;

        /**
         * Encodes the specified C2SMahDingQue message. Does not implicitly {@link pb.C2SMahDingQue.verify|verify} messages.
         * @param message C2SMahDingQue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SMahDingQue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SMahDingQue message, length delimited. Does not implicitly {@link pb.C2SMahDingQue.verify|verify} messages.
         * @param message C2SMahDingQue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SMahDingQue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SMahDingQue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SMahDingQue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SMahDingQue;

        /**
         * Decodes a C2SMahDingQue message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SMahDingQue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SMahDingQue;

        /**
         * Verifies a C2SMahDingQue message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SMahDingQue message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SMahDingQue
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SMahDingQue;

        /**
         * Creates a plain object from a C2SMahDingQue message. Also converts values to other types if specified.
         * @param message C2SMahDingQue
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SMahDingQue, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SMahDingQue to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahDingQueResult. */
    interface IS2CMahDingQueResult {

        /** S2CMahDingQueResult que */
        que?: (pb.IId2Val[]|null);
    }

    /** Represents a S2CMahDingQueResult. */
    class S2CMahDingQueResult implements IS2CMahDingQueResult {

        /**
         * Constructs a new S2CMahDingQueResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahDingQueResult);

        /** S2CMahDingQueResult que. */
        public que: pb.IId2Val[];

        /**
         * Creates a new S2CMahDingQueResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahDingQueResult instance
         */
        public static create(properties?: pb.IS2CMahDingQueResult): pb.S2CMahDingQueResult;

        /**
         * Encodes the specified S2CMahDingQueResult message. Does not implicitly {@link pb.S2CMahDingQueResult.verify|verify} messages.
         * @param message S2CMahDingQueResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahDingQueResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahDingQueResult message, length delimited. Does not implicitly {@link pb.S2CMahDingQueResult.verify|verify} messages.
         * @param message S2CMahDingQueResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahDingQueResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahDingQueResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahDingQueResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahDingQueResult;

        /**
         * Decodes a S2CMahDingQueResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahDingQueResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahDingQueResult;

        /**
         * Verifies a S2CMahDingQueResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahDingQueResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahDingQueResult
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahDingQueResult;

        /**
         * Creates a plain object from a S2CMahDingQueResult message. Also converts values to other types if specified.
         * @param message S2CMahDingQueResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahDingQueResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahDingQueResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahMoPai. */
    interface IS2CMahMoPai {

        /** S2CMahMoPai index */
        index?: (number|null);

        /** S2CMahMoPai mjId */
        mjId?: (number|null);

        /** S2CMahMoPai stage */
        stage?: (pb.MahTableStage|null);

        /** S2CMahMoPai chuoPaiAction */
        chuoPaiAction?: (boolean|null);

        /** S2CMahMoPai operate */
        operate?: (pb.IKeCaoZuo|null);

        /** S2CMahMoPai restCount */
        restCount?: (number|null);

        /** S2CMahMoPai data */
        data?: (pb.IMahKeHuData[]|null);

        /** S2CMahMoPai ShowKeHu */
        ShowKeHu?: (boolean|null);

        /** S2CMahMoPai param2 */
        param2?: (number|null);
    }

    /** Represents a S2CMahMoPai. */
    class S2CMahMoPai implements IS2CMahMoPai {

        /**
         * Constructs a new S2CMahMoPai.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahMoPai);

        /** S2CMahMoPai index. */
        public index: number;

        /** S2CMahMoPai mjId. */
        public mjId: number;

        /** S2CMahMoPai stage. */
        public stage: pb.MahTableStage;

        /** S2CMahMoPai chuoPaiAction. */
        public chuoPaiAction: boolean;

        /** S2CMahMoPai operate. */
        public operate?: (pb.IKeCaoZuo|null);

        /** S2CMahMoPai restCount. */
        public restCount: number;

        /** S2CMahMoPai data. */
        public data: pb.IMahKeHuData[];

        /** S2CMahMoPai ShowKeHu. */
        public ShowKeHu: boolean;

        /** S2CMahMoPai param2. */
        public param2: number;

        /**
         * Creates a new S2CMahMoPai instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahMoPai instance
         */
        public static create(properties?: pb.IS2CMahMoPai): pb.S2CMahMoPai;

        /**
         * Encodes the specified S2CMahMoPai message. Does not implicitly {@link pb.S2CMahMoPai.verify|verify} messages.
         * @param message S2CMahMoPai message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahMoPai, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahMoPai message, length delimited. Does not implicitly {@link pb.S2CMahMoPai.verify|verify} messages.
         * @param message S2CMahMoPai message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahMoPai, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahMoPai message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahMoPai
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahMoPai;

        /**
         * Decodes a S2CMahMoPai message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahMoPai
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahMoPai;

        /**
         * Verifies a S2CMahMoPai message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahMoPai message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahMoPai
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahMoPai;

        /**
         * Creates a plain object from a S2CMahMoPai message. Also converts values to other types if specified.
         * @param message S2CMahMoPai
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahMoPai, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahMoPai to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SMahChuPai. */
    interface IC2SMahChuPai {

        /** C2SMahChuPai mjId */
        mjId?: (number|null);
    }

    /** Represents a C2SMahChuPai. */
    class C2SMahChuPai implements IC2SMahChuPai {

        /**
         * Constructs a new C2SMahChuPai.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SMahChuPai);

        /** C2SMahChuPai mjId. */
        public mjId: number;

        /**
         * Creates a new C2SMahChuPai instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SMahChuPai instance
         */
        public static create(properties?: pb.IC2SMahChuPai): pb.C2SMahChuPai;

        /**
         * Encodes the specified C2SMahChuPai message. Does not implicitly {@link pb.C2SMahChuPai.verify|verify} messages.
         * @param message C2SMahChuPai message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SMahChuPai, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SMahChuPai message, length delimited. Does not implicitly {@link pb.C2SMahChuPai.verify|verify} messages.
         * @param message C2SMahChuPai message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SMahChuPai, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SMahChuPai message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SMahChuPai
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SMahChuPai;

        /**
         * Decodes a C2SMahChuPai message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SMahChuPai
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SMahChuPai;

        /**
         * Verifies a C2SMahChuPai message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SMahChuPai message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SMahChuPai
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SMahChuPai;

        /**
         * Creates a plain object from a C2SMahChuPai message. Also converts values to other types if specified.
         * @param message C2SMahChuPai
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SMahChuPai, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SMahChuPai to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahChuPai. */
    interface IS2CMahChuPai {

        /** S2CMahChuPai mjId */
        mjId?: (number|null);

        /** S2CMahChuPai index */
        index?: (number|null);

        /** S2CMahChuPai operate */
        operate?: (pb.IKeCaoZuo|null);

        /** S2CMahChuPai state */
        state?: (pb.MahPlayerState|null);

        /** S2CMahChuPai mjIdx */
        mjIdx?: (number|null);
    }

    /** Represents a S2CMahChuPai. */
    class S2CMahChuPai implements IS2CMahChuPai {

        /**
         * Constructs a new S2CMahChuPai.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahChuPai);

        /** S2CMahChuPai mjId. */
        public mjId: number;

        /** S2CMahChuPai index. */
        public index: number;

        /** S2CMahChuPai operate. */
        public operate?: (pb.IKeCaoZuo|null);

        /** S2CMahChuPai state. */
        public state: pb.MahPlayerState;

        /** S2CMahChuPai mjIdx. */
        public mjIdx: number;

        /**
         * Creates a new S2CMahChuPai instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahChuPai instance
         */
        public static create(properties?: pb.IS2CMahChuPai): pb.S2CMahChuPai;

        /**
         * Encodes the specified S2CMahChuPai message. Does not implicitly {@link pb.S2CMahChuPai.verify|verify} messages.
         * @param message S2CMahChuPai message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahChuPai, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahChuPai message, length delimited. Does not implicitly {@link pb.S2CMahChuPai.verify|verify} messages.
         * @param message S2CMahChuPai message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahChuPai, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahChuPai message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahChuPai
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahChuPai;

        /**
         * Decodes a S2CMahChuPai message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahChuPai
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahChuPai;

        /**
         * Verifies a S2CMahChuPai message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahChuPai message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahChuPai
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahChuPai;

        /**
         * Creates a plain object from a S2CMahChuPai message. Also converts values to other types if specified.
         * @param message S2CMahChuPai
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahChuPai, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahChuPai to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahHasHPG. */
    interface IS2CMahHasHPG {

        /** S2CMahHasHPG operate */
        operate?: (pb.IKeCaoZuo|null);
    }

    /** Represents a S2CMahHasHPG. */
    class S2CMahHasHPG implements IS2CMahHasHPG {

        /**
         * Constructs a new S2CMahHasHPG.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahHasHPG);

        /** S2CMahHasHPG operate. */
        public operate?: (pb.IKeCaoZuo|null);

        /**
         * Creates a new S2CMahHasHPG instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahHasHPG instance
         */
        public static create(properties?: pb.IS2CMahHasHPG): pb.S2CMahHasHPG;

        /**
         * Encodes the specified S2CMahHasHPG message. Does not implicitly {@link pb.S2CMahHasHPG.verify|verify} messages.
         * @param message S2CMahHasHPG message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahHasHPG, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahHasHPG message, length delimited. Does not implicitly {@link pb.S2CMahHasHPG.verify|verify} messages.
         * @param message S2CMahHasHPG message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahHasHPG, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahHasHPG message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahHasHPG
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahHasHPG;

        /**
         * Decodes a S2CMahHasHPG message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahHasHPG
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahHasHPG;

        /**
         * Verifies a S2CMahHasHPG message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahHasHPG message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahHasHPG
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahHasHPG;

        /**
         * Creates a plain object from a S2CMahHasHPG message. Also converts values to other types if specified.
         * @param message S2CMahHasHPG
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahHasHPG, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahHasHPG to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SMahHPG. */
    interface IC2SMahHPG {

        /** C2SMahHPG mjId */
        mjId?: (number|null);

        /** C2SMahHPG operate */
        operate?: (pb.MahHPGOPerate|null);
    }

    /** Represents a C2SMahHPG. */
    class C2SMahHPG implements IC2SMahHPG {

        /**
         * Constructs a new C2SMahHPG.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SMahHPG);

        /** C2SMahHPG mjId. */
        public mjId: number;

        /** C2SMahHPG operate. */
        public operate: pb.MahHPGOPerate;

        /**
         * Creates a new C2SMahHPG instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SMahHPG instance
         */
        public static create(properties?: pb.IC2SMahHPG): pb.C2SMahHPG;

        /**
         * Encodes the specified C2SMahHPG message. Does not implicitly {@link pb.C2SMahHPG.verify|verify} messages.
         * @param message C2SMahHPG message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SMahHPG, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SMahHPG message, length delimited. Does not implicitly {@link pb.C2SMahHPG.verify|verify} messages.
         * @param message C2SMahHPG message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SMahHPG, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SMahHPG message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SMahHPG
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SMahHPG;

        /**
         * Decodes a C2SMahHPG message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SMahHPG
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SMahHPG;

        /**
         * Verifies a C2SMahHPG message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SMahHPG message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SMahHPG
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SMahHPG;

        /**
         * Creates a plain object from a C2SMahHPG message. Also converts values to other types if specified.
         * @param message C2SMahHPG
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SMahHPG, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SMahHPG to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahPGResult. */
    interface IS2CMahPGResult {

        /** S2CMahPGResult index */
        index?: (number|null);

        /** S2CMahPGResult pg */
        pg?: (pb.IMahPengGang|null);

        /** S2CMahPGResult data */
        data?: (pb.IMahKeHuData[]|null);

        /** S2CMahPGResult ShowKeHu */
        ShowKeHu?: (boolean|null);
    }

    /** Represents a S2CMahPGResult. */
    class S2CMahPGResult implements IS2CMahPGResult {

        /**
         * Constructs a new S2CMahPGResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahPGResult);

        /** S2CMahPGResult index. */
        public index: number;

        /** S2CMahPGResult pg. */
        public pg?: (pb.IMahPengGang|null);

        /** S2CMahPGResult data. */
        public data: pb.IMahKeHuData[];

        /** S2CMahPGResult ShowKeHu. */
        public ShowKeHu: boolean;

        /**
         * Creates a new S2CMahPGResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahPGResult instance
         */
        public static create(properties?: pb.IS2CMahPGResult): pb.S2CMahPGResult;

        /**
         * Encodes the specified S2CMahPGResult message. Does not implicitly {@link pb.S2CMahPGResult.verify|verify} messages.
         * @param message S2CMahPGResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahPGResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahPGResult message, length delimited. Does not implicitly {@link pb.S2CMahPGResult.verify|verify} messages.
         * @param message S2CMahPGResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahPGResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahPGResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahPGResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahPGResult;

        /**
         * Decodes a S2CMahPGResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahPGResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahPGResult;

        /**
         * Verifies a S2CMahPGResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahPGResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahPGResult
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahPGResult;

        /**
         * Creates a plain object from a S2CMahPGResult message. Also converts values to other types if specified.
         * @param message S2CMahPGResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahPGResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahPGResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahHuResult. */
    interface IS2CMahHuResult {

        /** S2CMahHuResult hu */
        hu?: (pb.IMahHuData[]|null);

        /** S2CMahHuResult score */
        score?: (pb.ICoinData[]|null);

        /** S2CMahHuResult zhuanYi */
        zhuanYi?: (pb.IId2Val[]|null);

        /** S2CMahHuResult curcoin */
        curcoin?: (pb.IId2Val[]|null);
    }

    /** Represents a S2CMahHuResult. */
    class S2CMahHuResult implements IS2CMahHuResult {

        /**
         * Constructs a new S2CMahHuResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahHuResult);

        /** S2CMahHuResult hu. */
        public hu: pb.IMahHuData[];

        /** S2CMahHuResult score. */
        public score: pb.ICoinData[];

        /** S2CMahHuResult zhuanYi. */
        public zhuanYi: pb.IId2Val[];

        /** S2CMahHuResult curcoin. */
        public curcoin: pb.IId2Val[];

        /**
         * Creates a new S2CMahHuResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahHuResult instance
         */
        public static create(properties?: pb.IS2CMahHuResult): pb.S2CMahHuResult;

        /**
         * Encodes the specified S2CMahHuResult message. Does not implicitly {@link pb.S2CMahHuResult.verify|verify} messages.
         * @param message S2CMahHuResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahHuResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahHuResult message, length delimited. Does not implicitly {@link pb.S2CMahHuResult.verify|verify} messages.
         * @param message S2CMahHuResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahHuResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahHuResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahHuResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahHuResult;

        /**
         * Decodes a S2CMahHuResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahHuResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahHuResult;

        /**
         * Verifies a S2CMahHuResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahHuResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahHuResult
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahHuResult;

        /**
         * Creates a plain object from a S2CMahHuResult message. Also converts values to other types if specified.
         * @param message S2CMahHuResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahHuResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahHuResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahAuto. */
    interface IS2CMahAuto {

        /** S2CMahAuto indexAuto */
        indexAuto?: (pb.IId2Val[]|null);

        /** S2CMahAuto bZhuDong */
        bZhuDong?: (boolean|null);

        /** S2CMahAuto bNext */
        bNext?: (boolean|null);

        /** S2CMahAuto minValue */
        minValue?: (number|Long|null);
    }

    /** Represents a S2CMahAuto. */
    class S2CMahAuto implements IS2CMahAuto {

        /**
         * Constructs a new S2CMahAuto.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahAuto);

        /** S2CMahAuto indexAuto. */
        public indexAuto: pb.IId2Val[];

        /** S2CMahAuto bZhuDong. */
        public bZhuDong: boolean;

        /** S2CMahAuto bNext. */
        public bNext: boolean;

        /** S2CMahAuto minValue. */
        public minValue: (number|Long);

        /**
         * Creates a new S2CMahAuto instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahAuto instance
         */
        public static create(properties?: pb.IS2CMahAuto): pb.S2CMahAuto;

        /**
         * Encodes the specified S2CMahAuto message. Does not implicitly {@link pb.S2CMahAuto.verify|verify} messages.
         * @param message S2CMahAuto message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahAuto, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahAuto message, length delimited. Does not implicitly {@link pb.S2CMahAuto.verify|verify} messages.
         * @param message S2CMahAuto message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahAuto, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahAuto message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahAuto
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahAuto;

        /**
         * Decodes a S2CMahAuto message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahAuto
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahAuto;

        /**
         * Verifies a S2CMahAuto message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahAuto message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahAuto
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahAuto;

        /**
         * Creates a plain object from a S2CMahAuto message. Also converts values to other types if specified.
         * @param message S2CMahAuto
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahAuto, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahAuto to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SMahAuto. */
    interface IC2SMahAuto {

        /** C2SMahAuto bAuto */
        bAuto?: (boolean|null);

        /** C2SMahAuto bNext */
        bNext?: (boolean|null);

        /** C2SMahAuto minValue */
        minValue?: (number|Long|null);
    }

    /** Represents a C2SMahAuto. */
    class C2SMahAuto implements IC2SMahAuto {

        /**
         * Constructs a new C2SMahAuto.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SMahAuto);

        /** C2SMahAuto bAuto. */
        public bAuto: boolean;

        /** C2SMahAuto bNext. */
        public bNext: boolean;

        /** C2SMahAuto minValue. */
        public minValue: (number|Long);

        /**
         * Creates a new C2SMahAuto instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SMahAuto instance
         */
        public static create(properties?: pb.IC2SMahAuto): pb.C2SMahAuto;

        /**
         * Encodes the specified C2SMahAuto message. Does not implicitly {@link pb.C2SMahAuto.verify|verify} messages.
         * @param message C2SMahAuto message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SMahAuto, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SMahAuto message, length delimited. Does not implicitly {@link pb.C2SMahAuto.verify|verify} messages.
         * @param message C2SMahAuto message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SMahAuto, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SMahAuto message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SMahAuto
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SMahAuto;

        /**
         * Decodes a C2SMahAuto message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SMahAuto
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SMahAuto;

        /**
         * Verifies a C2SMahAuto message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SMahAuto message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SMahAuto
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SMahAuto;

        /**
         * Creates a plain object from a C2SMahAuto message. Also converts values to other types if specified.
         * @param message C2SMahAuto
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SMahAuto, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SMahAuto to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahInningOverData. */
    interface IS2CMahInningOverData {

        /** S2CMahInningOverData isLiuJu */
        isLiuJu?: (boolean|null);

        /** S2CMahInningOverData result */
        result?: (pb.IMahInningResult[]|null);

        /** S2CMahInningOverData liuShui */
        liuShui?: (pb.IMahLiuShui[]|null);

        /** S2CMahInningOverData bigWin */
        bigWin?: (number[]|null);
    }

    /** Represents a S2CMahInningOverData. */
    class S2CMahInningOverData implements IS2CMahInningOverData {

        /**
         * Constructs a new S2CMahInningOverData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahInningOverData);

        /** S2CMahInningOverData isLiuJu. */
        public isLiuJu: boolean;

        /** S2CMahInningOverData result. */
        public result: pb.IMahInningResult[];

        /** S2CMahInningOverData liuShui. */
        public liuShui: pb.IMahLiuShui[];

        /** S2CMahInningOverData bigWin. */
        public bigWin: number[];

        /**
         * Creates a new S2CMahInningOverData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahInningOverData instance
         */
        public static create(properties?: pb.IS2CMahInningOverData): pb.S2CMahInningOverData;

        /**
         * Encodes the specified S2CMahInningOverData message. Does not implicitly {@link pb.S2CMahInningOverData.verify|verify} messages.
         * @param message S2CMahInningOverData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahInningOverData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahInningOverData message, length delimited. Does not implicitly {@link pb.S2CMahInningOverData.verify|verify} messages.
         * @param message S2CMahInningOverData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahInningOverData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahInningOverData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahInningOverData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahInningOverData;

        /**
         * Decodes a S2CMahInningOverData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahInningOverData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahInningOverData;

        /**
         * Verifies a S2CMahInningOverData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahInningOverData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahInningOverData
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahInningOverData;

        /**
         * Creates a plain object from a S2CMahInningOverData message. Also converts values to other types if specified.
         * @param message S2CMahInningOverData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahInningOverData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahInningOverData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahGamePoChan. */
    interface IS2CMahGamePoChan {

        /** S2CMahGamePoChan inedx */
        inedx?: (number|null);

        /** S2CMahGamePoChan type */
        type?: (pb.MahPoChanReason|null);

        /** S2CMahGamePoChan waittime */
        waittime?: (number|null);

        /** S2CMahGamePoChan curCoin */
        curCoin?: (number|Long|null);
    }

    /** Represents a S2CMahGamePoChan. */
    class S2CMahGamePoChan implements IS2CMahGamePoChan {

        /**
         * Constructs a new S2CMahGamePoChan.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahGamePoChan);

        /** S2CMahGamePoChan inedx. */
        public inedx: number;

        /** S2CMahGamePoChan type. */
        public type: pb.MahPoChanReason;

        /** S2CMahGamePoChan waittime. */
        public waittime: number;

        /** S2CMahGamePoChan curCoin. */
        public curCoin: (number|Long);

        /**
         * Creates a new S2CMahGamePoChan instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahGamePoChan instance
         */
        public static create(properties?: pb.IS2CMahGamePoChan): pb.S2CMahGamePoChan;

        /**
         * Encodes the specified S2CMahGamePoChan message. Does not implicitly {@link pb.S2CMahGamePoChan.verify|verify} messages.
         * @param message S2CMahGamePoChan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahGamePoChan, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahGamePoChan message, length delimited. Does not implicitly {@link pb.S2CMahGamePoChan.verify|verify} messages.
         * @param message S2CMahGamePoChan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahGamePoChan, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahGamePoChan message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahGamePoChan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahGamePoChan;

        /**
         * Decodes a S2CMahGamePoChan message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahGamePoChan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahGamePoChan;

        /**
         * Verifies a S2CMahGamePoChan message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahGamePoChan message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahGamePoChan
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahGamePoChan;

        /**
         * Creates a plain object from a S2CMahGamePoChan message. Also converts values to other types if specified.
         * @param message S2CMahGamePoChan
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahGamePoChan, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahGamePoChan to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahHPGDone. */
    interface IS2CMahHPGDone {

        /** S2CMahHPGDone operate */
        operate?: (pb.MahHPGOPerate|null);
    }

    /** Represents a S2CMahHPGDone. */
    class S2CMahHPGDone implements IS2CMahHPGDone {

        /**
         * Constructs a new S2CMahHPGDone.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahHPGDone);

        /** S2CMahHPGDone operate. */
        public operate: pb.MahHPGOPerate;

        /**
         * Creates a new S2CMahHPGDone instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahHPGDone instance
         */
        public static create(properties?: pb.IS2CMahHPGDone): pb.S2CMahHPGDone;

        /**
         * Encodes the specified S2CMahHPGDone message. Does not implicitly {@link pb.S2CMahHPGDone.verify|verify} messages.
         * @param message S2CMahHPGDone message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahHPGDone, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahHPGDone message, length delimited. Does not implicitly {@link pb.S2CMahHPGDone.verify|verify} messages.
         * @param message S2CMahHPGDone message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahHPGDone, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahHPGDone message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahHPGDone
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahHPGDone;

        /**
         * Decodes a S2CMahHPGDone message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahHPGDone
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahHPGDone;

        /**
         * Verifies a S2CMahHPGDone message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahHPGDone message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahHPGDone
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahHPGDone;

        /**
         * Creates a plain object from a S2CMahHPGDone message. Also converts values to other types if specified.
         * @param message S2CMahHPGDone
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahHPGDone, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahHPGDone to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SMahLiuShui. */
    interface IC2SMahLiuShui {
    }

    /** Represents a C2SMahLiuShui. */
    class C2SMahLiuShui implements IC2SMahLiuShui {

        /**
         * Constructs a new C2SMahLiuShui.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SMahLiuShui);

        /**
         * Creates a new C2SMahLiuShui instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SMahLiuShui instance
         */
        public static create(properties?: pb.IC2SMahLiuShui): pb.C2SMahLiuShui;

        /**
         * Encodes the specified C2SMahLiuShui message. Does not implicitly {@link pb.C2SMahLiuShui.verify|verify} messages.
         * @param message C2SMahLiuShui message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SMahLiuShui, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SMahLiuShui message, length delimited. Does not implicitly {@link pb.C2SMahLiuShui.verify|verify} messages.
         * @param message C2SMahLiuShui message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SMahLiuShui, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SMahLiuShui message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SMahLiuShui
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SMahLiuShui;

        /**
         * Decodes a C2SMahLiuShui message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SMahLiuShui
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SMahLiuShui;

        /**
         * Verifies a C2SMahLiuShui message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SMahLiuShui message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SMahLiuShui
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SMahLiuShui;

        /**
         * Creates a plain object from a C2SMahLiuShui message. Also converts values to other types if specified.
         * @param message C2SMahLiuShui
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SMahLiuShui, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SMahLiuShui to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahLiuShui. */
    interface IS2CMahLiuShui {

        /** S2CMahLiuShui liuShui */
        liuShui?: (pb.IMahLiuShui[]|null);
    }

    /** Represents a S2CMahLiuShui. */
    class S2CMahLiuShui implements IS2CMahLiuShui {

        /**
         * Constructs a new S2CMahLiuShui.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahLiuShui);

        /** S2CMahLiuShui liuShui. */
        public liuShui: pb.IMahLiuShui[];

        /**
         * Creates a new S2CMahLiuShui instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahLiuShui instance
         */
        public static create(properties?: pb.IS2CMahLiuShui): pb.S2CMahLiuShui;

        /**
         * Encodes the specified S2CMahLiuShui message. Does not implicitly {@link pb.S2CMahLiuShui.verify|verify} messages.
         * @param message S2CMahLiuShui message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahLiuShui, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahLiuShui message, length delimited. Does not implicitly {@link pb.S2CMahLiuShui.verify|verify} messages.
         * @param message S2CMahLiuShui message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahLiuShui, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahLiuShui message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahLiuShui
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahLiuShui;

        /**
         * Decodes a S2CMahLiuShui message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahLiuShui
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahLiuShui;

        /**
         * Verifies a S2CMahLiuShui message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahLiuShui message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahLiuShui
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahLiuShui;

        /**
         * Creates a plain object from a S2CMahLiuShui message. Also converts values to other types if specified.
         * @param message S2CMahLiuShui
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahLiuShui, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahLiuShui to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahTiShi. */
    interface IS2CMahTiShi {

        /** S2CMahTiShi ts */
        ts?: (pb.MahTiShi|null);
    }

    /** Represents a S2CMahTiShi. */
    class S2CMahTiShi implements IS2CMahTiShi {

        /**
         * Constructs a new S2CMahTiShi.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahTiShi);

        /** S2CMahTiShi ts. */
        public ts: pb.MahTiShi;

        /**
         * Creates a new S2CMahTiShi instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahTiShi instance
         */
        public static create(properties?: pb.IS2CMahTiShi): pb.S2CMahTiShi;

        /**
         * Encodes the specified S2CMahTiShi message. Does not implicitly {@link pb.S2CMahTiShi.verify|verify} messages.
         * @param message S2CMahTiShi message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahTiShi, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahTiShi message, length delimited. Does not implicitly {@link pb.S2CMahTiShi.verify|verify} messages.
         * @param message S2CMahTiShi message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahTiShi, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahTiShi message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahTiShi
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahTiShi;

        /**
         * Decodes a S2CMahTiShi message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahTiShi
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahTiShi;

        /**
         * Verifies a S2CMahTiShi message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahTiShi message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahTiShi
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahTiShi;

        /**
         * Creates a plain object from a S2CMahTiShi message. Also converts values to other types if specified.
         * @param message S2CMahTiShi
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahTiShi, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahTiShi to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SMahHuPaiTiShi. */
    interface IC2SMahHuPaiTiShi {
    }

    /** Represents a C2SMahHuPaiTiShi. */
    class C2SMahHuPaiTiShi implements IC2SMahHuPaiTiShi {

        /**
         * Constructs a new C2SMahHuPaiTiShi.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SMahHuPaiTiShi);

        /**
         * Creates a new C2SMahHuPaiTiShi instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SMahHuPaiTiShi instance
         */
        public static create(properties?: pb.IC2SMahHuPaiTiShi): pb.C2SMahHuPaiTiShi;

        /**
         * Encodes the specified C2SMahHuPaiTiShi message. Does not implicitly {@link pb.C2SMahHuPaiTiShi.verify|verify} messages.
         * @param message C2SMahHuPaiTiShi message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SMahHuPaiTiShi, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SMahHuPaiTiShi message, length delimited. Does not implicitly {@link pb.C2SMahHuPaiTiShi.verify|verify} messages.
         * @param message C2SMahHuPaiTiShi message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SMahHuPaiTiShi, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SMahHuPaiTiShi message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SMahHuPaiTiShi
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SMahHuPaiTiShi;

        /**
         * Decodes a C2SMahHuPaiTiShi message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SMahHuPaiTiShi
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SMahHuPaiTiShi;

        /**
         * Verifies a C2SMahHuPaiTiShi message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SMahHuPaiTiShi message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SMahHuPaiTiShi
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SMahHuPaiTiShi;

        /**
         * Creates a plain object from a C2SMahHuPaiTiShi message. Also converts values to other types if specified.
         * @param message C2SMahHuPaiTiShi
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SMahHuPaiTiShi, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SMahHuPaiTiShi to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMHuPaiTiShi. */
    interface IS2CMHuPaiTiShi {

        /** S2CMHuPaiTiShi data */
        data?: (pb.IMahKeHuData[]|null);

        /** S2CMHuPaiTiShi mjid */
        mjid?: (number|null);

        /** S2CMHuPaiTiShi ShowKeHu */
        ShowKeHu?: (boolean|null);
    }

    /** Represents a S2CMHuPaiTiShi. */
    class S2CMHuPaiTiShi implements IS2CMHuPaiTiShi {

        /**
         * Constructs a new S2CMHuPaiTiShi.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMHuPaiTiShi);

        /** S2CMHuPaiTiShi data. */
        public data: pb.IMahKeHuData[];

        /** S2CMHuPaiTiShi mjid. */
        public mjid: number;

        /** S2CMHuPaiTiShi ShowKeHu. */
        public ShowKeHu: boolean;

        /**
         * Creates a new S2CMHuPaiTiShi instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMHuPaiTiShi instance
         */
        public static create(properties?: pb.IS2CMHuPaiTiShi): pb.S2CMHuPaiTiShi;

        /**
         * Encodes the specified S2CMHuPaiTiShi message. Does not implicitly {@link pb.S2CMHuPaiTiShi.verify|verify} messages.
         * @param message S2CMHuPaiTiShi message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMHuPaiTiShi, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMHuPaiTiShi message, length delimited. Does not implicitly {@link pb.S2CMHuPaiTiShi.verify|verify} messages.
         * @param message S2CMHuPaiTiShi message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMHuPaiTiShi, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMHuPaiTiShi message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMHuPaiTiShi
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMHuPaiTiShi;

        /**
         * Decodes a S2CMHuPaiTiShi message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMHuPaiTiShi
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMHuPaiTiShi;

        /**
         * Verifies a S2CMHuPaiTiShi message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMHuPaiTiShi message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMHuPaiTiShi
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMHuPaiTiShi;

        /**
         * Creates a plain object from a S2CMHuPaiTiShi message. Also converts values to other types if specified.
         * @param message S2CMHuPaiTiShi
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMHuPaiTiShi, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMHuPaiTiShi to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SMahAutoUseProp. */
    interface IC2SMahAutoUseProp {

        /** C2SMahAutoUseProp id */
        id?: (number|null);

        /** C2SMahAutoUseProp bAuto */
        bAuto?: (boolean|null);
    }

    /** Represents a C2SMahAutoUseProp. */
    class C2SMahAutoUseProp implements IC2SMahAutoUseProp {

        /**
         * Constructs a new C2SMahAutoUseProp.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SMahAutoUseProp);

        /** C2SMahAutoUseProp id. */
        public id: number;

        /** C2SMahAutoUseProp bAuto. */
        public bAuto: boolean;

        /**
         * Creates a new C2SMahAutoUseProp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SMahAutoUseProp instance
         */
        public static create(properties?: pb.IC2SMahAutoUseProp): pb.C2SMahAutoUseProp;

        /**
         * Encodes the specified C2SMahAutoUseProp message. Does not implicitly {@link pb.C2SMahAutoUseProp.verify|verify} messages.
         * @param message C2SMahAutoUseProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SMahAutoUseProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SMahAutoUseProp message, length delimited. Does not implicitly {@link pb.C2SMahAutoUseProp.verify|verify} messages.
         * @param message C2SMahAutoUseProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SMahAutoUseProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SMahAutoUseProp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SMahAutoUseProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SMahAutoUseProp;

        /**
         * Decodes a C2SMahAutoUseProp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SMahAutoUseProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SMahAutoUseProp;

        /**
         * Verifies a C2SMahAutoUseProp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SMahAutoUseProp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SMahAutoUseProp
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SMahAutoUseProp;

        /**
         * Creates a plain object from a C2SMahAutoUseProp message. Also converts values to other types if specified.
         * @param message C2SMahAutoUseProp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SMahAutoUseProp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SMahAutoUseProp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahAutoUseProp. */
    interface IS2CMahAutoUseProp {

        /** S2CMahAutoUseProp id */
        id?: (number|null);

        /** S2CMahAutoUseProp bAuto */
        bAuto?: (number|null);
    }

    /** Represents a S2CMahAutoUseProp. */
    class S2CMahAutoUseProp implements IS2CMahAutoUseProp {

        /**
         * Constructs a new S2CMahAutoUseProp.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahAutoUseProp);

        /** S2CMahAutoUseProp id. */
        public id: number;

        /** S2CMahAutoUseProp bAuto. */
        public bAuto: number;

        /**
         * Creates a new S2CMahAutoUseProp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahAutoUseProp instance
         */
        public static create(properties?: pb.IS2CMahAutoUseProp): pb.S2CMahAutoUseProp;

        /**
         * Encodes the specified S2CMahAutoUseProp message. Does not implicitly {@link pb.S2CMahAutoUseProp.verify|verify} messages.
         * @param message S2CMahAutoUseProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahAutoUseProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahAutoUseProp message, length delimited. Does not implicitly {@link pb.S2CMahAutoUseProp.verify|verify} messages.
         * @param message S2CMahAutoUseProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahAutoUseProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahAutoUseProp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahAutoUseProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahAutoUseProp;

        /**
         * Decodes a S2CMahAutoUseProp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahAutoUseProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahAutoUseProp;

        /**
         * Verifies a S2CMahAutoUseProp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahAutoUseProp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahAutoUseProp
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahAutoUseProp;

        /**
         * Creates a plain object from a S2CMahAutoUseProp message. Also converts values to other types if specified.
         * @param message S2CMahAutoUseProp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahAutoUseProp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahAutoUseProp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SMahTestMsg. */
    interface IC2SMahTestMsg {

        /** C2SMahTestMsg param1 */
        param1?: (number|null);

        /** C2SMahTestMsg param2 */
        param2?: (number[]|null);
    }

    /** Represents a C2SMahTestMsg. */
    class C2SMahTestMsg implements IC2SMahTestMsg {

        /**
         * Constructs a new C2SMahTestMsg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SMahTestMsg);

        /** C2SMahTestMsg param1. */
        public param1: number;

        /** C2SMahTestMsg param2. */
        public param2: number[];

        /**
         * Creates a new C2SMahTestMsg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SMahTestMsg instance
         */
        public static create(properties?: pb.IC2SMahTestMsg): pb.C2SMahTestMsg;

        /**
         * Encodes the specified C2SMahTestMsg message. Does not implicitly {@link pb.C2SMahTestMsg.verify|verify} messages.
         * @param message C2SMahTestMsg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SMahTestMsg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SMahTestMsg message, length delimited. Does not implicitly {@link pb.C2SMahTestMsg.verify|verify} messages.
         * @param message C2SMahTestMsg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SMahTestMsg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SMahTestMsg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SMahTestMsg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SMahTestMsg;

        /**
         * Decodes a C2SMahTestMsg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SMahTestMsg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SMahTestMsg;

        /**
         * Verifies a C2SMahTestMsg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SMahTestMsg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SMahTestMsg
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SMahTestMsg;

        /**
         * Creates a plain object from a C2SMahTestMsg message. Also converts values to other types if specified.
         * @param message C2SMahTestMsg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SMahTestMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SMahTestMsg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CUpdateJinZhongZhao. */
    interface IS2CUpdateJinZhongZhao {

        /** S2CUpdateJinZhongZhao idxVal */
        idxVal?: (pb.IId2Val[]|null);
    }

    /** Represents a S2CUpdateJinZhongZhao. */
    class S2CUpdateJinZhongZhao implements IS2CUpdateJinZhongZhao {

        /**
         * Constructs a new S2CUpdateJinZhongZhao.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CUpdateJinZhongZhao);

        /** S2CUpdateJinZhongZhao idxVal. */
        public idxVal: pb.IId2Val[];

        /**
         * Creates a new S2CUpdateJinZhongZhao instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CUpdateJinZhongZhao instance
         */
        public static create(properties?: pb.IS2CUpdateJinZhongZhao): pb.S2CUpdateJinZhongZhao;

        /**
         * Encodes the specified S2CUpdateJinZhongZhao message. Does not implicitly {@link pb.S2CUpdateJinZhongZhao.verify|verify} messages.
         * @param message S2CUpdateJinZhongZhao message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CUpdateJinZhongZhao, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CUpdateJinZhongZhao message, length delimited. Does not implicitly {@link pb.S2CUpdateJinZhongZhao.verify|verify} messages.
         * @param message S2CUpdateJinZhongZhao message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CUpdateJinZhongZhao, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CUpdateJinZhongZhao message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CUpdateJinZhongZhao
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CUpdateJinZhongZhao;

        /**
         * Decodes a S2CUpdateJinZhongZhao message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CUpdateJinZhongZhao
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CUpdateJinZhongZhao;

        /**
         * Verifies a S2CUpdateJinZhongZhao message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CUpdateJinZhongZhao message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CUpdateJinZhongZhao
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CUpdateJinZhongZhao;

        /**
         * Creates a plain object from a S2CUpdateJinZhongZhao message. Also converts values to other types if specified.
         * @param message S2CUpdateJinZhongZhao
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CUpdateJinZhongZhao, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CUpdateJinZhongZhao to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahPropResult. */
    interface IS2CMahPropResult {

        /** S2CMahPropResult type */
        type?: (number|null);

        /** S2CMahPropResult index */
        index?: (number|null);

        /** S2CMahPropResult param1 */
        param1?: (number[]|null);

        /** S2CMahPropResult param2 */
        param2?: (number[]|null);

        /** S2CMahPropResult operate */
        operate?: (pb.IKeCaoZuo|null);

        /** S2CMahPropResult newMo */
        newMo?: (number|null);

        /** S2CMahPropResult errcode */
        errcode?: (number|null);

        /** S2CMahPropResult data */
        data?: (pb.IMahKeHuData[]|null);

        /** S2CMahPropResult keHuMjId */
        keHuMjId?: (number|null);

        /** S2CMahPropResult ShowKeHu */
        ShowKeHu?: (boolean|null);
    }

    /** Represents a S2CMahPropResult. */
    class S2CMahPropResult implements IS2CMahPropResult {

        /**
         * Constructs a new S2CMahPropResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahPropResult);

        /** S2CMahPropResult type. */
        public type: number;

        /** S2CMahPropResult index. */
        public index: number;

        /** S2CMahPropResult param1. */
        public param1: number[];

        /** S2CMahPropResult param2. */
        public param2: number[];

        /** S2CMahPropResult operate. */
        public operate?: (pb.IKeCaoZuo|null);

        /** S2CMahPropResult newMo. */
        public newMo: number;

        /** S2CMahPropResult errcode. */
        public errcode: number;

        /** S2CMahPropResult data. */
        public data: pb.IMahKeHuData[];

        /** S2CMahPropResult keHuMjId. */
        public keHuMjId: number;

        /** S2CMahPropResult ShowKeHu. */
        public ShowKeHu: boolean;

        /**
         * Creates a new S2CMahPropResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahPropResult instance
         */
        public static create(properties?: pb.IS2CMahPropResult): pb.S2CMahPropResult;

        /**
         * Encodes the specified S2CMahPropResult message. Does not implicitly {@link pb.S2CMahPropResult.verify|verify} messages.
         * @param message S2CMahPropResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahPropResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahPropResult message, length delimited. Does not implicitly {@link pb.S2CMahPropResult.verify|verify} messages.
         * @param message S2CMahPropResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahPropResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahPropResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahPropResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahPropResult;

        /**
         * Decodes a S2CMahPropResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahPropResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahPropResult;

        /**
         * Verifies a S2CMahPropResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahPropResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahPropResult
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahPropResult;

        /**
         * Creates a plain object from a S2CMahPropResult message. Also converts values to other types if specified.
         * @param message S2CMahPropResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahPropResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahPropResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahUseMoProp. */
    interface IS2CMahUseMoProp {

        /** S2CMahUseMoProp type */
        type?: (number|null);
    }

    /** Represents a S2CMahUseMoProp. */
    class S2CMahUseMoProp implements IS2CMahUseMoProp {

        /**
         * Constructs a new S2CMahUseMoProp.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahUseMoProp);

        /** S2CMahUseMoProp type. */
        public type: number;

        /**
         * Creates a new S2CMahUseMoProp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahUseMoProp instance
         */
        public static create(properties?: pb.IS2CMahUseMoProp): pb.S2CMahUseMoProp;

        /**
         * Encodes the specified S2CMahUseMoProp message. Does not implicitly {@link pb.S2CMahUseMoProp.verify|verify} messages.
         * @param message S2CMahUseMoProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahUseMoProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahUseMoProp message, length delimited. Does not implicitly {@link pb.S2CMahUseMoProp.verify|verify} messages.
         * @param message S2CMahUseMoProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahUseMoProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahUseMoProp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahUseMoProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahUseMoProp;

        /**
         * Decodes a S2CMahUseMoProp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahUseMoProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahUseMoProp;

        /**
         * Verifies a S2CMahUseMoProp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahUseMoProp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahUseMoProp
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahUseMoProp;

        /**
         * Creates a plain object from a S2CMahUseMoProp message. Also converts values to other types if specified.
         * @param message S2CMahUseMoProp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahUseMoProp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahUseMoProp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahMingPai. */
    interface IS2CMahMingPai {

        /** S2CMahMingPai index */
        index?: (number|null);

        /** S2CMahMingPai mjs */
        mjs?: (number[]|null);

        /** S2CMahMingPai moMj */
        moMj?: (number|null);
    }

    /** Represents a S2CMahMingPai. */
    class S2CMahMingPai implements IS2CMahMingPai {

        /**
         * Constructs a new S2CMahMingPai.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahMingPai);

        /** S2CMahMingPai index. */
        public index: number;

        /** S2CMahMingPai mjs. */
        public mjs: number[];

        /** S2CMahMingPai moMj. */
        public moMj: number;

        /**
         * Creates a new S2CMahMingPai instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahMingPai instance
         */
        public static create(properties?: pb.IS2CMahMingPai): pb.S2CMahMingPai;

        /**
         * Encodes the specified S2CMahMingPai message. Does not implicitly {@link pb.S2CMahMingPai.verify|verify} messages.
         * @param message S2CMahMingPai message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahMingPai, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahMingPai message, length delimited. Does not implicitly {@link pb.S2CMahMingPai.verify|verify} messages.
         * @param message S2CMahMingPai message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahMingPai, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahMingPai message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahMingPai
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahMingPai;

        /**
         * Decodes a S2CMahMingPai message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahMingPai
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahMingPai;

        /**
         * Verifies a S2CMahMingPai message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahMingPai message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahMingPai
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahMingPai;

        /**
         * Creates a plain object from a S2CMahMingPai message. Also converts values to other types if specified.
         * @param message S2CMahMingPai
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahMingPai, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahMingPai to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SMahMingPai. */
    interface IC2SMahMingPai {
    }

    /** Represents a C2SMahMingPai. */
    class C2SMahMingPai implements IC2SMahMingPai {

        /**
         * Constructs a new C2SMahMingPai.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SMahMingPai);

        /**
         * Creates a new C2SMahMingPai instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SMahMingPai instance
         */
        public static create(properties?: pb.IC2SMahMingPai): pb.C2SMahMingPai;

        /**
         * Encodes the specified C2SMahMingPai message. Does not implicitly {@link pb.C2SMahMingPai.verify|verify} messages.
         * @param message C2SMahMingPai message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SMahMingPai, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SMahMingPai message, length delimited. Does not implicitly {@link pb.C2SMahMingPai.verify|verify} messages.
         * @param message C2SMahMingPai message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SMahMingPai, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SMahMingPai message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SMahMingPai
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SMahMingPai;

        /**
         * Decodes a C2SMahMingPai message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SMahMingPai
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SMahMingPai;

        /**
         * Verifies a C2SMahMingPai message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SMahMingPai message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SMahMingPai
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SMahMingPai;

        /**
         * Creates a plain object from a C2SMahMingPai message. Also converts values to other types if specified.
         * @param message C2SMahMingPai
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SMahMingPai, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SMahMingPai to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahBetterMjSuggestion. */
    interface IS2CMahBetterMjSuggestion {

        /** S2CMahBetterMjSuggestion badMjs */
        badMjs?: (number|null);

        /** S2CMahBetterMjSuggestion goodMjs */
        goodMjs?: (number|null);
    }

    /** Represents a S2CMahBetterMjSuggestion. */
    class S2CMahBetterMjSuggestion implements IS2CMahBetterMjSuggestion {

        /**
         * Constructs a new S2CMahBetterMjSuggestion.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahBetterMjSuggestion);

        /** S2CMahBetterMjSuggestion badMjs. */
        public badMjs: number;

        /** S2CMahBetterMjSuggestion goodMjs. */
        public goodMjs: number;

        /**
         * Creates a new S2CMahBetterMjSuggestion instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahBetterMjSuggestion instance
         */
        public static create(properties?: pb.IS2CMahBetterMjSuggestion): pb.S2CMahBetterMjSuggestion;

        /**
         * Encodes the specified S2CMahBetterMjSuggestion message. Does not implicitly {@link pb.S2CMahBetterMjSuggestion.verify|verify} messages.
         * @param message S2CMahBetterMjSuggestion message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahBetterMjSuggestion, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahBetterMjSuggestion message, length delimited. Does not implicitly {@link pb.S2CMahBetterMjSuggestion.verify|verify} messages.
         * @param message S2CMahBetterMjSuggestion message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahBetterMjSuggestion, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahBetterMjSuggestion message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahBetterMjSuggestion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahBetterMjSuggestion;

        /**
         * Decodes a S2CMahBetterMjSuggestion message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahBetterMjSuggestion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahBetterMjSuggestion;

        /**
         * Verifies a S2CMahBetterMjSuggestion message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahBetterMjSuggestion message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahBetterMjSuggestion
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahBetterMjSuggestion;

        /**
         * Creates a plain object from a S2CMahBetterMjSuggestion message. Also converts values to other types if specified.
         * @param message S2CMahBetterMjSuggestion
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahBetterMjSuggestion, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahBetterMjSuggestion to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SMahSet. */
    interface IC2SMahSet {

        /** C2SMahSet type */
        type?: (number|null);

        /** C2SMahSet param */
        param?: (number|null);
    }

    /** Represents a C2SMahSet. */
    class C2SMahSet implements IC2SMahSet {

        /**
         * Constructs a new C2SMahSet.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SMahSet);

        /** C2SMahSet type. */
        public type: number;

        /** C2SMahSet param. */
        public param: number;

        /**
         * Creates a new C2SMahSet instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SMahSet instance
         */
        public static create(properties?: pb.IC2SMahSet): pb.C2SMahSet;

        /**
         * Encodes the specified C2SMahSet message. Does not implicitly {@link pb.C2SMahSet.verify|verify} messages.
         * @param message C2SMahSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SMahSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SMahSet message, length delimited. Does not implicitly {@link pb.C2SMahSet.verify|verify} messages.
         * @param message C2SMahSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SMahSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SMahSet message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SMahSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SMahSet;

        /**
         * Decodes a C2SMahSet message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SMahSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SMahSet;

        /**
         * Verifies a C2SMahSet message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SMahSet message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SMahSet
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SMahSet;

        /**
         * Creates a plain object from a C2SMahSet message. Also converts values to other types if specified.
         * @param message C2SMahSet
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SMahSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SMahSet to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMahSet. */
    interface IS2CMahSet {

        /** S2CMahSet ec */
        ec?: (number|null);
    }

    /** Represents a S2CMahSet. */
    class S2CMahSet implements IS2CMahSet {

        /**
         * Constructs a new S2CMahSet.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMahSet);

        /** S2CMahSet ec. */
        public ec: number;

        /**
         * Creates a new S2CMahSet instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMahSet instance
         */
        public static create(properties?: pb.IS2CMahSet): pb.S2CMahSet;

        /**
         * Encodes the specified S2CMahSet message. Does not implicitly {@link pb.S2CMahSet.verify|verify} messages.
         * @param message S2CMahSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMahSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMahSet message, length delimited. Does not implicitly {@link pb.S2CMahSet.verify|verify} messages.
         * @param message S2CMahSet message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMahSet, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMahSet message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMahSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMahSet;

        /**
         * Decodes a S2CMahSet message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMahSet
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMahSet;

        /**
         * Verifies a S2CMahSet message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMahSet message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMahSet
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMahSet;

        /**
         * Creates a plain object from a S2CMahSet message. Also converts values to other types if specified.
         * @param message S2CMahSet
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMahSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMahSet to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CRobotCardsInfo. */
    interface IS2CRobotCardsInfo {

        /** S2CRobotCardsInfo index */
        index?: (number|null);

        /** S2CRobotCardsInfo handMjs */
        handMjs?: (number[]|null);

        /** S2CRobotCardsInfo pg */
        pg?: ({ [k: string]: number }|null);

        /** S2CRobotCardsInfo goodMjs */
        goodMjs?: (number[]|null);
    }

    /** Represents a S2CRobotCardsInfo. */
    class S2CRobotCardsInfo implements IS2CRobotCardsInfo {

        /**
         * Constructs a new S2CRobotCardsInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CRobotCardsInfo);

        /** S2CRobotCardsInfo index. */
        public index: number;

        /** S2CRobotCardsInfo handMjs. */
        public handMjs: number[];

        /** S2CRobotCardsInfo pg. */
        public pg: { [k: string]: number };

        /** S2CRobotCardsInfo goodMjs. */
        public goodMjs: number[];

        /**
         * Creates a new S2CRobotCardsInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CRobotCardsInfo instance
         */
        public static create(properties?: pb.IS2CRobotCardsInfo): pb.S2CRobotCardsInfo;

        /**
         * Encodes the specified S2CRobotCardsInfo message. Does not implicitly {@link pb.S2CRobotCardsInfo.verify|verify} messages.
         * @param message S2CRobotCardsInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CRobotCardsInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CRobotCardsInfo message, length delimited. Does not implicitly {@link pb.S2CRobotCardsInfo.verify|verify} messages.
         * @param message S2CRobotCardsInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CRobotCardsInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CRobotCardsInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CRobotCardsInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CRobotCardsInfo;

        /**
         * Decodes a S2CRobotCardsInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CRobotCardsInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CRobotCardsInfo;

        /**
         * Verifies a S2CRobotCardsInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CRobotCardsInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CRobotCardsInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CRobotCardsInfo;

        /**
         * Creates a plain object from a S2CRobotCardsInfo message. Also converts values to other types if specified.
         * @param message S2CRobotCardsInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CRobotCardsInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CRobotCardsInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CoinData. */
    interface ICoinData {

        /** CoinData idx */
        idx?: (number|null);

        /** CoinData coin */
        coin?: (number|Long|null);

        /** CoinData bFengDing */
        bFengDing?: (boolean|null);

        /** CoinData bUseJinZhongZhao */
        bUseJinZhongZhao?: (boolean|null);
    }

    /** Represents a CoinData. */
    class CoinData implements ICoinData {

        /**
         * Constructs a new CoinData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICoinData);

        /** CoinData idx. */
        public idx: number;

        /** CoinData coin. */
        public coin: (number|Long);

        /** CoinData bFengDing. */
        public bFengDing: boolean;

        /** CoinData bUseJinZhongZhao. */
        public bUseJinZhongZhao: boolean;

        /**
         * Creates a new CoinData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CoinData instance
         */
        public static create(properties?: pb.ICoinData): pb.CoinData;

        /**
         * Encodes the specified CoinData message. Does not implicitly {@link pb.CoinData.verify|verify} messages.
         * @param message CoinData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICoinData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CoinData message, length delimited. Does not implicitly {@link pb.CoinData.verify|verify} messages.
         * @param message CoinData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICoinData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CoinData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CoinData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.CoinData;

        /**
         * Decodes a CoinData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CoinData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.CoinData;

        /**
         * Verifies a CoinData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CoinData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CoinData
         */
        public static fromObject(object: { [k: string]: any }): pb.CoinData;

        /**
         * Creates a plain object from a CoinData message. Also converts values to other types if specified.
         * @param message CoinData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.CoinData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CoinData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MahHuData. */
    interface IMahHuData {

        /** MahHuData mjId */
        mjId?: (number|null);

        /** MahHuData type */
        type?: (pb.MahHu[]|null);

        /** MahHuData AAAA */
        AAAA?: (number|null);

        /** MahHuData multiple */
        multiple?: (number|Long|null);

        /** MahHuData fromIndex */
        fromIndex?: (number|null);

        /** MahHuData translucent */
        translucent?: (boolean|null);

        /** MahHuData truthMultiple */
        truthMultiple?: (number|Long|null);

        /** MahHuData huIndex */
        huIndex?: (number|null);
    }

    /** Represents a MahHuData. */
    class MahHuData implements IMahHuData {

        /**
         * Constructs a new MahHuData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMahHuData);

        /** MahHuData mjId. */
        public mjId: number;

        /** MahHuData type. */
        public type: pb.MahHu[];

        /** MahHuData AAAA. */
        public AAAA: number;

        /** MahHuData multiple. */
        public multiple: (number|Long);

        /** MahHuData fromIndex. */
        public fromIndex: number;

        /** MahHuData translucent. */
        public translucent: boolean;

        /** MahHuData truthMultiple. */
        public truthMultiple: (number|Long);

        /** MahHuData huIndex. */
        public huIndex: number;

        /**
         * Creates a new MahHuData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MahHuData instance
         */
        public static create(properties?: pb.IMahHuData): pb.MahHuData;

        /**
         * Encodes the specified MahHuData message. Does not implicitly {@link pb.MahHuData.verify|verify} messages.
         * @param message MahHuData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMahHuData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MahHuData message, length delimited. Does not implicitly {@link pb.MahHuData.verify|verify} messages.
         * @param message MahHuData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMahHuData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MahHuData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MahHuData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.MahHuData;

        /**
         * Decodes a MahHuData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MahHuData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.MahHuData;

        /**
         * Verifies a MahHuData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MahHuData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MahHuData
         */
        public static fromObject(object: { [k: string]: any }): pb.MahHuData;

        /**
         * Creates a plain object from a MahHuData message. Also converts values to other types if specified.
         * @param message MahHuData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.MahHuData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MahHuData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KeHuItem. */
    interface IKeHuItem {

        /** KeHuItem mjid */
        mjid?: (number|null);

        /** KeHuItem mul */
        mul?: (number|null);

        /** KeHuItem type */
        type?: (number[]|null);
    }

    /** Represents a KeHuItem. */
    class KeHuItem implements IKeHuItem {

        /**
         * Constructs a new KeHuItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IKeHuItem);

        /** KeHuItem mjid. */
        public mjid: number;

        /** KeHuItem mul. */
        public mul: number;

        /** KeHuItem type. */
        public type: number[];

        /**
         * Creates a new KeHuItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KeHuItem instance
         */
        public static create(properties?: pb.IKeHuItem): pb.KeHuItem;

        /**
         * Encodes the specified KeHuItem message. Does not implicitly {@link pb.KeHuItem.verify|verify} messages.
         * @param message KeHuItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IKeHuItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KeHuItem message, length delimited. Does not implicitly {@link pb.KeHuItem.verify|verify} messages.
         * @param message KeHuItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IKeHuItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KeHuItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KeHuItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.KeHuItem;

        /**
         * Decodes a KeHuItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KeHuItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.KeHuItem;

        /**
         * Verifies a KeHuItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KeHuItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KeHuItem
         */
        public static fromObject(object: { [k: string]: any }): pb.KeHuItem;

        /**
         * Creates a plain object from a KeHuItem message. Also converts values to other types if specified.
         * @param message KeHuItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.KeHuItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KeHuItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MahKeHuData. */
    interface IMahKeHuData {

        /** MahKeHuData mjId */
        mjId?: (number|null);

        /** MahKeHuData data */
        data?: (pb.IKeHuItem[]|null);
    }

    /** Represents a MahKeHuData. */
    class MahKeHuData implements IMahKeHuData {

        /**
         * Constructs a new MahKeHuData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMahKeHuData);

        /** MahKeHuData mjId. */
        public mjId: number;

        /** MahKeHuData data. */
        public data: pb.IKeHuItem[];

        /**
         * Creates a new MahKeHuData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MahKeHuData instance
         */
        public static create(properties?: pb.IMahKeHuData): pb.MahKeHuData;

        /**
         * Encodes the specified MahKeHuData message. Does not implicitly {@link pb.MahKeHuData.verify|verify} messages.
         * @param message MahKeHuData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMahKeHuData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MahKeHuData message, length delimited. Does not implicitly {@link pb.MahKeHuData.verify|verify} messages.
         * @param message MahKeHuData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMahKeHuData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MahKeHuData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MahKeHuData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.MahKeHuData;

        /**
         * Decodes a MahKeHuData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MahKeHuData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.MahKeHuData;

        /**
         * Verifies a MahKeHuData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MahKeHuData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MahKeHuData
         */
        public static fromObject(object: { [k: string]: any }): pb.MahKeHuData;

        /**
         * Creates a plain object from a MahKeHuData message. Also converts values to other types if specified.
         * @param message MahKeHuData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.MahKeHuData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MahKeHuData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MahPengGang. */
    interface IMahPengGang {

        /** MahPengGang mjId */
        mjId?: (number|null);

        /** MahPengGang type */
        type?: (pb.MahHPGOPerate|null);

        /** MahPengGang coin */
        coin?: (pb.ICoinData[]|null);

        /** MahPengGang fromIndex */
        fromIndex?: (number|null);

        /** MahPengGang qiangType */
        qiangType?: (pb.MahQiangGangState|null);

        /** MahPengGang curcoin */
        curcoin?: (pb.IId2Val[]|null);

        /** MahPengGang otherMj */
        otherMj?: (number[]|null);

        /** MahPengGang jinZhongZhaoIdx */
        jinZhongZhaoIdx?: (number|null);
    }

    /** Represents a MahPengGang. */
    class MahPengGang implements IMahPengGang {

        /**
         * Constructs a new MahPengGang.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMahPengGang);

        /** MahPengGang mjId. */
        public mjId: number;

        /** MahPengGang type. */
        public type: pb.MahHPGOPerate;

        /** MahPengGang coin. */
        public coin: pb.ICoinData[];

        /** MahPengGang fromIndex. */
        public fromIndex: number;

        /** MahPengGang qiangType. */
        public qiangType: pb.MahQiangGangState;

        /** MahPengGang curcoin. */
        public curcoin: pb.IId2Val[];

        /** MahPengGang otherMj. */
        public otherMj: number[];

        /** MahPengGang jinZhongZhaoIdx. */
        public jinZhongZhaoIdx: number;

        /**
         * Creates a new MahPengGang instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MahPengGang instance
         */
        public static create(properties?: pb.IMahPengGang): pb.MahPengGang;

        /**
         * Encodes the specified MahPengGang message. Does not implicitly {@link pb.MahPengGang.verify|verify} messages.
         * @param message MahPengGang message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMahPengGang, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MahPengGang message, length delimited. Does not implicitly {@link pb.MahPengGang.verify|verify} messages.
         * @param message MahPengGang message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMahPengGang, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MahPengGang message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MahPengGang
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.MahPengGang;

        /**
         * Decodes a MahPengGang message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MahPengGang
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.MahPengGang;

        /**
         * Verifies a MahPengGang message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MahPengGang message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MahPengGang
         */
        public static fromObject(object: { [k: string]: any }): pb.MahPengGang;

        /**
         * Creates a plain object from a MahPengGang message. Also converts values to other types if specified.
         * @param message MahPengGang
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.MahPengGang, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MahPengGang to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MahTableGameData. */
    interface IMahTableGameData {

        /** MahTableGameData tableStage */
        tableStage?: (number|null);

        /** MahTableGameData curInning */
        curInning?: (number|null);

        /** MahTableGameData restMahCount */
        restMahCount?: (number|null);

        /** MahTableGameData curIndex */
        curIndex?: (number|null);

        /** MahTableGameData lastIndex */
        lastIndex?: (number|null);

        /** MahTableGameData restTime */
        restTime?: (number|null);

        /** MahTableGameData touZi */
        touZi?: (number[]|null);
    }

    /** Represents a MahTableGameData. */
    class MahTableGameData implements IMahTableGameData {

        /**
         * Constructs a new MahTableGameData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMahTableGameData);

        /** MahTableGameData tableStage. */
        public tableStage: number;

        /** MahTableGameData curInning. */
        public curInning: number;

        /** MahTableGameData restMahCount. */
        public restMahCount: number;

        /** MahTableGameData curIndex. */
        public curIndex: number;

        /** MahTableGameData lastIndex. */
        public lastIndex: number;

        /** MahTableGameData restTime. */
        public restTime: number;

        /** MahTableGameData touZi. */
        public touZi: number[];

        /**
         * Creates a new MahTableGameData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MahTableGameData instance
         */
        public static create(properties?: pb.IMahTableGameData): pb.MahTableGameData;

        /**
         * Encodes the specified MahTableGameData message. Does not implicitly {@link pb.MahTableGameData.verify|verify} messages.
         * @param message MahTableGameData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMahTableGameData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MahTableGameData message, length delimited. Does not implicitly {@link pb.MahTableGameData.verify|verify} messages.
         * @param message MahTableGameData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMahTableGameData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MahTableGameData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MahTableGameData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.MahTableGameData;

        /**
         * Decodes a MahTableGameData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MahTableGameData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.MahTableGameData;

        /**
         * Verifies a MahTableGameData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MahTableGameData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MahTableGameData
         */
        public static fromObject(object: { [k: string]: any }): pb.MahTableGameData;

        /**
         * Creates a plain object from a MahTableGameData message. Also converts values to other types if specified.
         * @param message MahTableGameData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.MahTableGameData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MahTableGameData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KeCaoZuo. */
    interface IKeCaoZuo {

        /** KeCaoZuo operate */
        operate?: (pb.MahHPGOPerate[]|null);

        /** KeCaoZuo KeHuMjs */
        KeHuMjs?: (number[]|null);

        /** KeCaoZuo KePengMjs */
        KePengMjs?: (number[]|null);

        /** KeCaoZuo KeGangMjs */
        KeGangMjs?: (pb.IId2Val[]|null);

        /** KeCaoZuo HuFan */
        HuFan?: (number|null);

        /** KeCaoZuo CanPoFen */
        CanPoFen?: (boolean|null);

        /** KeCaoZuo CanMingPai */
        CanMingPai?: (boolean|null);
    }

    /** Represents a KeCaoZuo. */
    class KeCaoZuo implements IKeCaoZuo {

        /**
         * Constructs a new KeCaoZuo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IKeCaoZuo);

        /** KeCaoZuo operate. */
        public operate: pb.MahHPGOPerate[];

        /** KeCaoZuo KeHuMjs. */
        public KeHuMjs: number[];

        /** KeCaoZuo KePengMjs. */
        public KePengMjs: number[];

        /** KeCaoZuo KeGangMjs. */
        public KeGangMjs: pb.IId2Val[];

        /** KeCaoZuo HuFan. */
        public HuFan: number;

        /** KeCaoZuo CanPoFen. */
        public CanPoFen: boolean;

        /** KeCaoZuo CanMingPai. */
        public CanMingPai: boolean;

        /**
         * Creates a new KeCaoZuo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KeCaoZuo instance
         */
        public static create(properties?: pb.IKeCaoZuo): pb.KeCaoZuo;

        /**
         * Encodes the specified KeCaoZuo message. Does not implicitly {@link pb.KeCaoZuo.verify|verify} messages.
         * @param message KeCaoZuo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IKeCaoZuo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KeCaoZuo message, length delimited. Does not implicitly {@link pb.KeCaoZuo.verify|verify} messages.
         * @param message KeCaoZuo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IKeCaoZuo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KeCaoZuo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KeCaoZuo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.KeCaoZuo;

        /**
         * Decodes a KeCaoZuo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KeCaoZuo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.KeCaoZuo;

        /**
         * Verifies a KeCaoZuo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KeCaoZuo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KeCaoZuo
         */
        public static fromObject(object: { [k: string]: any }): pb.KeCaoZuo;

        /**
         * Creates a plain object from a KeCaoZuo message. Also converts values to other types if specified.
         * @param message KeCaoZuo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.KeCaoZuo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KeCaoZuo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MahPlayerData. */
    interface IMahPlayerData {

        /** MahPlayerData index */
        index?: (number|null);

        /** MahPlayerData moPaiId */
        moPaiId?: (number|null);

        /** MahPlayerData state */
        state?: (pb.MahPlayerState|null);

        /** MahPlayerData bZhuang */
        bZhuang?: (boolean|null);

        /** MahPlayerData quetype */
        quetype?: (number|null);

        /** MahPlayerData autoOpeateState */
        autoOpeateState?: (boolean|null);

        /** MahPlayerData haoPaiBuHuan */
        haoPaiBuHuan?: (boolean|null);

        /** MahPlayerData operateId */
        operateId?: (number|null);

        /** MahPlayerData bReady */
        bReady?: (boolean|null);

        /** MahPlayerData bZhuDong */
        bZhuDong?: (boolean|null);

        /** MahPlayerData usedHongZhong */
        usedHongZhong?: (boolean|null);

        /** MahPlayerData mjs */
        mjs?: (number[]|null);

        /** MahPlayerData pengGangs */
        pengGangs?: (pb.IMahPengGang[]|null);

        /** MahPlayerData hu */
        hu?: (pb.IMahHuData[]|null);

        /** MahPlayerData PaiHeMahs */
        PaiHeMahs?: (number[]|null);

        /** MahPlayerData huanSanZhangMahs */
        huanSanZhangMahs?: (number[]|null);

        /** MahPlayerData data */
        data?: (pb.IMahKeHuData[]|null);

        /** MahPlayerData operate */
        operate?: (pb.IKeCaoZuo|null);

        /** MahPlayerData keHuMjId */
        keHuMjId?: (number|null);

        /** MahPlayerData jinZhongZhao */
        jinZhongZhao?: (number|null);

        /** MahPlayerData bMingPai */
        bMingPai?: (boolean|null);

        /** MahPlayerData nChuHongZhong */
        nChuHongZhong?: (number|null);

        /** MahPlayerData ShowKeHu */
        ShowKeHu?: (boolean|null);
    }

    /** Represents a MahPlayerData. */
    class MahPlayerData implements IMahPlayerData {

        /**
         * Constructs a new MahPlayerData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMahPlayerData);

        /** MahPlayerData index. */
        public index: number;

        /** MahPlayerData moPaiId. */
        public moPaiId: number;

        /** MahPlayerData state. */
        public state: pb.MahPlayerState;

        /** MahPlayerData bZhuang. */
        public bZhuang: boolean;

        /** MahPlayerData quetype. */
        public quetype: number;

        /** MahPlayerData autoOpeateState. */
        public autoOpeateState: boolean;

        /** MahPlayerData haoPaiBuHuan. */
        public haoPaiBuHuan: boolean;

        /** MahPlayerData operateId. */
        public operateId: number;

        /** MahPlayerData bReady. */
        public bReady: boolean;

        /** MahPlayerData bZhuDong. */
        public bZhuDong: boolean;

        /** MahPlayerData usedHongZhong. */
        public usedHongZhong: boolean;

        /** MahPlayerData mjs. */
        public mjs: number[];

        /** MahPlayerData pengGangs. */
        public pengGangs: pb.IMahPengGang[];

        /** MahPlayerData hu. */
        public hu: pb.IMahHuData[];

        /** MahPlayerData PaiHeMahs. */
        public PaiHeMahs: number[];

        /** MahPlayerData huanSanZhangMahs. */
        public huanSanZhangMahs: number[];

        /** MahPlayerData data. */
        public data: pb.IMahKeHuData[];

        /** MahPlayerData operate. */
        public operate?: (pb.IKeCaoZuo|null);

        /** MahPlayerData keHuMjId. */
        public keHuMjId: number;

        /** MahPlayerData jinZhongZhao. */
        public jinZhongZhao: number;

        /** MahPlayerData bMingPai. */
        public bMingPai: boolean;

        /** MahPlayerData nChuHongZhong. */
        public nChuHongZhong: number;

        /** MahPlayerData ShowKeHu. */
        public ShowKeHu: boolean;

        /**
         * Creates a new MahPlayerData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MahPlayerData instance
         */
        public static create(properties?: pb.IMahPlayerData): pb.MahPlayerData;

        /**
         * Encodes the specified MahPlayerData message. Does not implicitly {@link pb.MahPlayerData.verify|verify} messages.
         * @param message MahPlayerData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMahPlayerData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MahPlayerData message, length delimited. Does not implicitly {@link pb.MahPlayerData.verify|verify} messages.
         * @param message MahPlayerData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMahPlayerData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MahPlayerData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MahPlayerData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.MahPlayerData;

        /**
         * Decodes a MahPlayerData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MahPlayerData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.MahPlayerData;

        /**
         * Verifies a MahPlayerData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MahPlayerData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MahPlayerData
         */
        public static fromObject(object: { [k: string]: any }): pb.MahPlayerData;

        /**
         * Creates a plain object from a MahPlayerData message. Also converts values to other types if specified.
         * @param message MahPlayerData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.MahPlayerData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MahPlayerData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MahInningResult. */
    interface IMahInningResult {

        /** MahInningResult index */
        index?: (number|null);

        /** MahInningResult GUID */
        GUID?: (number|Long|null);

        /** MahInningResult bZhuang */
        bZhuang?: (boolean|null);

        /** MahInningResult coin */
        coin?: (number|Long|null);

        /** MahInningResult hu */
        hu?: (pb.IMahHuData[]|null);

        /** MahInningResult bBankruptcy */
        bBankruptcy?: (boolean|null);

        /** MahInningResult mjs */
        mjs?: (number[]|null);

        /** MahInningResult pengGangs */
        pengGangs?: (pb.IMahPengGang[]|null);

        /** MahInningResult liuju */
        liuju?: (pb.ICoinData|null);

        /** MahInningResult curcoin */
        curcoin?: (number|Long|null);
    }

    /** Represents a MahInningResult. */
    class MahInningResult implements IMahInningResult {

        /**
         * Constructs a new MahInningResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMahInningResult);

        /** MahInningResult index. */
        public index: number;

        /** MahInningResult GUID. */
        public GUID: (number|Long);

        /** MahInningResult bZhuang. */
        public bZhuang: boolean;

        /** MahInningResult coin. */
        public coin: (number|Long);

        /** MahInningResult hu. */
        public hu: pb.IMahHuData[];

        /** MahInningResult bBankruptcy. */
        public bBankruptcy: boolean;

        /** MahInningResult mjs. */
        public mjs: number[];

        /** MahInningResult pengGangs. */
        public pengGangs: pb.IMahPengGang[];

        /** MahInningResult liuju. */
        public liuju?: (pb.ICoinData|null);

        /** MahInningResult curcoin. */
        public curcoin: (number|Long);

        /**
         * Creates a new MahInningResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MahInningResult instance
         */
        public static create(properties?: pb.IMahInningResult): pb.MahInningResult;

        /**
         * Encodes the specified MahInningResult message. Does not implicitly {@link pb.MahInningResult.verify|verify} messages.
         * @param message MahInningResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMahInningResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MahInningResult message, length delimited. Does not implicitly {@link pb.MahInningResult.verify|verify} messages.
         * @param message MahInningResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMahInningResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MahInningResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MahInningResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.MahInningResult;

        /**
         * Decodes a MahInningResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MahInningResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.MahInningResult;

        /**
         * Verifies a MahInningResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MahInningResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MahInningResult
         */
        public static fromObject(object: { [k: string]: any }): pb.MahInningResult;

        /**
         * Creates a plain object from a MahInningResult message. Also converts values to other types if specified.
         * @param message MahInningResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.MahInningResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MahInningResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MahLiuShui. */
    interface IMahLiuShui {

        /** MahLiuShui reason */
        reason?: (pb.MahScoreReason|null);

        /** MahLiuShui hus */
        hus?: (number[]|null);

        /** MahLiuShui multiple */
        multiple?: (number|Long|null);

        /** MahLiuShui coin */
        coin?: (number|Long|null);

        /** MahLiuShui from */
        from?: (number[]|null);

        /** MahLiuShui AAAA */
        AAAA?: (number|null);

        /** MahLiuShui bMaxMultiple */
        bMaxMultiple?: (boolean|null);

        /** MahLiuShui bDaDanDiao */
        bDaDanDiao?: (boolean|null);

        /** MahLiuShui bPoFeng */
        bPoFeng?: (boolean|null);
    }

    /** Represents a MahLiuShui. */
    class MahLiuShui implements IMahLiuShui {

        /**
         * Constructs a new MahLiuShui.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMahLiuShui);

        /** MahLiuShui reason. */
        public reason: pb.MahScoreReason;

        /** MahLiuShui hus. */
        public hus: number[];

        /** MahLiuShui multiple. */
        public multiple: (number|Long);

        /** MahLiuShui coin. */
        public coin: (number|Long);

        /** MahLiuShui from. */
        public from: number[];

        /** MahLiuShui AAAA. */
        public AAAA: number;

        /** MahLiuShui bMaxMultiple. */
        public bMaxMultiple: boolean;

        /** MahLiuShui bDaDanDiao. */
        public bDaDanDiao: boolean;

        /** MahLiuShui bPoFeng. */
        public bPoFeng: boolean;

        /**
         * Creates a new MahLiuShui instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MahLiuShui instance
         */
        public static create(properties?: pb.IMahLiuShui): pb.MahLiuShui;

        /**
         * Encodes the specified MahLiuShui message. Does not implicitly {@link pb.MahLiuShui.verify|verify} messages.
         * @param message MahLiuShui message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMahLiuShui, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MahLiuShui message, length delimited. Does not implicitly {@link pb.MahLiuShui.verify|verify} messages.
         * @param message MahLiuShui message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMahLiuShui, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MahLiuShui message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MahLiuShui
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.MahLiuShui;

        /**
         * Decodes a MahLiuShui message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MahLiuShui
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.MahLiuShui;

        /**
         * Verifies a MahLiuShui message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MahLiuShui message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MahLiuShui
         */
        public static fromObject(object: { [k: string]: any }): pb.MahLiuShui;

        /**
         * Creates a plain object from a MahLiuShui message. Also converts values to other types if specified.
         * @param message MahLiuShui
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.MahLiuShui, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MahLiuShui to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** MahTableStage enum. */
    enum MahTableStage {
        TS_WaitForBegin = 0,
        TS_TableUnReady = 1,
        TS_TableBegin = 2,
        TS_FaPai = 3,
        TS_HuanSanZhang = 4,
        TS_DingQue = 5,
        TS_CalcIng = 6,
        TS_MoPaiStage = 7,
        TS_ChuPaiStage = 8,
        TS_InningOver = 9,
        TS_GameOver = 10,
        TS_InviteWait = 11,
        TS_Close = 12
    }

    /** MahPlayerState enum. */
    enum MahPlayerState {
        PS_UnReady = 0,
        PS_Ready = 1,
        PS_MoPaiing = 2,
        PS_ChuPaiing = 3,
        PS_FaPaiing = 4,
        PS_UnHSZ = 5,
        PS_HSZed = 6,
        PS_UnDingQue = 7,
        PS_DingQueed = 8,
        PS_UnableOperate = 11,
        PS_Operateing = 12,
        PS_PoChan = 15,
        PS_GameOver = 16,
        PS_ChongZhi = 17,
        PS_GiveUp = 21,
        PS_Leave = 22
    }

    /** MahColor enum. */
    enum MahColor {
        CL_Wan = 0,
        CL_Tong = 1,
        CL_Tiao = 2,
        CL_Zi = 3,
        CL_Other = 13
    }

    /** MahId enum. */
    enum MahId {
        MJ_Id_Null = 0,
        Wan1 = 1,
        Wan2 = 2,
        Wan3 = 3,
        Wan4 = 4,
        Wan5 = 5,
        Wan6 = 6,
        Wan7 = 7,
        Wan8 = 8,
        Wan9 = 9,
        Tong1 = 11,
        Tong2 = 12,
        Tong3 = 13,
        Tong4 = 14,
        Tong5 = 15,
        Tong6 = 16,
        Tong7 = 17,
        Tong8 = 18,
        Tong9 = 19,
        Tiao1 = 21,
        Tiao2 = 22,
        Tiao3 = 23,
        Tiao4 = 24,
        Tiao5 = 25,
        Tiao6 = 26,
        Tiao7 = 27,
        Tiao8 = 28,
        Tiao9 = 29,
        ZiHongZhong = 35,
        FuKaHongZhong = 135
    }

    /** MahHSZType enum. */
    enum MahHSZType {
        HSZ_ClockWise = 0,
        HSZ_AntiClockWise = 1,
        HSZ_OppoSiteSide = 2
    }

    /** MahHPGOPerate enum. */
    enum MahHPGOPerate {
        HPG_Guo = 0,
        HPG_Hu = 1,
        HPG_Peng = 2,
        HPG_DianGang = 4,
        HPG_BuGang = 8,
        HPG_AnGang = 16
    }

    /** MahQiangGangState enum. */
    enum MahQiangGangState {
        QGS_Normal = 0,
        QGS_HasQiangGang = 1,
        QGS_NoQiangGang = 2,
        QGS_BackToPeng = 3
    }

    /** MahHu enum. */
    enum MahHu {
        Hu_UnHu = 0,
        Hu_PingHu = 1,
        Hu_JinGouDiao = 2,
        Hu_YiBanGao = 3,
        Hu_ShuangAnKe = 4,
        Hu_QuanZhong = 5,
        Hu_QiDui = 6,
        Hu_GangShangPao = 7,
        Hu_SanJieGao = 8,
        Hu_QuanXiao = 9,
        Hu_DaYuWu = 10,
        Hu_YaoJiu = 11,
        Hu_QuanYaoJiu = 12,
        Hu_YiTiaoLong = 13,
        Hu_ShiErJinChai = 14,
        Hu_SuHu = 15,
        Hu_QuanDa = 16,
        Hu_DuanYaoJiu = 17,
        Hu_TuiBuDao = 18,
        Hu_BenJin = 19,
        Hu_JiuLianBaoDeng = 20,
        Hu_DanDiao = 21,
        Hu_SiJieGao = 22,
        Hu_QiangTiHu = 23,
        Hu_DiHu = 24,
        Hu_ZiMo = 25,
        Hu_YiSeShuangLongHui = 26,
        Hu_WuXingBaGua = 27,
        Hu_ZhuoWuKui = 28,
        Hu_HaiDiLaoYue = 29,
        Hu_MenQing = 30,
        Hu_QingYiSe = 31,
        Hu_SiAnKe = 32,
        Hu_TianHu = 33,
        Hu_SanLongQiDui = 34,
        Hu_LiuLianShun = 35,
        Hu_ShuangLongQiDui = 37,
        Hu_BuQiuRen = 38,
        Hu_LianQiDui = 39,
        Hu_ShouZhongBaoYi = 40,
        Hu_LaoSaoPei = 41,
        Hu_JiangDui = 42,
        Hu_ShuangTongKe = 43,
        Hu_ShiBaLuoHan = 44,
        Hu_KanZhang = 45,
        Hu_BaiWanShi = 46,
        Hu_DuiDuiHu = 47,
        Hu_BianZhang = 48,
        Hu_GangShangHua = 49,
        Hu_HongZhongDiao = 50,
        Hu_QuanDaiWu = 51,
        Hu_XiaoYuWu = 52,
        Hu_QuanShuangKe = 53,
        Hu_LongQiDui = 54,
        Hu_LvYiSe = 55,
        Hu_MiaoShouHuiChun = 56,
        Hu_QiangGangHu = 57,
        Hu_SanAnKe = 58,
        Hu_HongZhongGang = 59,
        Hu_MingPai = 60,
        Hu_WuHuSiHai = 61,
        Hu_TianLongBaBu = 62,
        Hu_XianHeZhiLu = 63,
        Hu_KaiMenJianShan = 64,
        Hu_ChangEBengYue = 65,
        Hu_BaiNiaoChaoFeng = 66,
        Hu_YouRenYouYu = 67,
        Hu_YiTongJiangShan = 68,
        Hu_WanMeiQingRenJie = 69,
        Hu_DianDaoQianKun = 70,
        Hu_JiuWuZhiZun = 71,
        Hu_ShiQuanShiMei = 72
    }

    /** MahScoreReason enum. */
    enum MahScoreReason {
        SR_UnDefine = 0,
        SR_Hu = 1,
        SR_DianGang = 2,
        SR_BuGang = 3,
        SR_AnGang = 4,
        SR_HuJiaoZhuanYi = 5,
        SR_DaJiao = 6,
        SR_HuaZhu = 7,
        SR_TuiSui = 8
    }

    /** MahPoChanReason enum. */
    enum MahPoChanReason {
        PCR_Null = 0,
        PCR_PoChan = 1,
        PCR_ChongZhi = 2,
        PCR_FuHuo = 3,
        PCR_GiveUp = 4
    }

    /** MahActionTime enum. */
    enum MahActionTime {
        MAT_Null = 0,
        MAT_KaiJuDongHua = 1001,
        MAT_FaPai = 1002,
        MAT_HSZ = 1003,
        MAT_DingQue = 1004,
        MAT_MoPai = 1005,
        MAT_DaPai = 1006,
        MAT_HuJiaoZhuanYi = 1007,
        MAT_HuaZhu = 1008,
        MAT_DaJiao = 1009,
        MAT_TuiShui = 1010,
        MAT_InningOver = 1011,
        MAT_Hu = 1012,
        MAT_Peng = 1013,
        MAT_Gang = 1014,
        MAT_PoFeng = 1015,
        MAT_GangShangHua = 1016
    }

    /** MahExtraLiuShuiType enum. */
    enum MahExtraLiuShuiType {
        ELS_Null = 0,
        ELS_DaDanDiao = 1
    }

    /** MahErrCode enum. */
    enum MahErrCode {
        MahErr_Sccuess = 0,
        MahErr_HSZHuaSeErr = 1,
        MahErr_HSZCountErr = 2,
        MahErr_UnableOpearte = 3,
        MahErr_Operated = 4,
        MahErr_UnableDaPai = 5
    }

    /** MahTiShi enum. */
    enum MahTiShi {
        GuoShuiBuHu = 0,
        BuNengGang = 1
    }

    /** Properties of a MahTableRule. */
    interface IMahTableRule {

        /** MahTableRule maxMultiple */
        maxMultiple?: (number|null);

        /** MahTableRule diFen */
        diFen?: (number|Long|null);

        /** MahTableRule inning */
        inning?: (number|null);

        /** MahTableRule huanSanZhang */
        huanSanZhang?: (boolean|null);

        /** MahTableRule dingQue */
        dingQue?: (boolean|null);

        /** MahTableRule ziMoType */
        ziMoType?: (boolean|null);

        /** MahTableRule xlhzRule */
        xlhzRule?: (pb.IMahXLHZRuleData|null);
    }

    /** Represents a MahTableRule. */
    class MahTableRule implements IMahTableRule {

        /**
         * Constructs a new MahTableRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMahTableRule);

        /** MahTableRule maxMultiple. */
        public maxMultiple: number;

        /** MahTableRule diFen. */
        public diFen: (number|Long);

        /** MahTableRule inning. */
        public inning: number;

        /** MahTableRule huanSanZhang. */
        public huanSanZhang: boolean;

        /** MahTableRule dingQue. */
        public dingQue: boolean;

        /** MahTableRule ziMoType. */
        public ziMoType: boolean;

        /** MahTableRule xlhzRule. */
        public xlhzRule?: (pb.IMahXLHZRuleData|null);

        /**
         * Creates a new MahTableRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MahTableRule instance
         */
        public static create(properties?: pb.IMahTableRule): pb.MahTableRule;

        /**
         * Encodes the specified MahTableRule message. Does not implicitly {@link pb.MahTableRule.verify|verify} messages.
         * @param message MahTableRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMahTableRule, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MahTableRule message, length delimited. Does not implicitly {@link pb.MahTableRule.verify|verify} messages.
         * @param message MahTableRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMahTableRule, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MahTableRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MahTableRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.MahTableRule;

        /**
         * Decodes a MahTableRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MahTableRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.MahTableRule;

        /**
         * Verifies a MahTableRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MahTableRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MahTableRule
         */
        public static fromObject(object: { [k: string]: any }): pb.MahTableRule;

        /**
         * Creates a plain object from a MahTableRule message. Also converts values to other types if specified.
         * @param message MahTableRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.MahTableRule, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MahTableRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MahXLHZRuleData. */
    interface IMahXLHZRuleData {

        /** MahXLHZRuleData hongZhongType */
        hongZhongType?: (number|null);

        /** MahXLHZRuleData isHongZhongGang */
        isHongZhongGang?: (boolean|null);

        /** MahXLHZRuleData mingPai */
        mingPai?: (boolean|null);
    }

    /** Represents a MahXLHZRuleData. */
    class MahXLHZRuleData implements IMahXLHZRuleData {

        /**
         * Constructs a new MahXLHZRuleData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMahXLHZRuleData);

        /** MahXLHZRuleData hongZhongType. */
        public hongZhongType: number;

        /** MahXLHZRuleData isHongZhongGang. */
        public isHongZhongGang: boolean;

        /** MahXLHZRuleData mingPai. */
        public mingPai: boolean;

        /**
         * Creates a new MahXLHZRuleData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MahXLHZRuleData instance
         */
        public static create(properties?: pb.IMahXLHZRuleData): pb.MahXLHZRuleData;

        /**
         * Encodes the specified MahXLHZRuleData message. Does not implicitly {@link pb.MahXLHZRuleData.verify|verify} messages.
         * @param message MahXLHZRuleData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMahXLHZRuleData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MahXLHZRuleData message, length delimited. Does not implicitly {@link pb.MahXLHZRuleData.verify|verify} messages.
         * @param message MahXLHZRuleData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMahXLHZRuleData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MahXLHZRuleData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MahXLHZRuleData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.MahXLHZRuleData;

        /**
         * Decodes a MahXLHZRuleData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MahXLHZRuleData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.MahXLHZRuleData;

        /**
         * Verifies a MahXLHZRuleData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MahXLHZRuleData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MahXLHZRuleData
         */
        public static fromObject(object: { [k: string]: any }): pb.MahXLHZRuleData;

        /**
         * Creates a plain object from a MahXLHZRuleData message. Also converts values to other types if specified.
         * @param message MahXLHZRuleData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.MahXLHZRuleData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MahXLHZRuleData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SMails. */
    interface IC2SMails {
    }

    /** Represents a C2SMails. */
    class C2SMails implements IC2SMails {

        /**
         * Constructs a new C2SMails.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SMails);

        /**
         * Creates a new C2SMails instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SMails instance
         */
        public static create(properties?: pb.IC2SMails): pb.C2SMails;

        /**
         * Encodes the specified C2SMails message. Does not implicitly {@link pb.C2SMails.verify|verify} messages.
         * @param message C2SMails message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SMails, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SMails message, length delimited. Does not implicitly {@link pb.C2SMails.verify|verify} messages.
         * @param message C2SMails message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SMails, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SMails message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SMails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SMails;

        /**
         * Decodes a C2SMails message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SMails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SMails;

        /**
         * Verifies a C2SMails message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SMails message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SMails
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SMails;

        /**
         * Creates a plain object from a C2SMails message. Also converts values to other types if specified.
         * @param message C2SMails
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SMails, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SMails to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMails. */
    interface IS2CMails {

        /** S2CMails mail */
        mail?: (pb.IUserMail[]|null);
    }

    /** Represents a S2CMails. */
    class S2CMails implements IS2CMails {

        /**
         * Constructs a new S2CMails.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMails);

        /** S2CMails mail. */
        public mail: pb.IUserMail[];

        /**
         * Creates a new S2CMails instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMails instance
         */
        public static create(properties?: pb.IS2CMails): pb.S2CMails;

        /**
         * Encodes the specified S2CMails message. Does not implicitly {@link pb.S2CMails.verify|verify} messages.
         * @param message S2CMails message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMails, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMails message, length delimited. Does not implicitly {@link pb.S2CMails.verify|verify} messages.
         * @param message S2CMails message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMails, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMails message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMails;

        /**
         * Decodes a S2CMails message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMails
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMails;

        /**
         * Verifies a S2CMails message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMails message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMails
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMails;

        /**
         * Creates a plain object from a S2CMails message. Also converts values to other types if specified.
         * @param message S2CMails
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMails, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMails to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SReadMail. */
    interface IC2SReadMail {

        /** C2SReadMail ids */
        ids?: ((number|Long)[]|null);
    }

    /** Represents a C2SReadMail. */
    class C2SReadMail implements IC2SReadMail {

        /**
         * Constructs a new C2SReadMail.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SReadMail);

        /** C2SReadMail ids. */
        public ids: (number|Long)[];

        /**
         * Creates a new C2SReadMail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SReadMail instance
         */
        public static create(properties?: pb.IC2SReadMail): pb.C2SReadMail;

        /**
         * Encodes the specified C2SReadMail message. Does not implicitly {@link pb.C2SReadMail.verify|verify} messages.
         * @param message C2SReadMail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SReadMail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SReadMail message, length delimited. Does not implicitly {@link pb.C2SReadMail.verify|verify} messages.
         * @param message C2SReadMail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SReadMail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SReadMail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SReadMail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SReadMail;

        /**
         * Decodes a C2SReadMail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SReadMail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SReadMail;

        /**
         * Verifies a C2SReadMail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SReadMail message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SReadMail
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SReadMail;

        /**
         * Creates a plain object from a C2SReadMail message. Also converts values to other types if specified.
         * @param message C2SReadMail
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SReadMail, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SReadMail to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CReadMail. */
    interface IS2CReadMail {

        /** S2CReadMail ids */
        ids?: ((number|Long)[]|null);
    }

    /** Represents a S2CReadMail. */
    class S2CReadMail implements IS2CReadMail {

        /**
         * Constructs a new S2CReadMail.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CReadMail);

        /** S2CReadMail ids. */
        public ids: (number|Long)[];

        /**
         * Creates a new S2CReadMail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CReadMail instance
         */
        public static create(properties?: pb.IS2CReadMail): pb.S2CReadMail;

        /**
         * Encodes the specified S2CReadMail message. Does not implicitly {@link pb.S2CReadMail.verify|verify} messages.
         * @param message S2CReadMail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CReadMail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CReadMail message, length delimited. Does not implicitly {@link pb.S2CReadMail.verify|verify} messages.
         * @param message S2CReadMail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CReadMail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CReadMail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CReadMail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CReadMail;

        /**
         * Decodes a S2CReadMail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CReadMail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CReadMail;

        /**
         * Verifies a S2CReadMail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CReadMail message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CReadMail
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CReadMail;

        /**
         * Creates a plain object from a S2CReadMail message. Also converts values to other types if specified.
         * @param message S2CReadMail
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CReadMail, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CReadMail to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetMailAtta. */
    interface IC2SGetMailAtta {

        /** C2SGetMailAtta ids */
        ids?: ((number|Long)[]|null);
    }

    /** Represents a C2SGetMailAtta. */
    class C2SGetMailAtta implements IC2SGetMailAtta {

        /**
         * Constructs a new C2SGetMailAtta.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetMailAtta);

        /** C2SGetMailAtta ids. */
        public ids: (number|Long)[];

        /**
         * Creates a new C2SGetMailAtta instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetMailAtta instance
         */
        public static create(properties?: pb.IC2SGetMailAtta): pb.C2SGetMailAtta;

        /**
         * Encodes the specified C2SGetMailAtta message. Does not implicitly {@link pb.C2SGetMailAtta.verify|verify} messages.
         * @param message C2SGetMailAtta message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetMailAtta, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetMailAtta message, length delimited. Does not implicitly {@link pb.C2SGetMailAtta.verify|verify} messages.
         * @param message C2SGetMailAtta message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetMailAtta, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetMailAtta message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetMailAtta
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetMailAtta;

        /**
         * Decodes a C2SGetMailAtta message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetMailAtta
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetMailAtta;

        /**
         * Verifies a C2SGetMailAtta message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetMailAtta message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetMailAtta
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetMailAtta;

        /**
         * Creates a plain object from a C2SGetMailAtta message. Also converts values to other types if specified.
         * @param message C2SGetMailAtta
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetMailAtta, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetMailAtta to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetMailAtta. */
    interface IS2CGetMailAtta {

        /** S2CGetMailAtta ids */
        ids?: ((number|Long)[]|null);

        /** S2CGetMailAtta atta */
        atta?: (pb.IItem[]|null);
    }

    /** Represents a S2CGetMailAtta. */
    class S2CGetMailAtta implements IS2CGetMailAtta {

        /**
         * Constructs a new S2CGetMailAtta.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetMailAtta);

        /** S2CGetMailAtta ids. */
        public ids: (number|Long)[];

        /** S2CGetMailAtta atta. */
        public atta: pb.IItem[];

        /**
         * Creates a new S2CGetMailAtta instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetMailAtta instance
         */
        public static create(properties?: pb.IS2CGetMailAtta): pb.S2CGetMailAtta;

        /**
         * Encodes the specified S2CGetMailAtta message. Does not implicitly {@link pb.S2CGetMailAtta.verify|verify} messages.
         * @param message S2CGetMailAtta message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetMailAtta, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetMailAtta message, length delimited. Does not implicitly {@link pb.S2CGetMailAtta.verify|verify} messages.
         * @param message S2CGetMailAtta message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetMailAtta, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetMailAtta message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetMailAtta
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetMailAtta;

        /**
         * Decodes a S2CGetMailAtta message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetMailAtta
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetMailAtta;

        /**
         * Verifies a S2CGetMailAtta message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetMailAtta message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetMailAtta
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetMailAtta;

        /**
         * Creates a plain object from a S2CGetMailAtta message. Also converts values to other types if specified.
         * @param message S2CGetMailAtta
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetMailAtta, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetMailAtta to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SDelMail. */
    interface IC2SDelMail {

        /** C2SDelMail ids */
        ids?: ((number|Long)[]|null);
    }

    /** Represents a C2SDelMail. */
    class C2SDelMail implements IC2SDelMail {

        /**
         * Constructs a new C2SDelMail.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SDelMail);

        /** C2SDelMail ids. */
        public ids: (number|Long)[];

        /**
         * Creates a new C2SDelMail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SDelMail instance
         */
        public static create(properties?: pb.IC2SDelMail): pb.C2SDelMail;

        /**
         * Encodes the specified C2SDelMail message. Does not implicitly {@link pb.C2SDelMail.verify|verify} messages.
         * @param message C2SDelMail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SDelMail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SDelMail message, length delimited. Does not implicitly {@link pb.C2SDelMail.verify|verify} messages.
         * @param message C2SDelMail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SDelMail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SDelMail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SDelMail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SDelMail;

        /**
         * Decodes a C2SDelMail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SDelMail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SDelMail;

        /**
         * Verifies a C2SDelMail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SDelMail message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SDelMail
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SDelMail;

        /**
         * Creates a plain object from a C2SDelMail message. Also converts values to other types if specified.
         * @param message C2SDelMail
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SDelMail, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SDelMail to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDelMail. */
    interface IS2CDelMail {

        /** S2CDelMail ids */
        ids?: ((number|Long)[]|null);
    }

    /** Represents a S2CDelMail. */
    class S2CDelMail implements IS2CDelMail {

        /**
         * Constructs a new S2CDelMail.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDelMail);

        /** S2CDelMail ids. */
        public ids: (number|Long)[];

        /**
         * Creates a new S2CDelMail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDelMail instance
         */
        public static create(properties?: pb.IS2CDelMail): pb.S2CDelMail;

        /**
         * Encodes the specified S2CDelMail message. Does not implicitly {@link pb.S2CDelMail.verify|verify} messages.
         * @param message S2CDelMail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDelMail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDelMail message, length delimited. Does not implicitly {@link pb.S2CDelMail.verify|verify} messages.
         * @param message S2CDelMail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDelMail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDelMail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDelMail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDelMail;

        /**
         * Decodes a S2CDelMail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDelMail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDelMail;

        /**
         * Verifies a S2CDelMail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDelMail message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDelMail
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDelMail;

        /**
         * Creates a plain object from a S2CDelMail message. Also converts values to other types if specified.
         * @param message S2CDelMail
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDelMail, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDelMail to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserMail. */
    interface IUserMail {

        /** UserMail id */
        id?: (number|Long|null);

        /** UserMail sender */
        sender?: (number|Long|null);

        /** UserMail receiver */
        receiver?: (number|Long|null);

        /** UserMail title */
        title?: (string|null);

        /** UserMail content */
        content?: (string|null);

        /** UserMail date */
        date?: (number|Long|null);

        /** UserMail atta */
        atta?: (pb.IItem[]|null);

        /** UserMail reason */
        reason?: (number|null);

        /** UserMail param */
        param?: (number|Long|null);

        /** UserMail state */
        state?: (number|null);

        /** UserMail senderName */
        senderName?: (string|null);
    }

    /** Represents a UserMail. */
    class UserMail implements IUserMail {

        /**
         * Constructs a new UserMail.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUserMail);

        /** UserMail id. */
        public id: (number|Long);

        /** UserMail sender. */
        public sender: (number|Long);

        /** UserMail receiver. */
        public receiver: (number|Long);

        /** UserMail title. */
        public title: string;

        /** UserMail content. */
        public content: string;

        /** UserMail date. */
        public date: (number|Long);

        /** UserMail atta. */
        public atta: pb.IItem[];

        /** UserMail reason. */
        public reason: number;

        /** UserMail param. */
        public param: (number|Long);

        /** UserMail state. */
        public state: number;

        /** UserMail senderName. */
        public senderName: string;

        /**
         * Creates a new UserMail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserMail instance
         */
        public static create(properties?: pb.IUserMail): pb.UserMail;

        /**
         * Encodes the specified UserMail message. Does not implicitly {@link pb.UserMail.verify|verify} messages.
         * @param message UserMail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUserMail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UserMail message, length delimited. Does not implicitly {@link pb.UserMail.verify|verify} messages.
         * @param message UserMail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUserMail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UserMail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserMail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.UserMail;

        /**
         * Decodes a UserMail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserMail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.UserMail;

        /**
         * Verifies a UserMail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserMail message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserMail
         */
        public static fromObject(object: { [k: string]: any }): pb.UserMail;

        /**
         * Creates a plain object from a UserMail message. Also converts values to other types if specified.
         * @param message UserMail
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.UserMail, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserMail to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** MailState enum. */
    enum MailState {
        MailState_UnRead = 0,
        MailState_Read = 1,
        MailState_GetAtt = 2
    }

    /** Properties of a C2SGetMoney. */
    interface IC2SGetMoney {

        /** C2SGetMoney id */
        id?: (number|null);

        /** C2SGetMoney param */
        param?: (string|null);
    }

    /** Represents a C2SGetMoney. */
    class C2SGetMoney implements IC2SGetMoney {

        /**
         * Constructs a new C2SGetMoney.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetMoney);

        /** C2SGetMoney id. */
        public id: number;

        /** C2SGetMoney param. */
        public param: string;

        /**
         * Creates a new C2SGetMoney instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetMoney instance
         */
        public static create(properties?: pb.IC2SGetMoney): pb.C2SGetMoney;

        /**
         * Encodes the specified C2SGetMoney message. Does not implicitly {@link pb.C2SGetMoney.verify|verify} messages.
         * @param message C2SGetMoney message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetMoney, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetMoney message, length delimited. Does not implicitly {@link pb.C2SGetMoney.verify|verify} messages.
         * @param message C2SGetMoney message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetMoney, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetMoney message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetMoney
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetMoney;

        /**
         * Decodes a C2SGetMoney message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetMoney
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetMoney;

        /**
         * Verifies a C2SGetMoney message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetMoney message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetMoney
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetMoney;

        /**
         * Creates a plain object from a C2SGetMoney message. Also converts values to other types if specified.
         * @param message C2SGetMoney
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetMoney, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetMoney to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetMoney. */
    interface IS2CGetMoney {

        /** S2CGetMoney id */
        id?: (number|null);

        /** S2CGetMoney ec */
        ec?: (number|null);
    }

    /** Represents a S2CGetMoney. */
    class S2CGetMoney implements IS2CGetMoney {

        /**
         * Constructs a new S2CGetMoney.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetMoney);

        /** S2CGetMoney id. */
        public id: number;

        /** S2CGetMoney ec. */
        public ec: number;

        /**
         * Creates a new S2CGetMoney instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetMoney instance
         */
        public static create(properties?: pb.IS2CGetMoney): pb.S2CGetMoney;

        /**
         * Encodes the specified S2CGetMoney message. Does not implicitly {@link pb.S2CGetMoney.verify|verify} messages.
         * @param message S2CGetMoney message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetMoney, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetMoney message, length delimited. Does not implicitly {@link pb.S2CGetMoney.verify|verify} messages.
         * @param message S2CGetMoney message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetMoney, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetMoney message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetMoney
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetMoney;

        /**
         * Decodes a S2CGetMoney message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetMoney
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetMoney;

        /**
         * Verifies a S2CGetMoney message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetMoney message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetMoney
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetMoney;

        /**
         * Creates a plain object from a S2CGetMoney message. Also converts values to other types if specified.
         * @param message S2CGetMoney
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetMoney, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetMoney to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetMoneyDetail. */
    interface IC2SGetMoneyDetail {
    }

    /** Represents a C2SGetMoneyDetail. */
    class C2SGetMoneyDetail implements IC2SGetMoneyDetail {

        /**
         * Constructs a new C2SGetMoneyDetail.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetMoneyDetail);

        /**
         * Creates a new C2SGetMoneyDetail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetMoneyDetail instance
         */
        public static create(properties?: pb.IC2SGetMoneyDetail): pb.C2SGetMoneyDetail;

        /**
         * Encodes the specified C2SGetMoneyDetail message. Does not implicitly {@link pb.C2SGetMoneyDetail.verify|verify} messages.
         * @param message C2SGetMoneyDetail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetMoneyDetail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetMoneyDetail message, length delimited. Does not implicitly {@link pb.C2SGetMoneyDetail.verify|verify} messages.
         * @param message C2SGetMoneyDetail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetMoneyDetail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetMoneyDetail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetMoneyDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetMoneyDetail;

        /**
         * Decodes a C2SGetMoneyDetail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetMoneyDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetMoneyDetail;

        /**
         * Verifies a C2SGetMoneyDetail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetMoneyDetail message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetMoneyDetail
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetMoneyDetail;

        /**
         * Creates a plain object from a C2SGetMoneyDetail message. Also converts values to other types if specified.
         * @param message C2SGetMoneyDetail
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetMoneyDetail, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetMoneyDetail to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetMoneyDetail. */
    interface IS2CGetMoneyDetail {

        /** S2CGetMoneyDetail items */
        items?: (pb.IGetMoneyDetail[]|null);
    }

    /** Represents a S2CGetMoneyDetail. */
    class S2CGetMoneyDetail implements IS2CGetMoneyDetail {

        /**
         * Constructs a new S2CGetMoneyDetail.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetMoneyDetail);

        /** S2CGetMoneyDetail items. */
        public items: pb.IGetMoneyDetail[];

        /**
         * Creates a new S2CGetMoneyDetail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetMoneyDetail instance
         */
        public static create(properties?: pb.IS2CGetMoneyDetail): pb.S2CGetMoneyDetail;

        /**
         * Encodes the specified S2CGetMoneyDetail message. Does not implicitly {@link pb.S2CGetMoneyDetail.verify|verify} messages.
         * @param message S2CGetMoneyDetail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetMoneyDetail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetMoneyDetail message, length delimited. Does not implicitly {@link pb.S2CGetMoneyDetail.verify|verify} messages.
         * @param message S2CGetMoneyDetail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetMoneyDetail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetMoneyDetail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetMoneyDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetMoneyDetail;

        /**
         * Decodes a S2CGetMoneyDetail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetMoneyDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetMoneyDetail;

        /**
         * Verifies a S2CGetMoneyDetail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetMoneyDetail message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetMoneyDetail
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetMoneyDetail;

        /**
         * Creates a plain object from a S2CGetMoneyDetail message. Also converts values to other types if specified.
         * @param message S2CGetMoneyDetail
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetMoneyDetail, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetMoneyDetail to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetMoneyCfgs. */
    interface IC2SGetMoneyCfgs {
    }

    /** Represents a C2SGetMoneyCfgs. */
    class C2SGetMoneyCfgs implements IC2SGetMoneyCfgs {

        /**
         * Constructs a new C2SGetMoneyCfgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetMoneyCfgs);

        /**
         * Creates a new C2SGetMoneyCfgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetMoneyCfgs instance
         */
        public static create(properties?: pb.IC2SGetMoneyCfgs): pb.C2SGetMoneyCfgs;

        /**
         * Encodes the specified C2SGetMoneyCfgs message. Does not implicitly {@link pb.C2SGetMoneyCfgs.verify|verify} messages.
         * @param message C2SGetMoneyCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetMoneyCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetMoneyCfgs message, length delimited. Does not implicitly {@link pb.C2SGetMoneyCfgs.verify|verify} messages.
         * @param message C2SGetMoneyCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetMoneyCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetMoneyCfgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetMoneyCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetMoneyCfgs;

        /**
         * Decodes a C2SGetMoneyCfgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetMoneyCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetMoneyCfgs;

        /**
         * Verifies a C2SGetMoneyCfgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetMoneyCfgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetMoneyCfgs
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetMoneyCfgs;

        /**
         * Creates a plain object from a C2SGetMoneyCfgs message. Also converts values to other types if specified.
         * @param message C2SGetMoneyCfgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetMoneyCfgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetMoneyCfgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetMoneyCfgs. */
    interface IS2CGetMoneyCfgs {

        /** S2CGetMoneyCfgs items */
        items?: (pb.IGetMoneyCfg[]|null);
    }

    /** Represents a S2CGetMoneyCfgs. */
    class S2CGetMoneyCfgs implements IS2CGetMoneyCfgs {

        /**
         * Constructs a new S2CGetMoneyCfgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetMoneyCfgs);

        /** S2CGetMoneyCfgs items. */
        public items: pb.IGetMoneyCfg[];

        /**
         * Creates a new S2CGetMoneyCfgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetMoneyCfgs instance
         */
        public static create(properties?: pb.IS2CGetMoneyCfgs): pb.S2CGetMoneyCfgs;

        /**
         * Encodes the specified S2CGetMoneyCfgs message. Does not implicitly {@link pb.S2CGetMoneyCfgs.verify|verify} messages.
         * @param message S2CGetMoneyCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetMoneyCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetMoneyCfgs message, length delimited. Does not implicitly {@link pb.S2CGetMoneyCfgs.verify|verify} messages.
         * @param message S2CGetMoneyCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetMoneyCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetMoneyCfgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetMoneyCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetMoneyCfgs;

        /**
         * Decodes a S2CGetMoneyCfgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetMoneyCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetMoneyCfgs;

        /**
         * Verifies a S2CGetMoneyCfgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetMoneyCfgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetMoneyCfgs
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetMoneyCfgs;

        /**
         * Creates a plain object from a S2CGetMoneyCfgs message. Also converts values to other types if specified.
         * @param message S2CGetMoneyCfgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetMoneyCfgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetMoneyCfgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGiveBeginnerMoney. */
    interface IS2CGiveBeginnerMoney {

        /** S2CGiveBeginnerMoney total */
        total?: (number|null);

        /** S2CGiveBeginnerMoney left */
        left?: (number|null);

        /** S2CGiveBeginnerMoney cur */
        cur?: (number|null);

        /** S2CGiveBeginnerMoney first */
        first?: (boolean|null);
    }

    /** Represents a S2CGiveBeginnerMoney. */
    class S2CGiveBeginnerMoney implements IS2CGiveBeginnerMoney {

        /**
         * Constructs a new S2CGiveBeginnerMoney.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGiveBeginnerMoney);

        /** S2CGiveBeginnerMoney total. */
        public total: number;

        /** S2CGiveBeginnerMoney left. */
        public left: number;

        /** S2CGiveBeginnerMoney cur. */
        public cur: number;

        /** S2CGiveBeginnerMoney first. */
        public first: boolean;

        /**
         * Creates a new S2CGiveBeginnerMoney instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGiveBeginnerMoney instance
         */
        public static create(properties?: pb.IS2CGiveBeginnerMoney): pb.S2CGiveBeginnerMoney;

        /**
         * Encodes the specified S2CGiveBeginnerMoney message. Does not implicitly {@link pb.S2CGiveBeginnerMoney.verify|verify} messages.
         * @param message S2CGiveBeginnerMoney message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGiveBeginnerMoney, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGiveBeginnerMoney message, length delimited. Does not implicitly {@link pb.S2CGiveBeginnerMoney.verify|verify} messages.
         * @param message S2CGiveBeginnerMoney message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGiveBeginnerMoney, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGiveBeginnerMoney message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGiveBeginnerMoney
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGiveBeginnerMoney;

        /**
         * Decodes a S2CGiveBeginnerMoney message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGiveBeginnerMoney
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGiveBeginnerMoney;

        /**
         * Verifies a S2CGiveBeginnerMoney message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGiveBeginnerMoney message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGiveBeginnerMoney
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGiveBeginnerMoney;

        /**
         * Creates a plain object from a S2CGiveBeginnerMoney message. Also converts values to other types if specified.
         * @param message S2CGiveBeginnerMoney
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGiveBeginnerMoney, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGiveBeginnerMoney to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetInviteList. */
    interface IC2SGetInviteList {
    }

    /** Represents a C2SGetInviteList. */
    class C2SGetInviteList implements IC2SGetInviteList {

        /**
         * Constructs a new C2SGetInviteList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetInviteList);

        /**
         * Creates a new C2SGetInviteList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetInviteList instance
         */
        public static create(properties?: pb.IC2SGetInviteList): pb.C2SGetInviteList;

        /**
         * Encodes the specified C2SGetInviteList message. Does not implicitly {@link pb.C2SGetInviteList.verify|verify} messages.
         * @param message C2SGetInviteList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetInviteList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetInviteList message, length delimited. Does not implicitly {@link pb.C2SGetInviteList.verify|verify} messages.
         * @param message C2SGetInviteList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetInviteList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetInviteList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetInviteList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetInviteList;

        /**
         * Decodes a C2SGetInviteList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetInviteList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetInviteList;

        /**
         * Verifies a C2SGetInviteList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetInviteList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetInviteList
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetInviteList;

        /**
         * Creates a plain object from a C2SGetInviteList message. Also converts values to other types if specified.
         * @param message C2SGetInviteList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetInviteList, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetInviteList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InviteItem. */
    interface IInviteItem {

        /** InviteItem playerGuid */
        playerGuid?: (number|Long|null);

        /** InviteItem name */
        name?: (string|null);

        /** InviteItem regTime */
        regTime?: (number|Long|null);

        /** InviteItem playTimes */
        playTimes?: (number|null);

        /** InviteItem reach */
        reach?: (boolean|null);
    }

    /** Represents an InviteItem. */
    class InviteItem implements IInviteItem {

        /**
         * Constructs a new InviteItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IInviteItem);

        /** InviteItem playerGuid. */
        public playerGuid: (number|Long);

        /** InviteItem name. */
        public name: string;

        /** InviteItem regTime. */
        public regTime: (number|Long);

        /** InviteItem playTimes. */
        public playTimes: number;

        /** InviteItem reach. */
        public reach: boolean;

        /**
         * Creates a new InviteItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InviteItem instance
         */
        public static create(properties?: pb.IInviteItem): pb.InviteItem;

        /**
         * Encodes the specified InviteItem message. Does not implicitly {@link pb.InviteItem.verify|verify} messages.
         * @param message InviteItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IInviteItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InviteItem message, length delimited. Does not implicitly {@link pb.InviteItem.verify|verify} messages.
         * @param message InviteItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IInviteItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InviteItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InviteItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.InviteItem;

        /**
         * Decodes an InviteItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InviteItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.InviteItem;

        /**
         * Verifies an InviteItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InviteItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InviteItem
         */
        public static fromObject(object: { [k: string]: any }): pb.InviteItem;

        /**
         * Creates a plain object from an InviteItem message. Also converts values to other types if specified.
         * @param message InviteItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.InviteItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InviteItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetInviteList. */
    interface IS2CGetInviteList {

        /** S2CGetInviteList items */
        items?: (pb.IInviteItem[]|null);
    }

    /** Represents a S2CGetInviteList. */
    class S2CGetInviteList implements IS2CGetInviteList {

        /**
         * Constructs a new S2CGetInviteList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetInviteList);

        /** S2CGetInviteList items. */
        public items: pb.IInviteItem[];

        /**
         * Creates a new S2CGetInviteList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetInviteList instance
         */
        public static create(properties?: pb.IS2CGetInviteList): pb.S2CGetInviteList;

        /**
         * Encodes the specified S2CGetInviteList message. Does not implicitly {@link pb.S2CGetInviteList.verify|verify} messages.
         * @param message S2CGetInviteList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetInviteList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetInviteList message, length delimited. Does not implicitly {@link pb.S2CGetInviteList.verify|verify} messages.
         * @param message S2CGetInviteList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetInviteList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetInviteList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetInviteList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetInviteList;

        /**
         * Decodes a S2CGetInviteList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetInviteList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetInviteList;

        /**
         * Verifies a S2CGetInviteList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetInviteList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetInviteList
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetInviteList;

        /**
         * Creates a plain object from a S2CGetInviteList message. Also converts values to other types if specified.
         * @param message S2CGetInviteList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetInviteList, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetInviteList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** MoneyType enum. */
    enum MoneyType {
        MT_Null = 0,
        MT_Beginner = 1
    }

    /** GetMoneyType enum. */
    enum GetMoneyType {
        GMT_Null = 0,
        GMT_WithDraw = 1,
        GMT_PhoneCharge = 2
    }

    /** Properties of a GetMoneyCfg. */
    interface IGetMoneyCfg {

        /** GetMoneyCfg id */
        id?: (number|null);

        /** GetMoneyCfg iType */
        iType?: (pb.GetMoneyType|null);

        /** GetMoneyCfg money */
        money?: (number|null);

        /** GetMoneyCfg needRemain */
        needRemain?: (number|null);

        /** GetMoneyCfg remainDesc */
        remainDesc?: (string|null);

        /** GetMoneyCfg needAd */
        needAd?: (number|null);

        /** GetMoneyCfg adDesc */
        adDesc?: (string|null);

        /** GetMoneyCfg needInvite */
        needInvite?: (number|null);

        /** GetMoneyCfg inviteDesc */
        inviteDesc?: (string|null);

        /** GetMoneyCfg invitePlayTimes */
        invitePlayTimes?: (number|null);

        /** GetMoneyCfg invitePlayDesc */
        invitePlayDesc?: (string|null);
    }

    /** Represents a GetMoneyCfg. */
    class GetMoneyCfg implements IGetMoneyCfg {

        /**
         * Constructs a new GetMoneyCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetMoneyCfg);

        /** GetMoneyCfg id. */
        public id: number;

        /** GetMoneyCfg iType. */
        public iType: pb.GetMoneyType;

        /** GetMoneyCfg money. */
        public money: number;

        /** GetMoneyCfg needRemain. */
        public needRemain: number;

        /** GetMoneyCfg remainDesc. */
        public remainDesc: string;

        /** GetMoneyCfg needAd. */
        public needAd: number;

        /** GetMoneyCfg adDesc. */
        public adDesc: string;

        /** GetMoneyCfg needInvite. */
        public needInvite: number;

        /** GetMoneyCfg inviteDesc. */
        public inviteDesc: string;

        /** GetMoneyCfg invitePlayTimes. */
        public invitePlayTimes: number;

        /** GetMoneyCfg invitePlayDesc. */
        public invitePlayDesc: string;

        /**
         * Creates a new GetMoneyCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetMoneyCfg instance
         */
        public static create(properties?: pb.IGetMoneyCfg): pb.GetMoneyCfg;

        /**
         * Encodes the specified GetMoneyCfg message. Does not implicitly {@link pb.GetMoneyCfg.verify|verify} messages.
         * @param message GetMoneyCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetMoneyCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetMoneyCfg message, length delimited. Does not implicitly {@link pb.GetMoneyCfg.verify|verify} messages.
         * @param message GetMoneyCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetMoneyCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetMoneyCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetMoneyCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.GetMoneyCfg;

        /**
         * Decodes a GetMoneyCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetMoneyCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.GetMoneyCfg;

        /**
         * Verifies a GetMoneyCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetMoneyCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetMoneyCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.GetMoneyCfg;

        /**
         * Creates a plain object from a GetMoneyCfg message. Also converts values to other types if specified.
         * @param message GetMoneyCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.GetMoneyCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetMoneyCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** GetMoneyState enum. */
    enum GetMoneyState {
        GetMoneyState_Null = 0,
        GetMoneyState_Succ = 1,
        GetMoneyState_Fail = 2,
        GetMoneyState_Process = 3
    }

    /** Properties of a GetMoneyDetail. */
    interface IGetMoneyDetail {

        /** GetMoneyDetail id */
        id?: (number|Long|null);

        /** GetMoneyDetail uid */
        uid?: (number|Long|null);

        /** GetMoneyDetail time */
        time?: (number|Long|null);

        /** GetMoneyDetail iType */
        iType?: (pb.GetMoneyType|null);

        /** GetMoneyDetail amount */
        amount?: (number|null);

        /** GetMoneyDetail remain */
        remain?: (number|null);

        /** GetMoneyDetail param */
        param?: (string|null);

        /** GetMoneyDetail cash */
        cash?: (number|null);

        /** GetMoneyDetail state */
        state?: (pb.GetMoneyState|null);
    }

    /** Represents a GetMoneyDetail. */
    class GetMoneyDetail implements IGetMoneyDetail {

        /**
         * Constructs a new GetMoneyDetail.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGetMoneyDetail);

        /** GetMoneyDetail id. */
        public id: (number|Long);

        /** GetMoneyDetail uid. */
        public uid: (number|Long);

        /** GetMoneyDetail time. */
        public time: (number|Long);

        /** GetMoneyDetail iType. */
        public iType: pb.GetMoneyType;

        /** GetMoneyDetail amount. */
        public amount: number;

        /** GetMoneyDetail remain. */
        public remain: number;

        /** GetMoneyDetail param. */
        public param: string;

        /** GetMoneyDetail cash. */
        public cash: number;

        /** GetMoneyDetail state. */
        public state: pb.GetMoneyState;

        /**
         * Creates a new GetMoneyDetail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetMoneyDetail instance
         */
        public static create(properties?: pb.IGetMoneyDetail): pb.GetMoneyDetail;

        /**
         * Encodes the specified GetMoneyDetail message. Does not implicitly {@link pb.GetMoneyDetail.verify|verify} messages.
         * @param message GetMoneyDetail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGetMoneyDetail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetMoneyDetail message, length delimited. Does not implicitly {@link pb.GetMoneyDetail.verify|verify} messages.
         * @param message GetMoneyDetail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGetMoneyDetail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetMoneyDetail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetMoneyDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.GetMoneyDetail;

        /**
         * Decodes a GetMoneyDetail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetMoneyDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.GetMoneyDetail;

        /**
         * Verifies a GetMoneyDetail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetMoneyDetail message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetMoneyDetail
         */
        public static fromObject(object: { [k: string]: any }): pb.GetMoneyDetail;

        /**
         * Creates a plain object from a GetMoneyDetail message. Also converts values to other types if specified.
         * @param message GetMoneyDetail
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.GetMoneyDetail, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetMoneyDetail to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SActNotice. */
    interface IC2SActNotice {
    }

    /** Represents a C2SActNotice. */
    class C2SActNotice implements IC2SActNotice {

        /**
         * Constructs a new C2SActNotice.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SActNotice);

        /**
         * Creates a new C2SActNotice instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SActNotice instance
         */
        public static create(properties?: pb.IC2SActNotice): pb.C2SActNotice;

        /**
         * Encodes the specified C2SActNotice message. Does not implicitly {@link pb.C2SActNotice.verify|verify} messages.
         * @param message C2SActNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SActNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SActNotice message, length delimited. Does not implicitly {@link pb.C2SActNotice.verify|verify} messages.
         * @param message C2SActNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SActNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SActNotice message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SActNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SActNotice;

        /**
         * Decodes a C2SActNotice message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SActNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SActNotice;

        /**
         * Verifies a C2SActNotice message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SActNotice message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SActNotice
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SActNotice;

        /**
         * Creates a plain object from a C2SActNotice message. Also converts values to other types if specified.
         * @param message C2SActNotice
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SActNotice, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SActNotice to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CActNotice. */
    interface IS2CActNotice {

        /** S2CActNotice items */
        items?: (pb.ILoginNotice[]|null);
    }

    /** Represents a S2CActNotice. */
    class S2CActNotice implements IS2CActNotice {

        /**
         * Constructs a new S2CActNotice.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CActNotice);

        /** S2CActNotice items. */
        public items: pb.ILoginNotice[];

        /**
         * Creates a new S2CActNotice instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CActNotice instance
         */
        public static create(properties?: pb.IS2CActNotice): pb.S2CActNotice;

        /**
         * Encodes the specified S2CActNotice message. Does not implicitly {@link pb.S2CActNotice.verify|verify} messages.
         * @param message S2CActNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CActNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CActNotice message, length delimited. Does not implicitly {@link pb.S2CActNotice.verify|verify} messages.
         * @param message S2CActNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CActNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CActNotice message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CActNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CActNotice;

        /**
         * Decodes a S2CActNotice message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CActNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CActNotice;

        /**
         * Verifies a S2CActNotice message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CActNotice message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CActNotice
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CActNotice;

        /**
         * Creates a plain object from a S2CActNotice message. Also converts values to other types if specified.
         * @param message S2CActNotice
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CActNotice, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CActNotice to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CRollingNotice. */
    interface IS2CRollingNotice {

        /** S2CRollingNotice items */
        items?: (pb.IRollingNotice[]|null);
    }

    /** Represents a S2CRollingNotice. */
    class S2CRollingNotice implements IS2CRollingNotice {

        /**
         * Constructs a new S2CRollingNotice.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CRollingNotice);

        /** S2CRollingNotice items. */
        public items: pb.IRollingNotice[];

        /**
         * Creates a new S2CRollingNotice instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CRollingNotice instance
         */
        public static create(properties?: pb.IS2CRollingNotice): pb.S2CRollingNotice;

        /**
         * Encodes the specified S2CRollingNotice message. Does not implicitly {@link pb.S2CRollingNotice.verify|verify} messages.
         * @param message S2CRollingNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CRollingNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CRollingNotice message, length delimited. Does not implicitly {@link pb.S2CRollingNotice.verify|verify} messages.
         * @param message S2CRollingNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CRollingNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CRollingNotice message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CRollingNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CRollingNotice;

        /**
         * Decodes a S2CRollingNotice message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CRollingNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CRollingNotice;

        /**
         * Verifies a S2CRollingNotice message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CRollingNotice message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CRollingNotice
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CRollingNotice;

        /**
         * Creates a plain object from a S2CRollingNotice message. Also converts values to other types if specified.
         * @param message S2CRollingNotice
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CRollingNotice, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CRollingNotice to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDeleteNotice. */
    interface IS2CDeleteNotice {

        /** S2CDeleteNotice items */
        items?: (pb.IDeleteNotice[]|null);
    }

    /** Represents a S2CDeleteNotice. */
    class S2CDeleteNotice implements IS2CDeleteNotice {

        /**
         * Constructs a new S2CDeleteNotice.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDeleteNotice);

        /** S2CDeleteNotice items. */
        public items: pb.IDeleteNotice[];

        /**
         * Creates a new S2CDeleteNotice instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDeleteNotice instance
         */
        public static create(properties?: pb.IS2CDeleteNotice): pb.S2CDeleteNotice;

        /**
         * Encodes the specified S2CDeleteNotice message. Does not implicitly {@link pb.S2CDeleteNotice.verify|verify} messages.
         * @param message S2CDeleteNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDeleteNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDeleteNotice message, length delimited. Does not implicitly {@link pb.S2CDeleteNotice.verify|verify} messages.
         * @param message S2CDeleteNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDeleteNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDeleteNotice message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDeleteNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDeleteNotice;

        /**
         * Decodes a S2CDeleteNotice message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDeleteNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDeleteNotice;

        /**
         * Verifies a S2CDeleteNotice message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDeleteNotice message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDeleteNotice
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDeleteNotice;

        /**
         * Creates a plain object from a S2CDeleteNotice message. Also converts values to other types if specified.
         * @param message S2CDeleteNotice
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDeleteNotice, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDeleteNotice to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CUISwitches. */
    interface IS2CUISwitches {

        /** S2CUISwitches items */
        items?: ({ [k: string]: number }|null);
    }

    /** Represents a S2CUISwitches. */
    class S2CUISwitches implements IS2CUISwitches {

        /**
         * Constructs a new S2CUISwitches.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CUISwitches);

        /** S2CUISwitches items. */
        public items: { [k: string]: number };

        /**
         * Creates a new S2CUISwitches instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CUISwitches instance
         */
        public static create(properties?: pb.IS2CUISwitches): pb.S2CUISwitches;

        /**
         * Encodes the specified S2CUISwitches message. Does not implicitly {@link pb.S2CUISwitches.verify|verify} messages.
         * @param message S2CUISwitches message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CUISwitches, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CUISwitches message, length delimited. Does not implicitly {@link pb.S2CUISwitches.verify|verify} messages.
         * @param message S2CUISwitches message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CUISwitches, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CUISwitches message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CUISwitches
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CUISwitches;

        /**
         * Decodes a S2CUISwitches message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CUISwitches
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CUISwitches;

        /**
         * Verifies a S2CUISwitches message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CUISwitches message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CUISwitches
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CUISwitches;

        /**
         * Creates a plain object from a S2CUISwitches message. Also converts values to other types if specified.
         * @param message S2CUISwitches
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CUISwitches, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CUISwitches to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LoginNotice. */
    interface ILoginNotice {

        /** LoginNotice id */
        id?: (number|null);

        /** LoginNotice type */
        type?: (number|null);

        /** LoginNotice title */
        title?: (string|null);

        /** LoginNotice text */
        text?: (string|null);

        /** LoginNotice imageUrl */
        imageUrl?: (string|null);

        /** LoginNotice targetType */
        targetType?: (pb.NoticeTarget|null);

        /** LoginNotice target */
        target?: (string|null);

        /** LoginNotice btnSwitch */
        btnSwitch?: (boolean|null);

        /** LoginNotice btntext */
        btntext?: (string|null);

        /** LoginNotice popup */
        popup?: (boolean|null);

        /** LoginNotice tabType */
        tabType?: (pb.LoginNotice.TabType|null);

        /** LoginNotice opentime */
        opentime?: (number|Long|null);

        /** LoginNotice endtime */
        endtime?: (number|Long|null);

        /** LoginNotice sort */
        sort?: (number|null);

        /** LoginNotice state */
        state?: (number|null);
    }

    /** Represents a LoginNotice. */
    class LoginNotice implements ILoginNotice {

        /**
         * Constructs a new LoginNotice.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ILoginNotice);

        /** LoginNotice id. */
        public id: number;

        /** LoginNotice type. */
        public type: number;

        /** LoginNotice title. */
        public title: string;

        /** LoginNotice text. */
        public text: string;

        /** LoginNotice imageUrl. */
        public imageUrl: string;

        /** LoginNotice targetType. */
        public targetType: pb.NoticeTarget;

        /** LoginNotice target. */
        public target: string;

        /** LoginNotice btnSwitch. */
        public btnSwitch: boolean;

        /** LoginNotice btntext. */
        public btntext: string;

        /** LoginNotice popup. */
        public popup: boolean;

        /** LoginNotice tabType. */
        public tabType: pb.LoginNotice.TabType;

        /** LoginNotice opentime. */
        public opentime: (number|Long);

        /** LoginNotice endtime. */
        public endtime: (number|Long);

        /** LoginNotice sort. */
        public sort: number;

        /** LoginNotice state. */
        public state: number;

        /**
         * Creates a new LoginNotice instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LoginNotice instance
         */
        public static create(properties?: pb.ILoginNotice): pb.LoginNotice;

        /**
         * Encodes the specified LoginNotice message. Does not implicitly {@link pb.LoginNotice.verify|verify} messages.
         * @param message LoginNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ILoginNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LoginNotice message, length delimited. Does not implicitly {@link pb.LoginNotice.verify|verify} messages.
         * @param message LoginNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ILoginNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LoginNotice message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LoginNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.LoginNotice;

        /**
         * Decodes a LoginNotice message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LoginNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.LoginNotice;

        /**
         * Verifies a LoginNotice message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LoginNotice message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LoginNotice
         */
        public static fromObject(object: { [k: string]: any }): pb.LoginNotice;

        /**
         * Creates a plain object from a LoginNotice message. Also converts values to other types if specified.
         * @param message LoginNotice
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.LoginNotice, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LoginNotice to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace LoginNotice {

        /** TabType enum. */
        enum TabType {
            Null = 0,
            Act = 1,
            Notice = 2,
            NotShow = 3
        }
    }

    /** Properties of a RollingNotice. */
    interface IRollingNotice {

        /** RollingNotice id */
        id?: (number|null);

        /** RollingNotice text */
        text?: (string|null);

        /** RollingNotice cd */
        cd?: (number|null);

        /** RollingNotice opentime */
        opentime?: (number|Long|null);

        /** RollingNotice endtime */
        endtime?: (number|Long|null);

        /** RollingNotice type */
        type?: (pb.RollingNoticeType|null);

        /** RollingNotice state */
        state?: (number|null);
    }

    /** Represents a RollingNotice. */
    class RollingNotice implements IRollingNotice {

        /**
         * Constructs a new RollingNotice.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRollingNotice);

        /** RollingNotice id. */
        public id: number;

        /** RollingNotice text. */
        public text: string;

        /** RollingNotice cd. */
        public cd: number;

        /** RollingNotice opentime. */
        public opentime: (number|Long);

        /** RollingNotice endtime. */
        public endtime: (number|Long);

        /** RollingNotice type. */
        public type: pb.RollingNoticeType;

        /** RollingNotice state. */
        public state: number;

        /**
         * Creates a new RollingNotice instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RollingNotice instance
         */
        public static create(properties?: pb.IRollingNotice): pb.RollingNotice;

        /**
         * Encodes the specified RollingNotice message. Does not implicitly {@link pb.RollingNotice.verify|verify} messages.
         * @param message RollingNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRollingNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RollingNotice message, length delimited. Does not implicitly {@link pb.RollingNotice.verify|verify} messages.
         * @param message RollingNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRollingNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RollingNotice message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RollingNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.RollingNotice;

        /**
         * Decodes a RollingNotice message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RollingNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.RollingNotice;

        /**
         * Verifies a RollingNotice message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RollingNotice message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RollingNotice
         */
        public static fromObject(object: { [k: string]: any }): pb.RollingNotice;

        /**
         * Creates a plain object from a RollingNotice message. Also converts values to other types if specified.
         * @param message RollingNotice
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.RollingNotice, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RollingNotice to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UiItem. */
    interface IUiItem {

        /** UiItem id */
        id?: (string|null);

        /** UiItem state */
        state?: (number|null);
    }

    /** Represents an UiItem. */
    class UiItem implements IUiItem {

        /**
         * Constructs a new UiItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUiItem);

        /** UiItem id. */
        public id: string;

        /** UiItem state. */
        public state: number;

        /**
         * Creates a new UiItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UiItem instance
         */
        public static create(properties?: pb.IUiItem): pb.UiItem;

        /**
         * Encodes the specified UiItem message. Does not implicitly {@link pb.UiItem.verify|verify} messages.
         * @param message UiItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUiItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UiItem message, length delimited. Does not implicitly {@link pb.UiItem.verify|verify} messages.
         * @param message UiItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUiItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an UiItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UiItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.UiItem;

        /**
         * Decodes an UiItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UiItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.UiItem;

        /**
         * Verifies an UiItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UiItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UiItem
         */
        public static fromObject(object: { [k: string]: any }): pb.UiItem;

        /**
         * Creates a plain object from an UiItem message. Also converts values to other types if specified.
         * @param message UiItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.UiItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UiItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UISwitchGroup. */
    interface IUISwitchGroup {

        /** UISwitchGroup pkgType */
        pkgType?: (number|null);

        /** UISwitchGroup items */
        items?: (pb.IUiItem[]|null);
    }

    /** Represents a UISwitchGroup. */
    class UISwitchGroup implements IUISwitchGroup {

        /**
         * Constructs a new UISwitchGroup.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IUISwitchGroup);

        /** UISwitchGroup pkgType. */
        public pkgType: number;

        /** UISwitchGroup items. */
        public items: pb.IUiItem[];

        /**
         * Creates a new UISwitchGroup instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UISwitchGroup instance
         */
        public static create(properties?: pb.IUISwitchGroup): pb.UISwitchGroup;

        /**
         * Encodes the specified UISwitchGroup message. Does not implicitly {@link pb.UISwitchGroup.verify|verify} messages.
         * @param message UISwitchGroup message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IUISwitchGroup, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified UISwitchGroup message, length delimited. Does not implicitly {@link pb.UISwitchGroup.verify|verify} messages.
         * @param message UISwitchGroup message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IUISwitchGroup, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a UISwitchGroup message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UISwitchGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.UISwitchGroup;

        /**
         * Decodes a UISwitchGroup message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UISwitchGroup
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.UISwitchGroup;

        /**
         * Verifies a UISwitchGroup message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UISwitchGroup message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UISwitchGroup
         */
        public static fromObject(object: { [k: string]: any }): pb.UISwitchGroup;

        /**
         * Creates a plain object from a UISwitchGroup message. Also converts values to other types if specified.
         * @param message UISwitchGroup
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.UISwitchGroup, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UISwitchGroup to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DeleteNotice. */
    interface IDeleteNotice {

        /** DeleteNotice type */
        type?: (pb.NoticeType|null);

        /** DeleteNotice id */
        id?: (number|null);
    }

    /** Represents a DeleteNotice. */
    class DeleteNotice implements IDeleteNotice {

        /**
         * Constructs a new DeleteNotice.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDeleteNotice);

        /** DeleteNotice type. */
        public type: pb.NoticeType;

        /** DeleteNotice id. */
        public id: number;

        /**
         * Creates a new DeleteNotice instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DeleteNotice instance
         */
        public static create(properties?: pb.IDeleteNotice): pb.DeleteNotice;

        /**
         * Encodes the specified DeleteNotice message. Does not implicitly {@link pb.DeleteNotice.verify|verify} messages.
         * @param message DeleteNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDeleteNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DeleteNotice message, length delimited. Does not implicitly {@link pb.DeleteNotice.verify|verify} messages.
         * @param message DeleteNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDeleteNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DeleteNotice message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DeleteNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.DeleteNotice;

        /**
         * Decodes a DeleteNotice message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DeleteNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.DeleteNotice;

        /**
         * Verifies a DeleteNotice message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DeleteNotice message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DeleteNotice
         */
        public static fromObject(object: { [k: string]: any }): pb.DeleteNotice;

        /**
         * Creates a plain object from a DeleteNotice message. Also converts values to other types if specified.
         * @param message DeleteNotice
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.DeleteNotice, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DeleteNotice to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** NoticeType enum. */
    enum NoticeType {
        NoticeType_Null = 0,
        NoticeType_Login = 1,
        NoticeType_Rolling = 2
    }

    /** RollingNoticeType enum. */
    enum RollingNoticeType {
        RNT_Null = 0,
        RNT_System = 1,
        RNT_Game = 2
    }

    /** NoticeState enum. */
    enum NoticeState {
        NS_effectiveTime = 0,
        NS_Open = 1,
        NS_Close = 2
    }

    /** NoticeTarget enum. */
    enum NoticeTarget {
        NT_Url = 0,
        NT_Uuid = 1
    }

    /** OrderState enum. */
    enum OrderState {
        OS_Null = 0,
        OS_Succ = 1,
        OS_Fail = 2,
        OS_Process = 3,
        OS_Audit = 4,
        OS_AuditFail = 5
    }

    /** Properties of a C2SIapGetOrderId. */
    interface IC2SIapGetOrderId {

        /** C2SIapGetOrderId item */
        item?: (pb.IGenOrderItem|null);
    }

    /** Represents a C2SIapGetOrderId. */
    class C2SIapGetOrderId implements IC2SIapGetOrderId {

        /**
         * Constructs a new C2SIapGetOrderId.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SIapGetOrderId);

        /** C2SIapGetOrderId item. */
        public item?: (pb.IGenOrderItem|null);

        /**
         * Creates a new C2SIapGetOrderId instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SIapGetOrderId instance
         */
        public static create(properties?: pb.IC2SIapGetOrderId): pb.C2SIapGetOrderId;

        /**
         * Encodes the specified C2SIapGetOrderId message. Does not implicitly {@link pb.C2SIapGetOrderId.verify|verify} messages.
         * @param message C2SIapGetOrderId message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SIapGetOrderId, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SIapGetOrderId message, length delimited. Does not implicitly {@link pb.C2SIapGetOrderId.verify|verify} messages.
         * @param message C2SIapGetOrderId message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SIapGetOrderId, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SIapGetOrderId message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SIapGetOrderId
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SIapGetOrderId;

        /**
         * Decodes a C2SIapGetOrderId message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SIapGetOrderId
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SIapGetOrderId;

        /**
         * Verifies a C2SIapGetOrderId message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SIapGetOrderId message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SIapGetOrderId
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SIapGetOrderId;

        /**
         * Creates a plain object from a C2SIapGetOrderId message. Also converts values to other types if specified.
         * @param message C2SIapGetOrderId
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SIapGetOrderId, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SIapGetOrderId to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CIapGetOrderId. */
    interface IS2CIapGetOrderId {

        /** S2CIapGetOrderId item */
        item?: (pb.IGenOrderItem|null);

        /** S2CIapGetOrderId result */
        result?: (boolean|null);

        /** S2CIapGetOrderId orderId */
        orderId?: (string|null);

        /** S2CIapGetOrderId param */
        param?: (string|null);
    }

    /** Represents a S2CIapGetOrderId. */
    class S2CIapGetOrderId implements IS2CIapGetOrderId {

        /**
         * Constructs a new S2CIapGetOrderId.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CIapGetOrderId);

        /** S2CIapGetOrderId item. */
        public item?: (pb.IGenOrderItem|null);

        /** S2CIapGetOrderId result. */
        public result: boolean;

        /** S2CIapGetOrderId orderId. */
        public orderId: string;

        /** S2CIapGetOrderId param. */
        public param: string;

        /**
         * Creates a new S2CIapGetOrderId instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CIapGetOrderId instance
         */
        public static create(properties?: pb.IS2CIapGetOrderId): pb.S2CIapGetOrderId;

        /**
         * Encodes the specified S2CIapGetOrderId message. Does not implicitly {@link pb.S2CIapGetOrderId.verify|verify} messages.
         * @param message S2CIapGetOrderId message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CIapGetOrderId, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CIapGetOrderId message, length delimited. Does not implicitly {@link pb.S2CIapGetOrderId.verify|verify} messages.
         * @param message S2CIapGetOrderId message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CIapGetOrderId, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CIapGetOrderId message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CIapGetOrderId
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CIapGetOrderId;

        /**
         * Decodes a S2CIapGetOrderId message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CIapGetOrderId
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CIapGetOrderId;

        /**
         * Verifies a S2CIapGetOrderId message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CIapGetOrderId message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CIapGetOrderId
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CIapGetOrderId;

        /**
         * Creates a plain object from a S2CIapGetOrderId message. Also converts values to other types if specified.
         * @param message S2CIapGetOrderId
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CIapGetOrderId, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CIapGetOrderId to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SIapReceipt. */
    interface IC2SIapReceipt {

        /** C2SIapReceipt iapType */
        iapType?: (number|null);

        /** C2SIapReceipt orderId */
        orderId?: (string|null);

        /** C2SIapReceipt shopId */
        shopId?: (string|null);

        /** C2SIapReceipt param */
        param?: (string|null);
    }

    /** Represents a C2SIapReceipt. */
    class C2SIapReceipt implements IC2SIapReceipt {

        /**
         * Constructs a new C2SIapReceipt.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SIapReceipt);

        /** C2SIapReceipt iapType. */
        public iapType: number;

        /** C2SIapReceipt orderId. */
        public orderId: string;

        /** C2SIapReceipt shopId. */
        public shopId: string;

        /** C2SIapReceipt param. */
        public param: string;

        /**
         * Creates a new C2SIapReceipt instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SIapReceipt instance
         */
        public static create(properties?: pb.IC2SIapReceipt): pb.C2SIapReceipt;

        /**
         * Encodes the specified C2SIapReceipt message. Does not implicitly {@link pb.C2SIapReceipt.verify|verify} messages.
         * @param message C2SIapReceipt message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SIapReceipt, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SIapReceipt message, length delimited. Does not implicitly {@link pb.C2SIapReceipt.verify|verify} messages.
         * @param message C2SIapReceipt message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SIapReceipt, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SIapReceipt message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SIapReceipt
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SIapReceipt;

        /**
         * Decodes a C2SIapReceipt message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SIapReceipt
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SIapReceipt;

        /**
         * Verifies a C2SIapReceipt message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SIapReceipt message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SIapReceipt
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SIapReceipt;

        /**
         * Creates a plain object from a C2SIapReceipt message. Also converts values to other types if specified.
         * @param message C2SIapReceipt
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SIapReceipt, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SIapReceipt to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CIapSucc. */
    interface IS2CIapSucc {

        /** S2CIapSucc iapType */
        iapType?: (number|null);

        /** S2CIapSucc sdkOrderId */
        sdkOrderId?: (string|null);

        /** S2CIapSucc orderId */
        orderId?: (string|null);
    }

    /** Represents a S2CIapSucc. */
    class S2CIapSucc implements IS2CIapSucc {

        /**
         * Constructs a new S2CIapSucc.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CIapSucc);

        /** S2CIapSucc iapType. */
        public iapType: number;

        /** S2CIapSucc sdkOrderId. */
        public sdkOrderId: string;

        /** S2CIapSucc orderId. */
        public orderId: string;

        /**
         * Creates a new S2CIapSucc instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CIapSucc instance
         */
        public static create(properties?: pb.IS2CIapSucc): pb.S2CIapSucc;

        /**
         * Encodes the specified S2CIapSucc message. Does not implicitly {@link pb.S2CIapSucc.verify|verify} messages.
         * @param message S2CIapSucc message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CIapSucc, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CIapSucc message, length delimited. Does not implicitly {@link pb.S2CIapSucc.verify|verify} messages.
         * @param message S2CIapSucc message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CIapSucc, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CIapSucc message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CIapSucc
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CIapSucc;

        /**
         * Decodes a S2CIapSucc message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CIapSucc
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CIapSucc;

        /**
         * Verifies a S2CIapSucc message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CIapSucc message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CIapSucc
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CIapSucc;

        /**
         * Creates a plain object from a S2CIapSucc message. Also converts values to other types if specified.
         * @param message S2CIapSucc
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CIapSucc, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CIapSucc to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GenOrderItem. */
    interface IGenOrderItem {

        /** GenOrderItem iapType */
        iapType?: (number|null);

        /** GenOrderItem shopId */
        shopId?: (string|null);

        /** GenOrderItem param */
        param?: (string|null);
    }

    /** Represents a GenOrderItem. */
    class GenOrderItem implements IGenOrderItem {

        /**
         * Constructs a new GenOrderItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGenOrderItem);

        /** GenOrderItem iapType. */
        public iapType: number;

        /** GenOrderItem shopId. */
        public shopId: string;

        /** GenOrderItem param. */
        public param: string;

        /**
         * Creates a new GenOrderItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GenOrderItem instance
         */
        public static create(properties?: pb.IGenOrderItem): pb.GenOrderItem;

        /**
         * Encodes the specified GenOrderItem message. Does not implicitly {@link pb.GenOrderItem.verify|verify} messages.
         * @param message GenOrderItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGenOrderItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GenOrderItem message, length delimited. Does not implicitly {@link pb.GenOrderItem.verify|verify} messages.
         * @param message GenOrderItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGenOrderItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GenOrderItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GenOrderItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.GenOrderItem;

        /**
         * Decodes a GenOrderItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GenOrderItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.GenOrderItem;

        /**
         * Verifies a GenOrderItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GenOrderItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GenOrderItem
         */
        public static fromObject(object: { [k: string]: any }): pb.GenOrderItem;

        /**
         * Creates a plain object from a GenOrderItem message. Also converts values to other types if specified.
         * @param message GenOrderItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.GenOrderItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GenOrderItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** IapType enum. */
    enum IapType {
        IapType_Null = 0,
        IapType_WeiXin = 1,
        IapType_Apple = 2,
        IapType_Alipay = 3,
        IapType_HuaWei = 4,
        IapType_Oppo = 5,
        IapType_Vivo = 6,
        IapType_WeiXinVp = 7,
        IapType_MI = 8
    }

    /** PkgType enum. */
    enum PkgType {
        PkgType_Test = 0,
        PkgType_Apple = 1,
        PkgType_HuaWei = 2,
        PkgType_WeiXinH5 = 3,
        PkgType_DouYinH5 = 5,
        PkgType_TMallH5 = 6,
        PkgType_Oppo = 7,
        PkgType_Vivo = 8,
        PkgType_NormalH5 = 9,
        PkgType_Normal = 10,
        PkgType_TestH5 = 11,
        PkgType_MI = 12
    }

    /** Properties of a PlayerShowBase. */
    interface IPlayerShowBase {

        /** PlayerShowBase uid */
        uid?: (number|Long|null);

        /** PlayerShowBase guid */
        guid?: (number|Long|null);

        /** PlayerShowBase name */
        name?: (string|null);

        /** PlayerShowBase portraits */
        portraits?: (string|null);

        /** PlayerShowBase portBorder */
        portBorder?: (number|Long|null);
    }

    /** Represents a PlayerShowBase. */
    class PlayerShowBase implements IPlayerShowBase {

        /**
         * Constructs a new PlayerShowBase.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPlayerShowBase);

        /** PlayerShowBase uid. */
        public uid: (number|Long);

        /** PlayerShowBase guid. */
        public guid: (number|Long);

        /** PlayerShowBase name. */
        public name: string;

        /** PlayerShowBase portraits. */
        public portraits: string;

        /** PlayerShowBase portBorder. */
        public portBorder: (number|Long);

        /**
         * Creates a new PlayerShowBase instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlayerShowBase instance
         */
        public static create(properties?: pb.IPlayerShowBase): pb.PlayerShowBase;

        /**
         * Encodes the specified PlayerShowBase message. Does not implicitly {@link pb.PlayerShowBase.verify|verify} messages.
         * @param message PlayerShowBase message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPlayerShowBase, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PlayerShowBase message, length delimited. Does not implicitly {@link pb.PlayerShowBase.verify|verify} messages.
         * @param message PlayerShowBase message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPlayerShowBase, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PlayerShowBase message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerShowBase
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.PlayerShowBase;

        /**
         * Decodes a PlayerShowBase message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlayerShowBase
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.PlayerShowBase;

        /**
         * Verifies a PlayerShowBase message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlayerShowBase message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlayerShowBase
         */
        public static fromObject(object: { [k: string]: any }): pb.PlayerShowBase;

        /**
         * Creates a plain object from a PlayerShowBase message. Also converts values to other types if specified.
         * @param message PlayerShowBase
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.PlayerShowBase, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlayerShowBase to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SHasPoChan. */
    interface IC2SHasPoChan {

        /** C2SHasPoChan gameCat */
        gameCat?: (number|null);

        /** C2SHasPoChan cfgId */
        cfgId?: (number|null);
    }

    /** Represents a C2SHasPoChan. */
    class C2SHasPoChan implements IC2SHasPoChan {

        /**
         * Constructs a new C2SHasPoChan.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SHasPoChan);

        /** C2SHasPoChan gameCat. */
        public gameCat: number;

        /** C2SHasPoChan cfgId. */
        public cfgId: number;

        /**
         * Creates a new C2SHasPoChan instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SHasPoChan instance
         */
        public static create(properties?: pb.IC2SHasPoChan): pb.C2SHasPoChan;

        /**
         * Encodes the specified C2SHasPoChan message. Does not implicitly {@link pb.C2SHasPoChan.verify|verify} messages.
         * @param message C2SHasPoChan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SHasPoChan, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SHasPoChan message, length delimited. Does not implicitly {@link pb.C2SHasPoChan.verify|verify} messages.
         * @param message C2SHasPoChan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SHasPoChan, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SHasPoChan message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SHasPoChan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SHasPoChan;

        /**
         * Decodes a C2SHasPoChan message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SHasPoChan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SHasPoChan;

        /**
         * Verifies a C2SHasPoChan message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SHasPoChan message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SHasPoChan
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SHasPoChan;

        /**
         * Creates a plain object from a C2SHasPoChan message. Also converts values to other types if specified.
         * @param message C2SHasPoChan
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SHasPoChan, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SHasPoChan to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CPoChanMsg. */
    interface IS2CPoChanMsg {

        /** S2CPoChanMsg type */
        type?: (number|null);

        /** S2CPoChanMsg data */
        data?: (pb.IPoChanData[]|null);

        /** S2CPoChanMsg waittime */
        waittime?: (number|null);
    }

    /** Represents a S2CPoChanMsg. */
    class S2CPoChanMsg implements IS2CPoChanMsg {

        /**
         * Constructs a new S2CPoChanMsg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CPoChanMsg);

        /** S2CPoChanMsg type. */
        public type: number;

        /** S2CPoChanMsg data. */
        public data: pb.IPoChanData[];

        /** S2CPoChanMsg waittime. */
        public waittime: number;

        /**
         * Creates a new S2CPoChanMsg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CPoChanMsg instance
         */
        public static create(properties?: pb.IS2CPoChanMsg): pb.S2CPoChanMsg;

        /**
         * Encodes the specified S2CPoChanMsg message. Does not implicitly {@link pb.S2CPoChanMsg.verify|verify} messages.
         * @param message S2CPoChanMsg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CPoChanMsg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CPoChanMsg message, length delimited. Does not implicitly {@link pb.S2CPoChanMsg.verify|verify} messages.
         * @param message S2CPoChanMsg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CPoChanMsg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CPoChanMsg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CPoChanMsg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CPoChanMsg;

        /**
         * Decodes a S2CPoChanMsg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CPoChanMsg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CPoChanMsg;

        /**
         * Verifies a S2CPoChanMsg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CPoChanMsg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CPoChanMsg
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CPoChanMsg;

        /**
         * Creates a plain object from a S2CPoChanMsg message. Also converts values to other types if specified.
         * @param message S2CPoChanMsg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CPoChanMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CPoChanMsg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SPoChanMsg. */
    interface IC2SPoChanMsg {

        /** C2SPoChanMsg type */
        type?: (number|null);

        /** C2SPoChanMsg id */
        id?: (number|null);
    }

    /** Represents a C2SPoChanMsg. */
    class C2SPoChanMsg implements IC2SPoChanMsg {

        /**
         * Constructs a new C2SPoChanMsg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SPoChanMsg);

        /** C2SPoChanMsg type. */
        public type: number;

        /** C2SPoChanMsg id. */
        public id: number;

        /**
         * Creates a new C2SPoChanMsg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SPoChanMsg instance
         */
        public static create(properties?: pb.IC2SPoChanMsg): pb.C2SPoChanMsg;

        /**
         * Encodes the specified C2SPoChanMsg message. Does not implicitly {@link pb.C2SPoChanMsg.verify|verify} messages.
         * @param message C2SPoChanMsg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SPoChanMsg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SPoChanMsg message, length delimited. Does not implicitly {@link pb.C2SPoChanMsg.verify|verify} messages.
         * @param message C2SPoChanMsg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SPoChanMsg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SPoChanMsg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SPoChanMsg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SPoChanMsg;

        /**
         * Decodes a C2SPoChanMsg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SPoChanMsg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SPoChanMsg;

        /**
         * Verifies a C2SPoChanMsg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SPoChanMsg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SPoChanMsg
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SPoChanMsg;

        /**
         * Creates a plain object from a C2SPoChanMsg message. Also converts values to other types if specified.
         * @param message C2SPoChanMsg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SPoChanMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SPoChanMsg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetPoChanReWard. */
    interface IS2CGetPoChanReWard {

        /** S2CGetPoChanReWard errCode */
        errCode?: (number|null);

        /** S2CGetPoChanReWard reward */
        reward?: (pb.IId2Val[]|null);

        /** S2CGetPoChanReWard TuiJianId */
        TuiJianId?: (number|null);

        /** S2CGetPoChanReWard waittime */
        waittime?: (number|null);
    }

    /** Represents a S2CGetPoChanReWard. */
    class S2CGetPoChanReWard implements IS2CGetPoChanReWard {

        /**
         * Constructs a new S2CGetPoChanReWard.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetPoChanReWard);

        /** S2CGetPoChanReWard errCode. */
        public errCode: number;

        /** S2CGetPoChanReWard reward. */
        public reward: pb.IId2Val[];

        /** S2CGetPoChanReWard TuiJianId. */
        public TuiJianId: number;

        /** S2CGetPoChanReWard waittime. */
        public waittime: number;

        /**
         * Creates a new S2CGetPoChanReWard instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetPoChanReWard instance
         */
        public static create(properties?: pb.IS2CGetPoChanReWard): pb.S2CGetPoChanReWard;

        /**
         * Encodes the specified S2CGetPoChanReWard message. Does not implicitly {@link pb.S2CGetPoChanReWard.verify|verify} messages.
         * @param message S2CGetPoChanReWard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetPoChanReWard, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetPoChanReWard message, length delimited. Does not implicitly {@link pb.S2CGetPoChanReWard.verify|verify} messages.
         * @param message S2CGetPoChanReWard message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetPoChanReWard, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetPoChanReWard message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetPoChanReWard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetPoChanReWard;

        /**
         * Decodes a S2CGetPoChanReWard message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetPoChanReWard
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetPoChanReWard;

        /**
         * Verifies a S2CGetPoChanReWard message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetPoChanReWard message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetPoChanReWard
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetPoChanReWard;

        /**
         * Creates a plain object from a S2CGetPoChanReWard message. Also converts values to other types if specified.
         * @param message S2CGetPoChanReWard
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetPoChanReWard, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetPoChanReWard to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SPoChangAdStart. */
    interface IC2SPoChangAdStart {
    }

    /** Represents a C2SPoChangAdStart. */
    class C2SPoChangAdStart implements IC2SPoChangAdStart {

        /**
         * Constructs a new C2SPoChangAdStart.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SPoChangAdStart);

        /**
         * Creates a new C2SPoChangAdStart instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SPoChangAdStart instance
         */
        public static create(properties?: pb.IC2SPoChangAdStart): pb.C2SPoChangAdStart;

        /**
         * Encodes the specified C2SPoChangAdStart message. Does not implicitly {@link pb.C2SPoChangAdStart.verify|verify} messages.
         * @param message C2SPoChangAdStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SPoChangAdStart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SPoChangAdStart message, length delimited. Does not implicitly {@link pb.C2SPoChangAdStart.verify|verify} messages.
         * @param message C2SPoChangAdStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SPoChangAdStart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SPoChangAdStart message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SPoChangAdStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SPoChangAdStart;

        /**
         * Decodes a C2SPoChangAdStart message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SPoChangAdStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SPoChangAdStart;

        /**
         * Verifies a C2SPoChangAdStart message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SPoChangAdStart message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SPoChangAdStart
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SPoChangAdStart;

        /**
         * Creates a plain object from a C2SPoChangAdStart message. Also converts values to other types if specified.
         * @param message C2SPoChangAdStart
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SPoChangAdStart, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SPoChangAdStart to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PoChanData. */
    interface IPoChanData {

        /** PoChanData id */
        id?: (number|null);

        /** PoChanData type */
        type?: (number|null);

        /** PoChanData curCount */
        curCount?: (number|null);

        /** PoChanData dayCount */
        dayCount?: (number|null);

        /** PoChanData inningCount */
        inningCount?: (number|null);

        /** PoChanData cost */
        cost?: (pb.IId2Val|null);

        /** PoChanData reward */
        reward?: (pb.IId2Val[]|null);

        /** PoChanData JinZhongZhao */
        JinZhongZhao?: (number|null);

        /** PoChanData totalCount */
        totalCount?: (number|null);

        /** PoChanData zheKou */
        zheKou?: (string|null);
    }

    /** Represents a PoChanData. */
    class PoChanData implements IPoChanData {

        /**
         * Constructs a new PoChanData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPoChanData);

        /** PoChanData id. */
        public id: number;

        /** PoChanData type. */
        public type: number;

        /** PoChanData curCount. */
        public curCount: number;

        /** PoChanData dayCount. */
        public dayCount: number;

        /** PoChanData inningCount. */
        public inningCount: number;

        /** PoChanData cost. */
        public cost?: (pb.IId2Val|null);

        /** PoChanData reward. */
        public reward: pb.IId2Val[];

        /** PoChanData JinZhongZhao. */
        public JinZhongZhao: number;

        /** PoChanData totalCount. */
        public totalCount: number;

        /** PoChanData zheKou. */
        public zheKou: string;

        /**
         * Creates a new PoChanData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PoChanData instance
         */
        public static create(properties?: pb.IPoChanData): pb.PoChanData;

        /**
         * Encodes the specified PoChanData message. Does not implicitly {@link pb.PoChanData.verify|verify} messages.
         * @param message PoChanData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPoChanData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PoChanData message, length delimited. Does not implicitly {@link pb.PoChanData.verify|verify} messages.
         * @param message PoChanData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPoChanData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PoChanData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PoChanData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.PoChanData;

        /**
         * Decodes a PoChanData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PoChanData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.PoChanData;

        /**
         * Verifies a PoChanData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PoChanData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PoChanData
         */
        public static fromObject(object: { [k: string]: any }): pb.PoChanData;

        /**
         * Creates a plain object from a PoChanData message. Also converts values to other types if specified.
         * @param message PoChanData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.PoChanData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PoChanData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** PoChanRewardType enum. */
    enum PoChanRewardType {
        PoChanReward_Free = 0,
        PoChanReward_Ad = 1,
        PoChanReward_Gem = 2,
        PoChanReward_HuaFeiQuan = 3
    }

    /** PoChanTable enum. */
    enum PoChanTable {
        PoChanTable_None = 0,
        PoChanTable_JJJ = 1,
        PoChanTable_PoChan = 2,
        PoChanTable_TuiJian = 3
    }

    /** Properties of a C2SGetBag. */
    interface IC2SGetBag {
    }

    /** Represents a C2SGetBag. */
    class C2SGetBag implements IC2SGetBag {

        /**
         * Constructs a new C2SGetBag.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetBag);

        /**
         * Creates a new C2SGetBag instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetBag instance
         */
        public static create(properties?: pb.IC2SGetBag): pb.C2SGetBag;

        /**
         * Encodes the specified C2SGetBag message. Does not implicitly {@link pb.C2SGetBag.verify|verify} messages.
         * @param message C2SGetBag message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetBag, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetBag message, length delimited. Does not implicitly {@link pb.C2SGetBag.verify|verify} messages.
         * @param message C2SGetBag message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetBag, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetBag message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetBag
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetBag;

        /**
         * Decodes a C2SGetBag message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetBag
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetBag;

        /**
         * Verifies a C2SGetBag message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetBag message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetBag
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetBag;

        /**
         * Creates a plain object from a C2SGetBag message. Also converts values to other types if specified.
         * @param message C2SGetBag
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetBag, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetBag to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetBag. */
    interface IS2CGetBag {

        /** S2CGetBag items */
        items?: (pb.IPropItem[]|null);
    }

    /** Represents a S2CGetBag. */
    class S2CGetBag implements IS2CGetBag {

        /**
         * Constructs a new S2CGetBag.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetBag);

        /** S2CGetBag items. */
        public items: pb.IPropItem[];

        /**
         * Creates a new S2CGetBag instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetBag instance
         */
        public static create(properties?: pb.IS2CGetBag): pb.S2CGetBag;

        /**
         * Encodes the specified S2CGetBag message. Does not implicitly {@link pb.S2CGetBag.verify|verify} messages.
         * @param message S2CGetBag message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetBag, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetBag message, length delimited. Does not implicitly {@link pb.S2CGetBag.verify|verify} messages.
         * @param message S2CGetBag message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetBag, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetBag message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetBag
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetBag;

        /**
         * Decodes a S2CGetBag message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetBag
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetBag;

        /**
         * Verifies a S2CGetBag message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetBag message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetBag
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetBag;

        /**
         * Creates a plain object from a S2CGetBag message. Also converts values to other types if specified.
         * @param message S2CGetBag
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetBag, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetBag to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SUseProp. */
    interface IC2SUseProp {

        /** C2SUseProp id */
        id?: (number|Long|null);

        /** C2SUseProp params */
        params?: ((number|Long)[]|null);
    }

    /** Represents a C2SUseProp. */
    class C2SUseProp implements IC2SUseProp {

        /**
         * Constructs a new C2SUseProp.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SUseProp);

        /** C2SUseProp id. */
        public id: (number|Long);

        /** C2SUseProp params. */
        public params: (number|Long)[];

        /**
         * Creates a new C2SUseProp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SUseProp instance
         */
        public static create(properties?: pb.IC2SUseProp): pb.C2SUseProp;

        /**
         * Encodes the specified C2SUseProp message. Does not implicitly {@link pb.C2SUseProp.verify|verify} messages.
         * @param message C2SUseProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SUseProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SUseProp message, length delimited. Does not implicitly {@link pb.C2SUseProp.verify|verify} messages.
         * @param message C2SUseProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SUseProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SUseProp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SUseProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SUseProp;

        /**
         * Decodes a C2SUseProp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SUseProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SUseProp;

        /**
         * Verifies a C2SUseProp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SUseProp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SUseProp
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SUseProp;

        /**
         * Creates a plain object from a C2SUseProp message. Also converts values to other types if specified.
         * @param message C2SUseProp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SUseProp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SUseProp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CUseProp. */
    interface IS2CUseProp {

        /** S2CUseProp result */
        result?: (number|null);

        /** S2CUseProp id */
        id?: (number|Long|null);

        /** S2CUseProp cfgId */
        cfgId?: (number|null);

        /** S2CUseProp name */
        name?: (string|null);
    }

    /** Represents a S2CUseProp. */
    class S2CUseProp implements IS2CUseProp {

        /**
         * Constructs a new S2CUseProp.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CUseProp);

        /** S2CUseProp result. */
        public result: number;

        /** S2CUseProp id. */
        public id: (number|Long);

        /** S2CUseProp cfgId. */
        public cfgId: number;

        /** S2CUseProp name. */
        public name: string;

        /**
         * Creates a new S2CUseProp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CUseProp instance
         */
        public static create(properties?: pb.IS2CUseProp): pb.S2CUseProp;

        /**
         * Encodes the specified S2CUseProp message. Does not implicitly {@link pb.S2CUseProp.verify|verify} messages.
         * @param message S2CUseProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CUseProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CUseProp message, length delimited. Does not implicitly {@link pb.S2CUseProp.verify|verify} messages.
         * @param message S2CUseProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CUseProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CUseProp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CUseProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CUseProp;

        /**
         * Decodes a S2CUseProp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CUseProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CUseProp;

        /**
         * Verifies a S2CUseProp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CUseProp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CUseProp
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CUseProp;

        /**
         * Creates a plain object from a S2CUseProp message. Also converts values to other types if specified.
         * @param message S2CUseProp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CUseProp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CUseProp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CPropUpdate. */
    interface IS2CPropUpdate {

        /** S2CPropUpdate item */
        item?: (pb.IPropItem|null);
    }

    /** Represents a S2CPropUpdate. */
    class S2CPropUpdate implements IS2CPropUpdate {

        /**
         * Constructs a new S2CPropUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CPropUpdate);

        /** S2CPropUpdate item. */
        public item?: (pb.IPropItem|null);

        /**
         * Creates a new S2CPropUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CPropUpdate instance
         */
        public static create(properties?: pb.IS2CPropUpdate): pb.S2CPropUpdate;

        /**
         * Encodes the specified S2CPropUpdate message. Does not implicitly {@link pb.S2CPropUpdate.verify|verify} messages.
         * @param message S2CPropUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CPropUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CPropUpdate message, length delimited. Does not implicitly {@link pb.S2CPropUpdate.verify|verify} messages.
         * @param message S2CPropUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CPropUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CPropUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CPropUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CPropUpdate;

        /**
         * Decodes a S2CPropUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CPropUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CPropUpdate;

        /**
         * Verifies a S2CPropUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CPropUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CPropUpdate
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CPropUpdate;

        /**
         * Creates a plain object from a S2CPropUpdate message. Also converts values to other types if specified.
         * @param message S2CPropUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CPropUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CPropUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDelProp. */
    interface IS2CDelProp {

        /** S2CDelProp id */
        id?: (number|Long|null);
    }

    /** Represents a S2CDelProp. */
    class S2CDelProp implements IS2CDelProp {

        /**
         * Constructs a new S2CDelProp.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDelProp);

        /** S2CDelProp id. */
        public id: (number|Long);

        /**
         * Creates a new S2CDelProp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDelProp instance
         */
        public static create(properties?: pb.IS2CDelProp): pb.S2CDelProp;

        /**
         * Encodes the specified S2CDelProp message. Does not implicitly {@link pb.S2CDelProp.verify|verify} messages.
         * @param message S2CDelProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDelProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDelProp message, length delimited. Does not implicitly {@link pb.S2CDelProp.verify|verify} messages.
         * @param message S2CDelProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDelProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDelProp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDelProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDelProp;

        /**
         * Decodes a S2CDelProp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDelProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDelProp;

        /**
         * Verifies a S2CDelProp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDelProp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDelProp
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDelProp;

        /**
         * Creates a plain object from a S2CDelProp message. Also converts values to other types if specified.
         * @param message S2CDelProp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDelProp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDelProp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SAutoUseProp. */
    interface IC2SAutoUseProp {

        /** C2SAutoUseProp id */
        id?: (number|null);
    }

    /** Represents a C2SAutoUseProp. */
    class C2SAutoUseProp implements IC2SAutoUseProp {

        /**
         * Constructs a new C2SAutoUseProp.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SAutoUseProp);

        /** C2SAutoUseProp id. */
        public id: number;

        /**
         * Creates a new C2SAutoUseProp instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SAutoUseProp instance
         */
        public static create(properties?: pb.IC2SAutoUseProp): pb.C2SAutoUseProp;

        /**
         * Encodes the specified C2SAutoUseProp message. Does not implicitly {@link pb.C2SAutoUseProp.verify|verify} messages.
         * @param message C2SAutoUseProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SAutoUseProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SAutoUseProp message, length delimited. Does not implicitly {@link pb.C2SAutoUseProp.verify|verify} messages.
         * @param message C2SAutoUseProp message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SAutoUseProp, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SAutoUseProp message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SAutoUseProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SAutoUseProp;

        /**
         * Decodes a C2SAutoUseProp message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SAutoUseProp
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SAutoUseProp;

        /**
         * Verifies a C2SAutoUseProp message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SAutoUseProp message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SAutoUseProp
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SAutoUseProp;

        /**
         * Creates a plain object from a C2SAutoUseProp message. Also converts values to other types if specified.
         * @param message C2SAutoUseProp
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SAutoUseProp, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SAutoUseProp to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SPropTableState. */
    interface IC2SPropTableState {

        /** C2SPropTableState open */
        open?: (number|null);
    }

    /** Represents a C2SPropTableState. */
    class C2SPropTableState implements IC2SPropTableState {

        /**
         * Constructs a new C2SPropTableState.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SPropTableState);

        /** C2SPropTableState open. */
        public open: number;

        /**
         * Creates a new C2SPropTableState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SPropTableState instance
         */
        public static create(properties?: pb.IC2SPropTableState): pb.C2SPropTableState;

        /**
         * Encodes the specified C2SPropTableState message. Does not implicitly {@link pb.C2SPropTableState.verify|verify} messages.
         * @param message C2SPropTableState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SPropTableState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SPropTableState message, length delimited. Does not implicitly {@link pb.C2SPropTableState.verify|verify} messages.
         * @param message C2SPropTableState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SPropTableState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SPropTableState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SPropTableState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SPropTableState;

        /**
         * Decodes a C2SPropTableState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SPropTableState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SPropTableState;

        /**
         * Verifies a C2SPropTableState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SPropTableState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SPropTableState
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SPropTableState;

        /**
         * Creates a plain object from a C2SPropTableState message. Also converts values to other types if specified.
         * @param message C2SPropTableState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SPropTableState, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SPropTableState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CPropTableState. */
    interface IS2CPropTableState {

        /** S2CPropTableState open */
        open?: (number|null);
    }

    /** Represents a S2CPropTableState. */
    class S2CPropTableState implements IS2CPropTableState {

        /**
         * Constructs a new S2CPropTableState.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CPropTableState);

        /** S2CPropTableState open. */
        public open: number;

        /**
         * Creates a new S2CPropTableState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CPropTableState instance
         */
        public static create(properties?: pb.IS2CPropTableState): pb.S2CPropTableState;

        /**
         * Encodes the specified S2CPropTableState message. Does not implicitly {@link pb.S2CPropTableState.verify|verify} messages.
         * @param message S2CPropTableState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CPropTableState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CPropTableState message, length delimited. Does not implicitly {@link pb.S2CPropTableState.verify|verify} messages.
         * @param message S2CPropTableState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CPropTableState, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CPropTableState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CPropTableState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CPropTableState;

        /**
         * Decodes a S2CPropTableState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CPropTableState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CPropTableState;

        /**
         * Verifies a S2CPropTableState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CPropTableState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CPropTableState
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CPropTableState;

        /**
         * Creates a plain object from a S2CPropTableState message. Also converts values to other types if specified.
         * @param message S2CPropTableState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CPropTableState, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CPropTableState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetZb. */
    interface IC2SGetZb {
    }

    /** Represents a C2SGetZb. */
    class C2SGetZb implements IC2SGetZb {

        /**
         * Constructs a new C2SGetZb.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetZb);

        /**
         * Creates a new C2SGetZb instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetZb instance
         */
        public static create(properties?: pb.IC2SGetZb): pb.C2SGetZb;

        /**
         * Encodes the specified C2SGetZb message. Does not implicitly {@link pb.C2SGetZb.verify|verify} messages.
         * @param message C2SGetZb message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetZb, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetZb message, length delimited. Does not implicitly {@link pb.C2SGetZb.verify|verify} messages.
         * @param message C2SGetZb message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetZb, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetZb message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetZb
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetZb;

        /**
         * Decodes a C2SGetZb message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetZb
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetZb;

        /**
         * Verifies a C2SGetZb message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetZb message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetZb
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetZb;

        /**
         * Creates a plain object from a C2SGetZb message. Also converts values to other types if specified.
         * @param message C2SGetZb
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetZb, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetZb to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetZb. */
    interface IS2CGetZb {

        /** S2CGetZb items */
        items?: (pb.IPropItem[]|null);
    }

    /** Represents a S2CGetZb. */
    class S2CGetZb implements IS2CGetZb {

        /**
         * Constructs a new S2CGetZb.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetZb);

        /** S2CGetZb items. */
        public items: pb.IPropItem[];

        /**
         * Creates a new S2CGetZb instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetZb instance
         */
        public static create(properties?: pb.IS2CGetZb): pb.S2CGetZb;

        /**
         * Encodes the specified S2CGetZb message. Does not implicitly {@link pb.S2CGetZb.verify|verify} messages.
         * @param message S2CGetZb message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetZb, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetZb message, length delimited. Does not implicitly {@link pb.S2CGetZb.verify|verify} messages.
         * @param message S2CGetZb message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetZb, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetZb message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetZb
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetZb;

        /**
         * Decodes a S2CGetZb message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetZb
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetZb;

        /**
         * Verifies a S2CGetZb message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetZb message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetZb
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetZb;

        /**
         * Creates a plain object from a S2CGetZb message. Also converts values to other types if specified.
         * @param message S2CGetZb
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetZb, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetZb to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PropItem. */
    interface IPropItem {

        /** PropItem id */
        id?: (number|Long|null);

        /** PropItem uid */
        uid?: (number|Long|null);

        /** PropItem item */
        item?: (pb.IItem|null);

        /** PropItem quantity */
        quantity?: (number|null);

        /** PropItem createTime */
        createTime?: (number|Long|null);

        /** PropItem expireTime */
        expireTime?: (number|Long|null);
    }

    /** Represents a PropItem. */
    class PropItem implements IPropItem {

        /**
         * Constructs a new PropItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPropItem);

        /** PropItem id. */
        public id: (number|Long);

        /** PropItem uid. */
        public uid: (number|Long);

        /** PropItem item. */
        public item?: (pb.IItem|null);

        /** PropItem quantity. */
        public quantity: number;

        /** PropItem createTime. */
        public createTime: (number|Long);

        /** PropItem expireTime. */
        public expireTime: (number|Long);

        /**
         * Creates a new PropItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PropItem instance
         */
        public static create(properties?: pb.IPropItem): pb.PropItem;

        /**
         * Encodes the specified PropItem message. Does not implicitly {@link pb.PropItem.verify|verify} messages.
         * @param message PropItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPropItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PropItem message, length delimited. Does not implicitly {@link pb.PropItem.verify|verify} messages.
         * @param message PropItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPropItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PropItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PropItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.PropItem;

        /**
         * Decodes a PropItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PropItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.PropItem;

        /**
         * Verifies a PropItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PropItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PropItem
         */
        public static fromObject(object: { [k: string]: any }): pb.PropItem;

        /**
         * Creates a plain object from a PropItem message. Also converts values to other types if specified.
         * @param message PropItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.PropItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PropItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** PropType enum. */
    enum PropType {
        PropType_Null = 0,
        PropType_Currency = 1,
        PropType_ChatEmoji = 2,
        PropType_ChatAni = 3,
        PropType_PortFrame = 10,
        PropType_Desk = 11,
        PropType_HongZhongCard = 100,
        PropType_SilverSwapCard = 101,
        PropType_GoldSwapCard = 102,
        PropType_SuperSwapCard = 103,
        PropType_FixColorCard = 104,
        PropType_HaiDiLaoYue = 105,
        PropType_YanQueCard = 106,
        PropType_RuYiCard = 107,
        PropType_SwapColorCard = 108,
        PropType_PoFengCard = 114,
        PropType_JiPaiQi = 115,
        PropType_FinalCard = 109,
        PropType_BombCard = 110,
        PropType_RecordCard = 111,
        PropType_ViewOther = 112,
        PropType_SuperDouble = 113
    }

    /** Properties of a C2SRaces. */
    interface IC2SRaces {
    }

    /** Represents a C2SRaces. */
    class C2SRaces implements IC2SRaces {

        /**
         * Constructs a new C2SRaces.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SRaces);

        /**
         * Creates a new C2SRaces instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SRaces instance
         */
        public static create(properties?: pb.IC2SRaces): pb.C2SRaces;

        /**
         * Encodes the specified C2SRaces message. Does not implicitly {@link pb.C2SRaces.verify|verify} messages.
         * @param message C2SRaces message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SRaces, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SRaces message, length delimited. Does not implicitly {@link pb.C2SRaces.verify|verify} messages.
         * @param message C2SRaces message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SRaces, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SRaces message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SRaces
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SRaces;

        /**
         * Decodes a C2SRaces message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SRaces
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SRaces;

        /**
         * Verifies a C2SRaces message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SRaces message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SRaces
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SRaces;

        /**
         * Creates a plain object from a C2SRaces message. Also converts values to other types if specified.
         * @param message C2SRaces
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SRaces, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SRaces to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CRaces. */
    interface IS2CRaces {

        /** S2CRaces items */
        items?: (pb.IRaceShowItem[]|null);
    }

    /** Represents a S2CRaces. */
    class S2CRaces implements IS2CRaces {

        /**
         * Constructs a new S2CRaces.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CRaces);

        /** S2CRaces items. */
        public items: pb.IRaceShowItem[];

        /**
         * Creates a new S2CRaces instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CRaces instance
         */
        public static create(properties?: pb.IS2CRaces): pb.S2CRaces;

        /**
         * Encodes the specified S2CRaces message. Does not implicitly {@link pb.S2CRaces.verify|verify} messages.
         * @param message S2CRaces message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CRaces, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CRaces message, length delimited. Does not implicitly {@link pb.S2CRaces.verify|verify} messages.
         * @param message S2CRaces message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CRaces, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CRaces message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CRaces
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CRaces;

        /**
         * Decodes a S2CRaces message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CRaces
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CRaces;

        /**
         * Verifies a S2CRaces message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CRaces message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CRaces
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CRaces;

        /**
         * Creates a plain object from a S2CRaces message. Also converts values to other types if specified.
         * @param message S2CRaces
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CRaces, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CRaces to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CCurRace. */
    interface IS2CCurRace {

        /** S2CCurRace item */
        item?: (pb.IRaceShowItem|null);
    }

    /** Represents a S2CCurRace. */
    class S2CCurRace implements IS2CCurRace {

        /**
         * Constructs a new S2CCurRace.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CCurRace);

        /** S2CCurRace item. */
        public item?: (pb.IRaceShowItem|null);

        /**
         * Creates a new S2CCurRace instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CCurRace instance
         */
        public static create(properties?: pb.IS2CCurRace): pb.S2CCurRace;

        /**
         * Encodes the specified S2CCurRace message. Does not implicitly {@link pb.S2CCurRace.verify|verify} messages.
         * @param message S2CCurRace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CCurRace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CCurRace message, length delimited. Does not implicitly {@link pb.S2CCurRace.verify|verify} messages.
         * @param message S2CCurRace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CCurRace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CCurRace message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CCurRace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CCurRace;

        /**
         * Decodes a S2CCurRace message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CCurRace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CCurRace;

        /**
         * Verifies a S2CCurRace message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CCurRace message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CCurRace
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CCurRace;

        /**
         * Creates a plain object from a S2CCurRace message. Also converts values to other types if specified.
         * @param message S2CCurRace
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CCurRace, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CCurRace to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SEnrollRace. */
    interface IC2SEnrollRace {

        /** C2SEnrollRace id */
        id?: (number|Long|null);

        /** C2SEnrollRace type */
        type?: (number|null);

        /** C2SEnrollRace inviteCode */
        inviteCode?: (string|null);
    }

    /** Represents a C2SEnrollRace. */
    class C2SEnrollRace implements IC2SEnrollRace {

        /**
         * Constructs a new C2SEnrollRace.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SEnrollRace);

        /** C2SEnrollRace id. */
        public id: (number|Long);

        /** C2SEnrollRace type. */
        public type: number;

        /** C2SEnrollRace inviteCode. */
        public inviteCode: string;

        /**
         * Creates a new C2SEnrollRace instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SEnrollRace instance
         */
        public static create(properties?: pb.IC2SEnrollRace): pb.C2SEnrollRace;

        /**
         * Encodes the specified C2SEnrollRace message. Does not implicitly {@link pb.C2SEnrollRace.verify|verify} messages.
         * @param message C2SEnrollRace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SEnrollRace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SEnrollRace message, length delimited. Does not implicitly {@link pb.C2SEnrollRace.verify|verify} messages.
         * @param message C2SEnrollRace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SEnrollRace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SEnrollRace message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SEnrollRace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SEnrollRace;

        /**
         * Decodes a C2SEnrollRace message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SEnrollRace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SEnrollRace;

        /**
         * Verifies a C2SEnrollRace message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SEnrollRace message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SEnrollRace
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SEnrollRace;

        /**
         * Creates a plain object from a C2SEnrollRace message. Also converts values to other types if specified.
         * @param message C2SEnrollRace
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SEnrollRace, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SEnrollRace to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CEnrollRace. */
    interface IS2CEnrollRace {

        /** S2CEnrollRace id */
        id?: (number|Long|null);

        /** S2CEnrollRace ec */
        ec?: (number|null);
    }

    /** Represents a S2CEnrollRace. */
    class S2CEnrollRace implements IS2CEnrollRace {

        /**
         * Constructs a new S2CEnrollRace.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CEnrollRace);

        /** S2CEnrollRace id. */
        public id: (number|Long);

        /** S2CEnrollRace ec. */
        public ec: number;

        /**
         * Creates a new S2CEnrollRace instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CEnrollRace instance
         */
        public static create(properties?: pb.IS2CEnrollRace): pb.S2CEnrollRace;

        /**
         * Encodes the specified S2CEnrollRace message. Does not implicitly {@link pb.S2CEnrollRace.verify|verify} messages.
         * @param message S2CEnrollRace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CEnrollRace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CEnrollRace message, length delimited. Does not implicitly {@link pb.S2CEnrollRace.verify|verify} messages.
         * @param message S2CEnrollRace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CEnrollRace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CEnrollRace message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CEnrollRace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CEnrollRace;

        /**
         * Decodes a S2CEnrollRace message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CEnrollRace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CEnrollRace;

        /**
         * Verifies a S2CEnrollRace message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CEnrollRace message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CEnrollRace
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CEnrollRace;

        /**
         * Creates a plain object from a S2CEnrollRace message. Also converts values to other types if specified.
         * @param message S2CEnrollRace
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CEnrollRace, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CEnrollRace to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SUndoEnrollRace. */
    interface IC2SUndoEnrollRace {

        /** C2SUndoEnrollRace id */
        id?: (number|Long|null);
    }

    /** Represents a C2SUndoEnrollRace. */
    class C2SUndoEnrollRace implements IC2SUndoEnrollRace {

        /**
         * Constructs a new C2SUndoEnrollRace.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SUndoEnrollRace);

        /** C2SUndoEnrollRace id. */
        public id: (number|Long);

        /**
         * Creates a new C2SUndoEnrollRace instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SUndoEnrollRace instance
         */
        public static create(properties?: pb.IC2SUndoEnrollRace): pb.C2SUndoEnrollRace;

        /**
         * Encodes the specified C2SUndoEnrollRace message. Does not implicitly {@link pb.C2SUndoEnrollRace.verify|verify} messages.
         * @param message C2SUndoEnrollRace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SUndoEnrollRace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SUndoEnrollRace message, length delimited. Does not implicitly {@link pb.C2SUndoEnrollRace.verify|verify} messages.
         * @param message C2SUndoEnrollRace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SUndoEnrollRace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SUndoEnrollRace message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SUndoEnrollRace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SUndoEnrollRace;

        /**
         * Decodes a C2SUndoEnrollRace message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SUndoEnrollRace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SUndoEnrollRace;

        /**
         * Verifies a C2SUndoEnrollRace message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SUndoEnrollRace message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SUndoEnrollRace
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SUndoEnrollRace;

        /**
         * Creates a plain object from a C2SUndoEnrollRace message. Also converts values to other types if specified.
         * @param message C2SUndoEnrollRace
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SUndoEnrollRace, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SUndoEnrollRace to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CUndoEnrollRace. */
    interface IS2CUndoEnrollRace {

        /** S2CUndoEnrollRace id */
        id?: (number|Long|null);

        /** S2CUndoEnrollRace result */
        result?: (boolean|null);
    }

    /** Represents a S2CUndoEnrollRace. */
    class S2CUndoEnrollRace implements IS2CUndoEnrollRace {

        /**
         * Constructs a new S2CUndoEnrollRace.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CUndoEnrollRace);

        /** S2CUndoEnrollRace id. */
        public id: (number|Long);

        /** S2CUndoEnrollRace result. */
        public result: boolean;

        /**
         * Creates a new S2CUndoEnrollRace instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CUndoEnrollRace instance
         */
        public static create(properties?: pb.IS2CUndoEnrollRace): pb.S2CUndoEnrollRace;

        /**
         * Encodes the specified S2CUndoEnrollRace message. Does not implicitly {@link pb.S2CUndoEnrollRace.verify|verify} messages.
         * @param message S2CUndoEnrollRace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CUndoEnrollRace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CUndoEnrollRace message, length delimited. Does not implicitly {@link pb.S2CUndoEnrollRace.verify|verify} messages.
         * @param message S2CUndoEnrollRace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CUndoEnrollRace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CUndoEnrollRace message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CUndoEnrollRace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CUndoEnrollRace;

        /**
         * Decodes a S2CUndoEnrollRace message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CUndoEnrollRace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CUndoEnrollRace;

        /**
         * Verifies a S2CUndoEnrollRace message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CUndoEnrollRace message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CUndoEnrollRace
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CUndoEnrollRace;

        /**
         * Creates a plain object from a S2CUndoEnrollRace message. Also converts values to other types if specified.
         * @param message S2CUndoEnrollRace
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CUndoEnrollRace, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CUndoEnrollRace to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SRaceChampionship. */
    interface IC2SRaceChampionship {
    }

    /** Represents a C2SRaceChampionship. */
    class C2SRaceChampionship implements IC2SRaceChampionship {

        /**
         * Constructs a new C2SRaceChampionship.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SRaceChampionship);

        /**
         * Creates a new C2SRaceChampionship instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SRaceChampionship instance
         */
        public static create(properties?: pb.IC2SRaceChampionship): pb.C2SRaceChampionship;

        /**
         * Encodes the specified C2SRaceChampionship message. Does not implicitly {@link pb.C2SRaceChampionship.verify|verify} messages.
         * @param message C2SRaceChampionship message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SRaceChampionship, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SRaceChampionship message, length delimited. Does not implicitly {@link pb.C2SRaceChampionship.verify|verify} messages.
         * @param message C2SRaceChampionship message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SRaceChampionship, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SRaceChampionship message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SRaceChampionship
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SRaceChampionship;

        /**
         * Decodes a C2SRaceChampionship message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SRaceChampionship
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SRaceChampionship;

        /**
         * Verifies a C2SRaceChampionship message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SRaceChampionship message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SRaceChampionship
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SRaceChampionship;

        /**
         * Creates a plain object from a C2SRaceChampionship message. Also converts values to other types if specified.
         * @param message C2SRaceChampionship
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SRaceChampionship, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SRaceChampionship to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CRaceChampionship. */
    interface IS2CRaceChampionship {

        /** S2CRaceChampionship items */
        items?: (pb.IChampionItem[]|null);
    }

    /** Represents a S2CRaceChampionship. */
    class S2CRaceChampionship implements IS2CRaceChampionship {

        /**
         * Constructs a new S2CRaceChampionship.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CRaceChampionship);

        /** S2CRaceChampionship items. */
        public items: pb.IChampionItem[];

        /**
         * Creates a new S2CRaceChampionship instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CRaceChampionship instance
         */
        public static create(properties?: pb.IS2CRaceChampionship): pb.S2CRaceChampionship;

        /**
         * Encodes the specified S2CRaceChampionship message. Does not implicitly {@link pb.S2CRaceChampionship.verify|verify} messages.
         * @param message S2CRaceChampionship message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CRaceChampionship, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CRaceChampionship message, length delimited. Does not implicitly {@link pb.S2CRaceChampionship.verify|verify} messages.
         * @param message S2CRaceChampionship message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CRaceChampionship, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CRaceChampionship message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CRaceChampionship
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CRaceChampionship;

        /**
         * Decodes a S2CRaceChampionship message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CRaceChampionship
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CRaceChampionship;

        /**
         * Verifies a S2CRaceChampionship message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CRaceChampionship message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CRaceChampionship
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CRaceChampionship;

        /**
         * Creates a plain object from a S2CRaceChampionship message. Also converts values to other types if specified.
         * @param message S2CRaceChampionship
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CRaceChampionship, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CRaceChampionship to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CRaceNewChampionship. */
    interface IS2CRaceNewChampionship {

        /** S2CRaceNewChampionship item */
        item?: (pb.IChampionItem|null);
    }

    /** Represents a S2CRaceNewChampionship. */
    class S2CRaceNewChampionship implements IS2CRaceNewChampionship {

        /**
         * Constructs a new S2CRaceNewChampionship.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CRaceNewChampionship);

        /** S2CRaceNewChampionship item. */
        public item?: (pb.IChampionItem|null);

        /**
         * Creates a new S2CRaceNewChampionship instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CRaceNewChampionship instance
         */
        public static create(properties?: pb.IS2CRaceNewChampionship): pb.S2CRaceNewChampionship;

        /**
         * Encodes the specified S2CRaceNewChampionship message. Does not implicitly {@link pb.S2CRaceNewChampionship.verify|verify} messages.
         * @param message S2CRaceNewChampionship message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CRaceNewChampionship, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CRaceNewChampionship message, length delimited. Does not implicitly {@link pb.S2CRaceNewChampionship.verify|verify} messages.
         * @param message S2CRaceNewChampionship message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CRaceNewChampionship, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CRaceNewChampionship message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CRaceNewChampionship
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CRaceNewChampionship;

        /**
         * Decodes a S2CRaceNewChampionship message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CRaceNewChampionship
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CRaceNewChampionship;

        /**
         * Verifies a S2CRaceNewChampionship message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CRaceNewChampionship message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CRaceNewChampionship
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CRaceNewChampionship;

        /**
         * Creates a plain object from a S2CRaceNewChampionship message. Also converts values to other types if specified.
         * @param message S2CRaceNewChampionship
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CRaceNewChampionship, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CRaceNewChampionship to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SMyRaceReward. */
    interface IC2SMyRaceReward {
    }

    /** Represents a C2SMyRaceReward. */
    class C2SMyRaceReward implements IC2SMyRaceReward {

        /**
         * Constructs a new C2SMyRaceReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SMyRaceReward);

        /**
         * Creates a new C2SMyRaceReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SMyRaceReward instance
         */
        public static create(properties?: pb.IC2SMyRaceReward): pb.C2SMyRaceReward;

        /**
         * Encodes the specified C2SMyRaceReward message. Does not implicitly {@link pb.C2SMyRaceReward.verify|verify} messages.
         * @param message C2SMyRaceReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SMyRaceReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SMyRaceReward message, length delimited. Does not implicitly {@link pb.C2SMyRaceReward.verify|verify} messages.
         * @param message C2SMyRaceReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SMyRaceReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SMyRaceReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SMyRaceReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SMyRaceReward;

        /**
         * Decodes a C2SMyRaceReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SMyRaceReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SMyRaceReward;

        /**
         * Verifies a C2SMyRaceReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SMyRaceReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SMyRaceReward
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SMyRaceReward;

        /**
         * Creates a plain object from a C2SMyRaceReward message. Also converts values to other types if specified.
         * @param message C2SMyRaceReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SMyRaceReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SMyRaceReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MyRaceReward. */
    interface IMyRaceReward {

        /** MyRaceReward raceName */
        raceName?: (string|null);

        /** MyRaceReward time */
        time?: (number|Long|null);

        /** MyRaceReward rank */
        rank?: (number|null);

        /** MyRaceReward reward */
        reward?: (pb.IItem|null);
    }

    /** Represents a MyRaceReward. */
    class MyRaceReward implements IMyRaceReward {

        /**
         * Constructs a new MyRaceReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IMyRaceReward);

        /** MyRaceReward raceName. */
        public raceName: string;

        /** MyRaceReward time. */
        public time: (number|Long);

        /** MyRaceReward rank. */
        public rank: number;

        /** MyRaceReward reward. */
        public reward?: (pb.IItem|null);

        /**
         * Creates a new MyRaceReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MyRaceReward instance
         */
        public static create(properties?: pb.IMyRaceReward): pb.MyRaceReward;

        /**
         * Encodes the specified MyRaceReward message. Does not implicitly {@link pb.MyRaceReward.verify|verify} messages.
         * @param message MyRaceReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IMyRaceReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MyRaceReward message, length delimited. Does not implicitly {@link pb.MyRaceReward.verify|verify} messages.
         * @param message MyRaceReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IMyRaceReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MyRaceReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MyRaceReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.MyRaceReward;

        /**
         * Decodes a MyRaceReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MyRaceReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.MyRaceReward;

        /**
         * Verifies a MyRaceReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MyRaceReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MyRaceReward
         */
        public static fromObject(object: { [k: string]: any }): pb.MyRaceReward;

        /**
         * Creates a plain object from a MyRaceReward message. Also converts values to other types if specified.
         * @param message MyRaceReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.MyRaceReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MyRaceReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMyRaceReward. */
    interface IS2CMyRaceReward {

        /** S2CMyRaceReward items */
        items?: (pb.IMyRaceReward[]|null);
    }

    /** Represents a S2CMyRaceReward. */
    class S2CMyRaceReward implements IS2CMyRaceReward {

        /**
         * Constructs a new S2CMyRaceReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMyRaceReward);

        /** S2CMyRaceReward items. */
        public items: pb.IMyRaceReward[];

        /**
         * Creates a new S2CMyRaceReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMyRaceReward instance
         */
        public static create(properties?: pb.IS2CMyRaceReward): pb.S2CMyRaceReward;

        /**
         * Encodes the specified S2CMyRaceReward message. Does not implicitly {@link pb.S2CMyRaceReward.verify|verify} messages.
         * @param message S2CMyRaceReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMyRaceReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMyRaceReward message, length delimited. Does not implicitly {@link pb.S2CMyRaceReward.verify|verify} messages.
         * @param message S2CMyRaceReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMyRaceReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMyRaceReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMyRaceReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMyRaceReward;

        /**
         * Decodes a S2CMyRaceReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMyRaceReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMyRaceReward;

        /**
         * Verifies a S2CMyRaceReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMyRaceReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMyRaceReward
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMyRaceReward;

        /**
         * Creates a plain object from a S2CMyRaceReward message. Also converts values to other types if specified.
         * @param message S2CMyRaceReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMyRaceReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMyRaceReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CPlayRaceNotice. */
    interface IS2CPlayRaceNotice {

        /** S2CPlayRaceNotice notice */
        notice?: (pb.IPlayRaceNotice|null);
    }

    /** Represents a S2CPlayRaceNotice. */
    class S2CPlayRaceNotice implements IS2CPlayRaceNotice {

        /**
         * Constructs a new S2CPlayRaceNotice.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CPlayRaceNotice);

        /** S2CPlayRaceNotice notice. */
        public notice?: (pb.IPlayRaceNotice|null);

        /**
         * Creates a new S2CPlayRaceNotice instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CPlayRaceNotice instance
         */
        public static create(properties?: pb.IS2CPlayRaceNotice): pb.S2CPlayRaceNotice;

        /**
         * Encodes the specified S2CPlayRaceNotice message. Does not implicitly {@link pb.S2CPlayRaceNotice.verify|verify} messages.
         * @param message S2CPlayRaceNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CPlayRaceNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CPlayRaceNotice message, length delimited. Does not implicitly {@link pb.S2CPlayRaceNotice.verify|verify} messages.
         * @param message S2CPlayRaceNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CPlayRaceNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CPlayRaceNotice message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CPlayRaceNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CPlayRaceNotice;

        /**
         * Decodes a S2CPlayRaceNotice message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CPlayRaceNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CPlayRaceNotice;

        /**
         * Verifies a S2CPlayRaceNotice message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CPlayRaceNotice message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CPlayRaceNotice
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CPlayRaceNotice;

        /**
         * Creates a plain object from a S2CPlayRaceNotice message. Also converts values to other types if specified.
         * @param message S2CPlayRaceNotice
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CPlayRaceNotice, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CPlayRaceNotice to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SWaitRacePlay. */
    interface IC2SWaitRacePlay {

        /** C2SWaitRacePlay id */
        id?: (number|Long|null);
    }

    /** Represents a C2SWaitRacePlay. */
    class C2SWaitRacePlay implements IC2SWaitRacePlay {

        /**
         * Constructs a new C2SWaitRacePlay.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SWaitRacePlay);

        /** C2SWaitRacePlay id. */
        public id: (number|Long);

        /**
         * Creates a new C2SWaitRacePlay instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SWaitRacePlay instance
         */
        public static create(properties?: pb.IC2SWaitRacePlay): pb.C2SWaitRacePlay;

        /**
         * Encodes the specified C2SWaitRacePlay message. Does not implicitly {@link pb.C2SWaitRacePlay.verify|verify} messages.
         * @param message C2SWaitRacePlay message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SWaitRacePlay, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SWaitRacePlay message, length delimited. Does not implicitly {@link pb.C2SWaitRacePlay.verify|verify} messages.
         * @param message C2SWaitRacePlay message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SWaitRacePlay, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SWaitRacePlay message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SWaitRacePlay
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SWaitRacePlay;

        /**
         * Decodes a C2SWaitRacePlay message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SWaitRacePlay
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SWaitRacePlay;

        /**
         * Verifies a C2SWaitRacePlay message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SWaitRacePlay message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SWaitRacePlay
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SWaitRacePlay;

        /**
         * Creates a plain object from a C2SWaitRacePlay message. Also converts values to other types if specified.
         * @param message C2SWaitRacePlay
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SWaitRacePlay, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SWaitRacePlay to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WaitRaceInfo. */
    interface IWaitRaceInfo {

        /** WaitRaceInfo id */
        id?: (number|Long|null);

        /** WaitRaceInfo playTime */
        playTime?: (number|Long|null);

        /** WaitRaceInfo playerNum */
        playerNum?: (number|null);

        /** WaitRaceInfo minPlayerNum */
        minPlayerNum?: (number|null);
    }

    /** Represents a WaitRaceInfo. */
    class WaitRaceInfo implements IWaitRaceInfo {

        /**
         * Constructs a new WaitRaceInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWaitRaceInfo);

        /** WaitRaceInfo id. */
        public id: (number|Long);

        /** WaitRaceInfo playTime. */
        public playTime: (number|Long);

        /** WaitRaceInfo playerNum. */
        public playerNum: number;

        /** WaitRaceInfo minPlayerNum. */
        public minPlayerNum: number;

        /**
         * Creates a new WaitRaceInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WaitRaceInfo instance
         */
        public static create(properties?: pb.IWaitRaceInfo): pb.WaitRaceInfo;

        /**
         * Encodes the specified WaitRaceInfo message. Does not implicitly {@link pb.WaitRaceInfo.verify|verify} messages.
         * @param message WaitRaceInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWaitRaceInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WaitRaceInfo message, length delimited. Does not implicitly {@link pb.WaitRaceInfo.verify|verify} messages.
         * @param message WaitRaceInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWaitRaceInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WaitRaceInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WaitRaceInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.WaitRaceInfo;

        /**
         * Decodes a WaitRaceInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WaitRaceInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.WaitRaceInfo;

        /**
         * Verifies a WaitRaceInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WaitRaceInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WaitRaceInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.WaitRaceInfo;

        /**
         * Creates a plain object from a WaitRaceInfo message. Also converts values to other types if specified.
         * @param message WaitRaceInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.WaitRaceInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WaitRaceInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CWaitRacePlay. */
    interface IS2CWaitRacePlay {

        /** S2CWaitRacePlay info */
        info?: (pb.IWaitRaceInfo|null);
    }

    /** Represents a S2CWaitRacePlay. */
    class S2CWaitRacePlay implements IS2CWaitRacePlay {

        /**
         * Constructs a new S2CWaitRacePlay.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CWaitRacePlay);

        /** S2CWaitRacePlay info. */
        public info?: (pb.IWaitRaceInfo|null);

        /**
         * Creates a new S2CWaitRacePlay instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CWaitRacePlay instance
         */
        public static create(properties?: pb.IS2CWaitRacePlay): pb.S2CWaitRacePlay;

        /**
         * Encodes the specified S2CWaitRacePlay message. Does not implicitly {@link pb.S2CWaitRacePlay.verify|verify} messages.
         * @param message S2CWaitRacePlay message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CWaitRacePlay, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CWaitRacePlay message, length delimited. Does not implicitly {@link pb.S2CWaitRacePlay.verify|verify} messages.
         * @param message S2CWaitRacePlay message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CWaitRacePlay, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CWaitRacePlay message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CWaitRacePlay
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CWaitRacePlay;

        /**
         * Decodes a S2CWaitRacePlay message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CWaitRacePlay
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CWaitRacePlay;

        /**
         * Verifies a S2CWaitRacePlay message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CWaitRacePlay message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CWaitRacePlay
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CWaitRacePlay;

        /**
         * Creates a plain object from a S2CWaitRacePlay message. Also converts values to other types if specified.
         * @param message S2CWaitRacePlay
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CWaitRacePlay, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CWaitRacePlay to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CPlayRaceCountdown. */
    interface IS2CPlayRaceCountdown {

        /** S2CPlayRaceCountdown leftTime */
        leftTime?: (number|null);
    }

    /** Represents a S2CPlayRaceCountdown. */
    class S2CPlayRaceCountdown implements IS2CPlayRaceCountdown {

        /**
         * Constructs a new S2CPlayRaceCountdown.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CPlayRaceCountdown);

        /** S2CPlayRaceCountdown leftTime. */
        public leftTime: number;

        /**
         * Creates a new S2CPlayRaceCountdown instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CPlayRaceCountdown instance
         */
        public static create(properties?: pb.IS2CPlayRaceCountdown): pb.S2CPlayRaceCountdown;

        /**
         * Encodes the specified S2CPlayRaceCountdown message. Does not implicitly {@link pb.S2CPlayRaceCountdown.verify|verify} messages.
         * @param message S2CPlayRaceCountdown message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CPlayRaceCountdown, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CPlayRaceCountdown message, length delimited. Does not implicitly {@link pb.S2CPlayRaceCountdown.verify|verify} messages.
         * @param message S2CPlayRaceCountdown message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CPlayRaceCountdown, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CPlayRaceCountdown message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CPlayRaceCountdown
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CPlayRaceCountdown;

        /**
         * Decodes a S2CPlayRaceCountdown message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CPlayRaceCountdown
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CPlayRaceCountdown;

        /**
         * Verifies a S2CPlayRaceCountdown message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CPlayRaceCountdown message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CPlayRaceCountdown
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CPlayRaceCountdown;

        /**
         * Creates a plain object from a S2CPlayRaceCountdown message. Also converts values to other types if specified.
         * @param message S2CPlayRaceCountdown
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CPlayRaceCountdown, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CPlayRaceCountdown to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CRaceStartFail. */
    interface IS2CRaceStartFail {

        /** S2CRaceStartFail id */
        id?: (number|null);

        /** S2CRaceStartFail ec */
        ec?: (number|null);
    }

    /** Represents a S2CRaceStartFail. */
    class S2CRaceStartFail implements IS2CRaceStartFail {

        /**
         * Constructs a new S2CRaceStartFail.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CRaceStartFail);

        /** S2CRaceStartFail id. */
        public id: number;

        /** S2CRaceStartFail ec. */
        public ec: number;

        /**
         * Creates a new S2CRaceStartFail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CRaceStartFail instance
         */
        public static create(properties?: pb.IS2CRaceStartFail): pb.S2CRaceStartFail;

        /**
         * Encodes the specified S2CRaceStartFail message. Does not implicitly {@link pb.S2CRaceStartFail.verify|verify} messages.
         * @param message S2CRaceStartFail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CRaceStartFail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CRaceStartFail message, length delimited. Does not implicitly {@link pb.S2CRaceStartFail.verify|verify} messages.
         * @param message S2CRaceStartFail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CRaceStartFail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CRaceStartFail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CRaceStartFail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CRaceStartFail;

        /**
         * Decodes a S2CRaceStartFail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CRaceStartFail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CRaceStartFail;

        /**
         * Verifies a S2CRaceStartFail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CRaceStartFail message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CRaceStartFail
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CRaceStartFail;

        /**
         * Creates a plain object from a S2CRaceStartFail message. Also converts values to other types if specified.
         * @param message S2CRaceStartFail
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CRaceStartFail, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CRaceStartFail to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RacePhaseInfo. */
    interface IRacePhaseInfo {

        /** RacePhaseInfo phase */
        phase?: (pb.RacePhase|null);

        /** RacePhaseInfo round */
        round?: (number|null);

        /** RacePhaseInfo totalRound */
        totalRound?: (number|null);

        /** RacePhaseInfo rule */
        rule?: (pb.RaceRule|null);

        /** RacePhaseInfo fixGames */
        fixGames?: (number|null);

        /** RacePhaseInfo endPlayerNum */
        endPlayerNum?: (number|null);

        /** RacePhaseInfo promotionRank */
        promotionRank?: (number|null);
    }

    /** Represents a RacePhaseInfo. */
    class RacePhaseInfo implements IRacePhaseInfo {

        /**
         * Constructs a new RacePhaseInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRacePhaseInfo);

        /** RacePhaseInfo phase. */
        public phase: pb.RacePhase;

        /** RacePhaseInfo round. */
        public round: number;

        /** RacePhaseInfo totalRound. */
        public totalRound: number;

        /** RacePhaseInfo rule. */
        public rule: pb.RaceRule;

        /** RacePhaseInfo fixGames. */
        public fixGames: number;

        /** RacePhaseInfo endPlayerNum. */
        public endPlayerNum: number;

        /** RacePhaseInfo promotionRank. */
        public promotionRank: number;

        /**
         * Creates a new RacePhaseInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RacePhaseInfo instance
         */
        public static create(properties?: pb.IRacePhaseInfo): pb.RacePhaseInfo;

        /**
         * Encodes the specified RacePhaseInfo message. Does not implicitly {@link pb.RacePhaseInfo.verify|verify} messages.
         * @param message RacePhaseInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRacePhaseInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RacePhaseInfo message, length delimited. Does not implicitly {@link pb.RacePhaseInfo.verify|verify} messages.
         * @param message RacePhaseInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRacePhaseInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RacePhaseInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RacePhaseInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.RacePhaseInfo;

        /**
         * Decodes a RacePhaseInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RacePhaseInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.RacePhaseInfo;

        /**
         * Verifies a RacePhaseInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RacePhaseInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RacePhaseInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.RacePhaseInfo;

        /**
         * Creates a plain object from a RacePhaseInfo message. Also converts values to other types if specified.
         * @param message RacePhaseInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.RacePhaseInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RacePhaseInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CRacePhase. */
    interface IS2CRacePhase {

        /** S2CRacePhase phase */
        phase?: (pb.IRacePhaseInfo|null);
    }

    /** Represents a S2CRacePhase. */
    class S2CRacePhase implements IS2CRacePhase {

        /**
         * Constructs a new S2CRacePhase.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CRacePhase);

        /** S2CRacePhase phase. */
        public phase?: (pb.IRacePhaseInfo|null);

        /**
         * Creates a new S2CRacePhase instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CRacePhase instance
         */
        public static create(properties?: pb.IS2CRacePhase): pb.S2CRacePhase;

        /**
         * Encodes the specified S2CRacePhase message. Does not implicitly {@link pb.S2CRacePhase.verify|verify} messages.
         * @param message S2CRacePhase message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CRacePhase, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CRacePhase message, length delimited. Does not implicitly {@link pb.S2CRacePhase.verify|verify} messages.
         * @param message S2CRacePhase message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CRacePhase, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CRacePhase message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CRacePhase
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CRacePhase;

        /**
         * Decodes a S2CRacePhase message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CRacePhase
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CRacePhase;

        /**
         * Verifies a S2CRacePhase message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CRacePhase message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CRacePhase
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CRacePhase;

        /**
         * Creates a plain object from a S2CRacePhase message. Also converts values to other types if specified.
         * @param message S2CRacePhase
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CRacePhase, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CRacePhase to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CRacePlay. */
    interface IS2CRacePlay {

        /** S2CRacePlay eliminatePoint */
        eliminatePoint?: (number|null);
    }

    /** Represents a S2CRacePlay. */
    class S2CRacePlay implements IS2CRacePlay {

        /**
         * Constructs a new S2CRacePlay.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CRacePlay);

        /** S2CRacePlay eliminatePoint. */
        public eliminatePoint: number;

        /**
         * Creates a new S2CRacePlay instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CRacePlay instance
         */
        public static create(properties?: pb.IS2CRacePlay): pb.S2CRacePlay;

        /**
         * Encodes the specified S2CRacePlay message. Does not implicitly {@link pb.S2CRacePlay.verify|verify} messages.
         * @param message S2CRacePlay message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CRacePlay, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CRacePlay message, length delimited. Does not implicitly {@link pb.S2CRacePlay.verify|verify} messages.
         * @param message S2CRacePlay message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CRacePlay, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CRacePlay message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CRacePlay
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CRacePlay;

        /**
         * Decodes a S2CRacePlay message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CRacePlay
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CRacePlay;

        /**
         * Verifies a S2CRacePlay message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CRacePlay message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CRacePlay
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CRacePlay;

        /**
         * Creates a plain object from a S2CRacePlay message. Also converts values to other types if specified.
         * @param message S2CRacePlay
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CRacePlay, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CRacePlay to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** MatchState enum. */
    enum MatchState {
        MatchState_Null = 0,
        MatchState_WaitGame = 1,
        MatchState_WaitEnd = 2
    }

    /** Properties of a S2CRaceWaitMatch. */
    interface IS2CRaceWaitMatch {
    }

    /** Represents a S2CRaceWaitMatch. */
    class S2CRaceWaitMatch implements IS2CRaceWaitMatch {

        /**
         * Constructs a new S2CRaceWaitMatch.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CRaceWaitMatch);

        /**
         * Creates a new S2CRaceWaitMatch instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CRaceWaitMatch instance
         */
        public static create(properties?: pb.IS2CRaceWaitMatch): pb.S2CRaceWaitMatch;

        /**
         * Encodes the specified S2CRaceWaitMatch message. Does not implicitly {@link pb.S2CRaceWaitMatch.verify|verify} messages.
         * @param message S2CRaceWaitMatch message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CRaceWaitMatch, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CRaceWaitMatch message, length delimited. Does not implicitly {@link pb.S2CRaceWaitMatch.verify|verify} messages.
         * @param message S2CRaceWaitMatch message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CRaceWaitMatch, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CRaceWaitMatch message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CRaceWaitMatch
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CRaceWaitMatch;

        /**
         * Decodes a S2CRaceWaitMatch message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CRaceWaitMatch
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CRaceWaitMatch;

        /**
         * Verifies a S2CRaceWaitMatch message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CRaceWaitMatch message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CRaceWaitMatch
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CRaceWaitMatch;

        /**
         * Creates a plain object from a S2CRaceWaitMatch message. Also converts values to other types if specified.
         * @param message S2CRaceWaitMatch
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CRaceWaitMatch, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CRaceWaitMatch to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CRaceWaitRoundEnd. */
    interface IS2CRaceWaitRoundEnd {
    }

    /** Represents a S2CRaceWaitRoundEnd. */
    class S2CRaceWaitRoundEnd implements IS2CRaceWaitRoundEnd {

        /**
         * Constructs a new S2CRaceWaitRoundEnd.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CRaceWaitRoundEnd);

        /**
         * Creates a new S2CRaceWaitRoundEnd instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CRaceWaitRoundEnd instance
         */
        public static create(properties?: pb.IS2CRaceWaitRoundEnd): pb.S2CRaceWaitRoundEnd;

        /**
         * Encodes the specified S2CRaceWaitRoundEnd message. Does not implicitly {@link pb.S2CRaceWaitRoundEnd.verify|verify} messages.
         * @param message S2CRaceWaitRoundEnd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CRaceWaitRoundEnd, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CRaceWaitRoundEnd message, length delimited. Does not implicitly {@link pb.S2CRaceWaitRoundEnd.verify|verify} messages.
         * @param message S2CRaceWaitRoundEnd message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CRaceWaitRoundEnd, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CRaceWaitRoundEnd message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CRaceWaitRoundEnd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CRaceWaitRoundEnd;

        /**
         * Decodes a S2CRaceWaitRoundEnd message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CRaceWaitRoundEnd
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CRaceWaitRoundEnd;

        /**
         * Verifies a S2CRaceWaitRoundEnd message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CRaceWaitRoundEnd message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CRaceWaitRoundEnd
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CRaceWaitRoundEnd;

        /**
         * Creates a plain object from a S2CRaceWaitRoundEnd message. Also converts values to other types if specified.
         * @param message S2CRaceWaitRoundEnd
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CRaceWaitRoundEnd, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CRaceWaitRoundEnd to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RaceRankInfo. */
    interface IRaceRankInfo {

        /** RaceRankInfo myRank */
        myRank?: (number|null);

        /** RaceRankInfo playerNum */
        playerNum?: (number|null);
    }

    /** Represents a RaceRankInfo. */
    class RaceRankInfo implements IRaceRankInfo {

        /**
         * Constructs a new RaceRankInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRaceRankInfo);

        /** RaceRankInfo myRank. */
        public myRank: number;

        /** RaceRankInfo playerNum. */
        public playerNum: number;

        /**
         * Creates a new RaceRankInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RaceRankInfo instance
         */
        public static create(properties?: pb.IRaceRankInfo): pb.RaceRankInfo;

        /**
         * Encodes the specified RaceRankInfo message. Does not implicitly {@link pb.RaceRankInfo.verify|verify} messages.
         * @param message RaceRankInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRaceRankInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RaceRankInfo message, length delimited. Does not implicitly {@link pb.RaceRankInfo.verify|verify} messages.
         * @param message RaceRankInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRaceRankInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RaceRankInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RaceRankInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.RaceRankInfo;

        /**
         * Decodes a RaceRankInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RaceRankInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.RaceRankInfo;

        /**
         * Verifies a RaceRankInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RaceRankInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RaceRankInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.RaceRankInfo;

        /**
         * Creates a plain object from a RaceRankInfo message. Also converts values to other types if specified.
         * @param message RaceRankInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.RaceRankInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RaceRankInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CRaceRank. */
    interface IS2CRaceRank {

        /** S2CRaceRank rank */
        rank?: (pb.IRaceRankInfo|null);
    }

    /** Represents a S2CRaceRank. */
    class S2CRaceRank implements IS2CRaceRank {

        /**
         * Constructs a new S2CRaceRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CRaceRank);

        /** S2CRaceRank rank. */
        public rank?: (pb.IRaceRankInfo|null);

        /**
         * Creates a new S2CRaceRank instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CRaceRank instance
         */
        public static create(properties?: pb.IS2CRaceRank): pb.S2CRaceRank;

        /**
         * Encodes the specified S2CRaceRank message. Does not implicitly {@link pb.S2CRaceRank.verify|verify} messages.
         * @param message S2CRaceRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CRaceRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CRaceRank message, length delimited. Does not implicitly {@link pb.S2CRaceRank.verify|verify} messages.
         * @param message S2CRaceRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CRaceRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CRaceRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CRaceRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CRaceRank;

        /**
         * Decodes a S2CRaceRank message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CRaceRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CRaceRank;

        /**
         * Verifies a S2CRaceRank message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CRaceRank message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CRaceRank
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CRaceRank;

        /**
         * Creates a plain object from a S2CRaceRank message. Also converts values to other types if specified.
         * @param message S2CRaceRank
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CRaceRank, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CRaceRank to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** ThroughtState enum. */
    enum ThroughtState {
        Through_Wait = 0,
        Through_Succ = 1,
        Through_Fail = 2
    }

    /** Properties of a RaceThrough. */
    interface IRaceThrough {

        /** RaceThrough state */
        state?: (pb.ThroughtState|null);

        /** RaceThrough throughPlayer */
        throughPlayer?: (number[]|null);

        /** RaceThrough waitRoom */
        waitRoom?: (number|null);

        /** RaceThrough rank */
        rank?: (number|null);

        /** RaceThrough playerNum */
        playerNum?: (number|null);

        /** RaceThrough bye */
        bye?: (boolean|null);

        /** RaceThrough leftTime */
        leftTime?: (number|null);
    }

    /** Represents a RaceThrough. */
    class RaceThrough implements IRaceThrough {

        /**
         * Constructs a new RaceThrough.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRaceThrough);

        /** RaceThrough state. */
        public state: pb.ThroughtState;

        /** RaceThrough throughPlayer. */
        public throughPlayer: number[];

        /** RaceThrough waitRoom. */
        public waitRoom: number;

        /** RaceThrough rank. */
        public rank: number;

        /** RaceThrough playerNum. */
        public playerNum: number;

        /** RaceThrough bye. */
        public bye: boolean;

        /** RaceThrough leftTime. */
        public leftTime: number;

        /**
         * Creates a new RaceThrough instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RaceThrough instance
         */
        public static create(properties?: pb.IRaceThrough): pb.RaceThrough;

        /**
         * Encodes the specified RaceThrough message. Does not implicitly {@link pb.RaceThrough.verify|verify} messages.
         * @param message RaceThrough message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRaceThrough, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RaceThrough message, length delimited. Does not implicitly {@link pb.RaceThrough.verify|verify} messages.
         * @param message RaceThrough message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRaceThrough, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RaceThrough message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RaceThrough
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.RaceThrough;

        /**
         * Decodes a RaceThrough message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RaceThrough
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.RaceThrough;

        /**
         * Verifies a RaceThrough message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RaceThrough message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RaceThrough
         */
        public static fromObject(object: { [k: string]: any }): pb.RaceThrough;

        /**
         * Creates a plain object from a RaceThrough message. Also converts values to other types if specified.
         * @param message RaceThrough
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.RaceThrough, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RaceThrough to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CRaceThrough. */
    interface IS2CRaceThrough {

        /** S2CRaceThrough through */
        through?: (pb.IRaceThrough|null);
    }

    /** Represents a S2CRaceThrough. */
    class S2CRaceThrough implements IS2CRaceThrough {

        /**
         * Constructs a new S2CRaceThrough.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CRaceThrough);

        /** S2CRaceThrough through. */
        public through?: (pb.IRaceThrough|null);

        /**
         * Creates a new S2CRaceThrough instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CRaceThrough instance
         */
        public static create(properties?: pb.IS2CRaceThrough): pb.S2CRaceThrough;

        /**
         * Encodes the specified S2CRaceThrough message. Does not implicitly {@link pb.S2CRaceThrough.verify|verify} messages.
         * @param message S2CRaceThrough message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CRaceThrough, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CRaceThrough message, length delimited. Does not implicitly {@link pb.S2CRaceThrough.verify|verify} messages.
         * @param message S2CRaceThrough message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CRaceThrough, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CRaceThrough message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CRaceThrough
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CRaceThrough;

        /**
         * Decodes a S2CRaceThrough message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CRaceThrough
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CRaceThrough;

        /**
         * Verifies a S2CRaceThrough message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CRaceThrough message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CRaceThrough
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CRaceThrough;

        /**
         * Creates a plain object from a S2CRaceThrough message. Also converts values to other types if specified.
         * @param message S2CRaceThrough
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CRaceThrough, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CRaceThrough to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RaceSettle. */
    interface IRaceSettle {

        /** RaceSettle id */
        id?: (number|Long|null);

        /** RaceSettle name */
        name?: (string|null);

        /** RaceSettle eliminateRival */
        eliminateRival?: (number|null);

        /** RaceSettle rank */
        rank?: (number|null);

        /** RaceSettle rewards */
        rewards?: (pb.IItem|null);

        /** RaceSettle time */
        time?: (number|Long|null);
    }

    /** Represents a RaceSettle. */
    class RaceSettle implements IRaceSettle {

        /**
         * Constructs a new RaceSettle.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRaceSettle);

        /** RaceSettle id. */
        public id: (number|Long);

        /** RaceSettle name. */
        public name: string;

        /** RaceSettle eliminateRival. */
        public eliminateRival: number;

        /** RaceSettle rank. */
        public rank: number;

        /** RaceSettle rewards. */
        public rewards?: (pb.IItem|null);

        /** RaceSettle time. */
        public time: (number|Long);

        /**
         * Creates a new RaceSettle instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RaceSettle instance
         */
        public static create(properties?: pb.IRaceSettle): pb.RaceSettle;

        /**
         * Encodes the specified RaceSettle message. Does not implicitly {@link pb.RaceSettle.verify|verify} messages.
         * @param message RaceSettle message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRaceSettle, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RaceSettle message, length delimited. Does not implicitly {@link pb.RaceSettle.verify|verify} messages.
         * @param message RaceSettle message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRaceSettle, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RaceSettle message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RaceSettle
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.RaceSettle;

        /**
         * Decodes a RaceSettle message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RaceSettle
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.RaceSettle;

        /**
         * Verifies a RaceSettle message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RaceSettle message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RaceSettle
         */
        public static fromObject(object: { [k: string]: any }): pb.RaceSettle;

        /**
         * Creates a plain object from a RaceSettle message. Also converts values to other types if specified.
         * @param message RaceSettle
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.RaceSettle, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RaceSettle to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CRaceSettle. */
    interface IS2CRaceSettle {

        /** S2CRaceSettle settle */
        settle?: (pb.IRaceSettle|null);
    }

    /** Represents a S2CRaceSettle. */
    class S2CRaceSettle implements IS2CRaceSettle {

        /**
         * Constructs a new S2CRaceSettle.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CRaceSettle);

        /** S2CRaceSettle settle. */
        public settle?: (pb.IRaceSettle|null);

        /**
         * Creates a new S2CRaceSettle instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CRaceSettle instance
         */
        public static create(properties?: pb.IS2CRaceSettle): pb.S2CRaceSettle;

        /**
         * Encodes the specified S2CRaceSettle message. Does not implicitly {@link pb.S2CRaceSettle.verify|verify} messages.
         * @param message S2CRaceSettle message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CRaceSettle, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CRaceSettle message, length delimited. Does not implicitly {@link pb.S2CRaceSettle.verify|verify} messages.
         * @param message S2CRaceSettle message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CRaceSettle, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CRaceSettle message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CRaceSettle
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CRaceSettle;

        /**
         * Decodes a S2CRaceSettle message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CRaceSettle
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CRaceSettle;

        /**
         * Verifies a S2CRaceSettle message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CRaceSettle message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CRaceSettle
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CRaceSettle;

        /**
         * Creates a plain object from a S2CRaceSettle message. Also converts values to other types if specified.
         * @param message S2CRaceSettle
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CRaceSettle, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CRaceSettle to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetRaceTop. */
    interface IC2SGetRaceTop {

        /** C2SGetRaceTop id */
        id?: (number|Long|null);

        /** C2SGetRaceTop startPos */
        startPos?: (number|null);
    }

    /** Represents a C2SGetRaceTop. */
    class C2SGetRaceTop implements IC2SGetRaceTop {

        /**
         * Constructs a new C2SGetRaceTop.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetRaceTop);

        /** C2SGetRaceTop id. */
        public id: (number|Long);

        /** C2SGetRaceTop startPos. */
        public startPos: number;

        /**
         * Creates a new C2SGetRaceTop instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetRaceTop instance
         */
        public static create(properties?: pb.IC2SGetRaceTop): pb.C2SGetRaceTop;

        /**
         * Encodes the specified C2SGetRaceTop message. Does not implicitly {@link pb.C2SGetRaceTop.verify|verify} messages.
         * @param message C2SGetRaceTop message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetRaceTop, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetRaceTop message, length delimited. Does not implicitly {@link pb.C2SGetRaceTop.verify|verify} messages.
         * @param message C2SGetRaceTop message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetRaceTop, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetRaceTop message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetRaceTop
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetRaceTop;

        /**
         * Decodes a C2SGetRaceTop message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetRaceTop
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetRaceTop;

        /**
         * Verifies a C2SGetRaceTop message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetRaceTop message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetRaceTop
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetRaceTop;

        /**
         * Creates a plain object from a C2SGetRaceTop message. Also converts values to other types if specified.
         * @param message C2SGetRaceTop
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetRaceTop, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetRaceTop to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetRaceTop. */
    interface IS2CGetRaceTop {

        /** S2CGetRaceTop id */
        id?: (number|Long|null);

        /** S2CGetRaceTop ec */
        ec?: (number|null);

        /** S2CGetRaceTop items */
        items?: (pb.IGeneralRaceRank[]|null);

        /** S2CGetRaceTop myItem */
        myItem?: (pb.IGeneralRaceRank|null);
    }

    /** Represents a S2CGetRaceTop. */
    class S2CGetRaceTop implements IS2CGetRaceTop {

        /**
         * Constructs a new S2CGetRaceTop.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetRaceTop);

        /** S2CGetRaceTop id. */
        public id: (number|Long);

        /** S2CGetRaceTop ec. */
        public ec: number;

        /** S2CGetRaceTop items. */
        public items: pb.IGeneralRaceRank[];

        /** S2CGetRaceTop myItem. */
        public myItem?: (pb.IGeneralRaceRank|null);

        /**
         * Creates a new S2CGetRaceTop instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetRaceTop instance
         */
        public static create(properties?: pb.IS2CGetRaceTop): pb.S2CGetRaceTop;

        /**
         * Encodes the specified S2CGetRaceTop message. Does not implicitly {@link pb.S2CGetRaceTop.verify|verify} messages.
         * @param message S2CGetRaceTop message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetRaceTop, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetRaceTop message, length delimited. Does not implicitly {@link pb.S2CGetRaceTop.verify|verify} messages.
         * @param message S2CGetRaceTop message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetRaceTop, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetRaceTop message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetRaceTop
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetRaceTop;

        /**
         * Decodes a S2CGetRaceTop message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetRaceTop
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetRaceTop;

        /**
         * Verifies a S2CGetRaceTop message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetRaceTop message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetRaceTop
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetRaceTop;

        /**
         * Creates a plain object from a S2CGetRaceTop message. Also converts values to other types if specified.
         * @param message S2CGetRaceTop
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetRaceTop, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetRaceTop to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SExitRace. */
    interface IC2SExitRace {

        /** C2SExitRace id */
        id?: (number|Long|null);
    }

    /** Represents a C2SExitRace. */
    class C2SExitRace implements IC2SExitRace {

        /**
         * Constructs a new C2SExitRace.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SExitRace);

        /** C2SExitRace id. */
        public id: (number|Long);

        /**
         * Creates a new C2SExitRace instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SExitRace instance
         */
        public static create(properties?: pb.IC2SExitRace): pb.C2SExitRace;

        /**
         * Encodes the specified C2SExitRace message. Does not implicitly {@link pb.C2SExitRace.verify|verify} messages.
         * @param message C2SExitRace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SExitRace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SExitRace message, length delimited. Does not implicitly {@link pb.C2SExitRace.verify|verify} messages.
         * @param message C2SExitRace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SExitRace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SExitRace message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SExitRace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SExitRace;

        /**
         * Decodes a C2SExitRace message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SExitRace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SExitRace;

        /**
         * Verifies a C2SExitRace message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SExitRace message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SExitRace
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SExitRace;

        /**
         * Creates a plain object from a C2SExitRace message. Also converts values to other types if specified.
         * @param message C2SExitRace
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SExitRace, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SExitRace to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CExitRace. */
    interface IS2CExitRace {

        /** S2CExitRace id */
        id?: (number|Long|null);

        /** S2CExitRace ec */
        ec?: (number|null);
    }

    /** Represents a S2CExitRace. */
    class S2CExitRace implements IS2CExitRace {

        /**
         * Constructs a new S2CExitRace.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CExitRace);

        /** S2CExitRace id. */
        public id: (number|Long);

        /** S2CExitRace ec. */
        public ec: number;

        /**
         * Creates a new S2CExitRace instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CExitRace instance
         */
        public static create(properties?: pb.IS2CExitRace): pb.S2CExitRace;

        /**
         * Encodes the specified S2CExitRace message. Does not implicitly {@link pb.S2CExitRace.verify|verify} messages.
         * @param message S2CExitRace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CExitRace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CExitRace message, length delimited. Does not implicitly {@link pb.S2CExitRace.verify|verify} messages.
         * @param message S2CExitRace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CExitRace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CExitRace message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CExitRace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CExitRace;

        /**
         * Decodes a S2CExitRace message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CExitRace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CExitRace;

        /**
         * Verifies a S2CExitRace message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CExitRace message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CExitRace
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CExitRace;

        /**
         * Creates a plain object from a S2CExitRace message. Also converts values to other types if specified.
         * @param message S2CExitRace
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CExitRace, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CExitRace to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** ChampionTimesType enum. */
    enum ChampionTimesType {
        ChampionTimesType_Null = 0,
        ChampionTimesType_RealTime = 1,
        ChampionTimesType_Normal = 2
    }

    /** RaceLoopType enum. */
    enum RaceLoopType {
        RaceLoopType_Null = 0,
        RaceLoopType_Loop = 1,
        RaceLoopType_Single = 2,
        RaceLoopType_LoopEveryday = 3
    }

    /** RaceStartRule enum. */
    enum RaceStartRule {
        RaceStartRule_Null = 0,
        RaceStartRule_Arrive = 1,
        RaceStartRule_Time = 2
    }

    /** RaceType enum. */
    enum RaceType {
        RaceType_Null = 0,
        RaceType_Gold = 1,
        RaceType_CallCharge = 2,
        RaceType_RealObject = 3,
        RaceType_Normal = 4,
        RaceType_Appointment = 5,
        RaceType_RedEnv = 6,
        RaceType_GoldRob = 7
    }

    /** RaceRule enum. */
    enum RaceRule {
        RaceRule_Null = 0,
        RaceRule_PlayOut = 1,
        RaceRule_FixRoundScore = 2
    }

    /** RacePhase enum. */
    enum RacePhase {
        Phase_Null = 0,
        Phase_Audition = 1,
        Phase_Preliminary = 2,
        Phase_Semi = 3,
        Phase_Semifinal = 4,
        Phase_Final = 5
    }

    /** Properties of a RaceRewardDesc. */
    interface IRaceRewardDesc {

        /** RaceRewardDesc rank */
        rank?: (pb.IValRange|null);

        /** RaceRewardDesc rewardText */
        rewardText?: (string|null);
    }

    /** Represents a RaceRewardDesc. */
    class RaceRewardDesc implements IRaceRewardDesc {

        /**
         * Constructs a new RaceRewardDesc.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRaceRewardDesc);

        /** RaceRewardDesc rank. */
        public rank?: (pb.IValRange|null);

        /** RaceRewardDesc rewardText. */
        public rewardText: string;

        /**
         * Creates a new RaceRewardDesc instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RaceRewardDesc instance
         */
        public static create(properties?: pb.IRaceRewardDesc): pb.RaceRewardDesc;

        /**
         * Encodes the specified RaceRewardDesc message. Does not implicitly {@link pb.RaceRewardDesc.verify|verify} messages.
         * @param message RaceRewardDesc message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRaceRewardDesc, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RaceRewardDesc message, length delimited. Does not implicitly {@link pb.RaceRewardDesc.verify|verify} messages.
         * @param message RaceRewardDesc message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRaceRewardDesc, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RaceRewardDesc message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RaceRewardDesc
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.RaceRewardDesc;

        /**
         * Decodes a RaceRewardDesc message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RaceRewardDesc
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.RaceRewardDesc;

        /**
         * Verifies a RaceRewardDesc message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RaceRewardDesc message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RaceRewardDesc
         */
        public static fromObject(object: { [k: string]: any }): pb.RaceRewardDesc;

        /**
         * Creates a plain object from a RaceRewardDesc message. Also converts values to other types if specified.
         * @param message RaceRewardDesc
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.RaceRewardDesc, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RaceRewardDesc to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RaceReward. */
    interface IRaceReward {

        /** RaceReward rank */
        rank?: (pb.IValRange|null);

        /** RaceReward reward */
        reward?: (pb.IItem|null);

        /** RaceReward mailId */
        mailId?: (number|null);

        /** RaceReward rewardText */
        rewardText?: (string|null);
    }

    /** Represents a RaceReward. */
    class RaceReward implements IRaceReward {

        /**
         * Constructs a new RaceReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRaceReward);

        /** RaceReward rank. */
        public rank?: (pb.IValRange|null);

        /** RaceReward reward. */
        public reward?: (pb.IItem|null);

        /** RaceReward mailId. */
        public mailId: number;

        /** RaceReward rewardText. */
        public rewardText: string;

        /**
         * Creates a new RaceReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RaceReward instance
         */
        public static create(properties?: pb.IRaceReward): pb.RaceReward;

        /**
         * Encodes the specified RaceReward message. Does not implicitly {@link pb.RaceReward.verify|verify} messages.
         * @param message RaceReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRaceReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RaceReward message, length delimited. Does not implicitly {@link pb.RaceReward.verify|verify} messages.
         * @param message RaceReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRaceReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RaceReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RaceReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.RaceReward;

        /**
         * Decodes a RaceReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RaceReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.RaceReward;

        /**
         * Verifies a RaceReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RaceReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RaceReward
         */
        public static fromObject(object: { [k: string]: any }): pb.RaceReward;

        /**
         * Creates a plain object from a RaceReward message. Also converts values to other types if specified.
         * @param message RaceReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.RaceReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RaceReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChampionItem. */
    interface IChampionItem {

        /** ChampionItem time */
        time?: (number|Long|null);

        /** ChampionItem raceId */
        raceId?: (number|null);

        /** ChampionItem raceName */
        raceName?: (string|null);

        /** ChampionItem raceType */
        raceType?: (pb.RaceType|null);

        /** ChampionItem rewards */
        rewards?: (pb.IItem|null);

        /** ChampionItem guid */
        guid?: (number|Long|null);

        /** ChampionItem name */
        name?: (string|null);

        /** ChampionItem portraits */
        portraits?: (string|null);

        /** ChampionItem portBorder */
        portBorder?: (number|null);
    }

    /** Represents a ChampionItem. */
    class ChampionItem implements IChampionItem {

        /**
         * Constructs a new ChampionItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IChampionItem);

        /** ChampionItem time. */
        public time: (number|Long);

        /** ChampionItem raceId. */
        public raceId: number;

        /** ChampionItem raceName. */
        public raceName: string;

        /** ChampionItem raceType. */
        public raceType: pb.RaceType;

        /** ChampionItem rewards. */
        public rewards?: (pb.IItem|null);

        /** ChampionItem guid. */
        public guid: (number|Long);

        /** ChampionItem name. */
        public name: string;

        /** ChampionItem portraits. */
        public portraits: string;

        /** ChampionItem portBorder. */
        public portBorder: number;

        /**
         * Creates a new ChampionItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChampionItem instance
         */
        public static create(properties?: pb.IChampionItem): pb.ChampionItem;

        /**
         * Encodes the specified ChampionItem message. Does not implicitly {@link pb.ChampionItem.verify|verify} messages.
         * @param message ChampionItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IChampionItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ChampionItem message, length delimited. Does not implicitly {@link pb.ChampionItem.verify|verify} messages.
         * @param message ChampionItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IChampionItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ChampionItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChampionItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ChampionItem;

        /**
         * Decodes a ChampionItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChampionItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ChampionItem;

        /**
         * Verifies a ChampionItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChampionItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChampionItem
         */
        public static fromObject(object: { [k: string]: any }): pb.ChampionItem;

        /**
         * Creates a plain object from a ChampionItem message. Also converts values to other types if specified.
         * @param message ChampionItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ChampionItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChampionItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PlayRaceNotice. */
    interface IPlayRaceNotice {

        /** PlayRaceNotice id */
        id?: (number|Long|null);

        /** PlayRaceNotice name */
        name?: (string|null);

        /** PlayRaceNotice leftTime */
        leftTime?: (number|null);
    }

    /** Represents a PlayRaceNotice. */
    class PlayRaceNotice implements IPlayRaceNotice {

        /**
         * Constructs a new PlayRaceNotice.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPlayRaceNotice);

        /** PlayRaceNotice id. */
        public id: (number|Long);

        /** PlayRaceNotice name. */
        public name: string;

        /** PlayRaceNotice leftTime. */
        public leftTime: number;

        /**
         * Creates a new PlayRaceNotice instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlayRaceNotice instance
         */
        public static create(properties?: pb.IPlayRaceNotice): pb.PlayRaceNotice;

        /**
         * Encodes the specified PlayRaceNotice message. Does not implicitly {@link pb.PlayRaceNotice.verify|verify} messages.
         * @param message PlayRaceNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPlayRaceNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PlayRaceNotice message, length delimited. Does not implicitly {@link pb.PlayRaceNotice.verify|verify} messages.
         * @param message PlayRaceNotice message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPlayRaceNotice, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PlayRaceNotice message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayRaceNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.PlayRaceNotice;

        /**
         * Decodes a PlayRaceNotice message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlayRaceNotice
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.PlayRaceNotice;

        /**
         * Verifies a PlayRaceNotice message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlayRaceNotice message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlayRaceNotice
         */
        public static fromObject(object: { [k: string]: any }): pb.PlayRaceNotice;

        /**
         * Creates a plain object from a PlayRaceNotice message. Also converts values to other types if specified.
         * @param message PlayRaceNotice
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.PlayRaceNotice, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlayRaceNotice to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** RaceState enum. */
    enum RaceState {
        RaceState_Null = 0,
        RaceState_Enroll = 1,
        RaceState_Play = 2,
        RaceState_End = 3,
        RaceState_Fail = 4
    }

    /** EnrollNeedType enum. */
    enum EnrollNeedType {
        ENT_Null = 0,
        ENT_Level = 1,
        ENT_DanLevel = 2,
        ENT_Vip = 3,
        ENT_Coin = 4,
        ENT_Gem = 5,
        ENT_HuafeiQuan = 6
    }

    /** Properties of an EnrollLimit. */
    interface IEnrollLimit {

        /** EnrollLimit needType */
        needType?: (pb.EnrollNeedType|null);

        /** EnrollLimit value */
        value?: (number|null);
    }

    /** Represents an EnrollLimit. */
    class EnrollLimit implements IEnrollLimit {

        /**
         * Constructs a new EnrollLimit.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IEnrollLimit);

        /** EnrollLimit needType. */
        public needType: pb.EnrollNeedType;

        /** EnrollLimit value. */
        public value: number;

        /**
         * Creates a new EnrollLimit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EnrollLimit instance
         */
        public static create(properties?: pb.IEnrollLimit): pb.EnrollLimit;

        /**
         * Encodes the specified EnrollLimit message. Does not implicitly {@link pb.EnrollLimit.verify|verify} messages.
         * @param message EnrollLimit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IEnrollLimit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EnrollLimit message, length delimited. Does not implicitly {@link pb.EnrollLimit.verify|verify} messages.
         * @param message EnrollLimit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IEnrollLimit, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EnrollLimit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EnrollLimit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.EnrollLimit;

        /**
         * Decodes an EnrollLimit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EnrollLimit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.EnrollLimit;

        /**
         * Verifies an EnrollLimit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EnrollLimit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EnrollLimit
         */
        public static fromObject(object: { [k: string]: any }): pb.EnrollLimit;

        /**
         * Creates a plain object from an EnrollLimit message. Also converts values to other types if specified.
         * @param message EnrollLimit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.EnrollLimit, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EnrollLimit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RaceShowItem. */
    interface IRaceShowItem {

        /** RaceShowItem cfgId */
        cfgId?: (number|null);

        /** RaceShowItem id */
        id?: (number|Long|null);

        /** RaceShowItem state */
        state?: (pb.RaceState|null);

        /** RaceShowItem raceType */
        raceType?: (pb.RaceType|null);

        /** RaceShowItem name */
        name?: (string|null);

        /** RaceShowItem areaId */
        areaId?: (number|null);

        /** RaceShowItem rewardUrl */
        rewardUrl?: (string|null);

        /** RaceShowItem ruleText */
        ruleText?: (string|null);

        /** RaceShowItem rewardDesc */
        rewardDesc?: (pb.IRaceRewardDesc[]|null);

        /** RaceShowItem rewards */
        rewards?: (pb.IRaceReward[]|null);

        /** RaceShowItem address */
        address?: (string|null);

        /** RaceShowItem minPlayerNum */
        minPlayerNum?: (number|null);

        /** RaceShowItem enroll */
        enroll?: (pb.IId2Val[]|null);

        /** RaceShowItem showEnrollNum */
        showEnrollNum?: (boolean|null);

        /** RaceShowItem needType */
        needType?: (pb.EnrollNeedType|null);

        /** RaceShowItem needValue */
        needValue?: (number|null);

        /** RaceShowItem enrollTime */
        enrollTime?: (number|Long|null);

        /** RaceShowItem startRule */
        startRule?: (pb.RaceStartRule|null);

        /** RaceShowItem manualStart */
        manualStart?: (boolean|null);

        /** RaceShowItem playTime */
        playTime?: (number|Long|null);

        /** RaceShowItem gameType */
        gameType?: (number|null);

        /** RaceShowItem invitecode */
        invitecode?: (boolean|null);

        /** RaceShowItem appointment */
        appointment?: (string|null);

        /** RaceShowItem enrollPlayerNum */
        enrollPlayerNum?: (number|null);

        /** RaceShowItem playEndTime */
        playEndTime?: (number|Long|null);

        /** RaceShowItem viewRank */
        viewRank?: (boolean|null);

        /** RaceShowItem viewRankTime */
        viewRankTime?: (number|Long|null);
    }

    /** Represents a RaceShowItem. */
    class RaceShowItem implements IRaceShowItem {

        /**
         * Constructs a new RaceShowItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRaceShowItem);

        /** RaceShowItem cfgId. */
        public cfgId: number;

        /** RaceShowItem id. */
        public id: (number|Long);

        /** RaceShowItem state. */
        public state: pb.RaceState;

        /** RaceShowItem raceType. */
        public raceType: pb.RaceType;

        /** RaceShowItem name. */
        public name: string;

        /** RaceShowItem areaId. */
        public areaId: number;

        /** RaceShowItem rewardUrl. */
        public rewardUrl: string;

        /** RaceShowItem ruleText. */
        public ruleText: string;

        /** RaceShowItem rewardDesc. */
        public rewardDesc: pb.IRaceRewardDesc[];

        /** RaceShowItem rewards. */
        public rewards: pb.IRaceReward[];

        /** RaceShowItem address. */
        public address: string;

        /** RaceShowItem minPlayerNum. */
        public minPlayerNum: number;

        /** RaceShowItem enroll. */
        public enroll: pb.IId2Val[];

        /** RaceShowItem showEnrollNum. */
        public showEnrollNum: boolean;

        /** RaceShowItem needType. */
        public needType: pb.EnrollNeedType;

        /** RaceShowItem needValue. */
        public needValue: number;

        /** RaceShowItem enrollTime. */
        public enrollTime: (number|Long);

        /** RaceShowItem startRule. */
        public startRule: pb.RaceStartRule;

        /** RaceShowItem manualStart. */
        public manualStart: boolean;

        /** RaceShowItem playTime. */
        public playTime: (number|Long);

        /** RaceShowItem gameType. */
        public gameType: number;

        /** RaceShowItem invitecode. */
        public invitecode: boolean;

        /** RaceShowItem appointment. */
        public appointment: string;

        /** RaceShowItem enrollPlayerNum. */
        public enrollPlayerNum: number;

        /** RaceShowItem playEndTime. */
        public playEndTime: (number|Long);

        /** RaceShowItem viewRank. */
        public viewRank: boolean;

        /** RaceShowItem viewRankTime. */
        public viewRankTime: (number|Long);

        /**
         * Creates a new RaceShowItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RaceShowItem instance
         */
        public static create(properties?: pb.IRaceShowItem): pb.RaceShowItem;

        /**
         * Encodes the specified RaceShowItem message. Does not implicitly {@link pb.RaceShowItem.verify|verify} messages.
         * @param message RaceShowItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRaceShowItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RaceShowItem message, length delimited. Does not implicitly {@link pb.RaceShowItem.verify|verify} messages.
         * @param message RaceShowItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRaceShowItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RaceShowItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RaceShowItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.RaceShowItem;

        /**
         * Decodes a RaceShowItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RaceShowItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.RaceShowItem;

        /**
         * Verifies a RaceShowItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RaceShowItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RaceShowItem
         */
        public static fromObject(object: { [k: string]: any }): pb.RaceShowItem;

        /**
         * Creates a plain object from a RaceShowItem message. Also converts values to other types if specified.
         * @param message RaceShowItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.RaceShowItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RaceShowItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a GeneralRaceRank. */
    interface IGeneralRaceRank {

        /** GeneralRaceRank id */
        id?: (number|Long|null);

        /** GeneralRaceRank raceId */
        raceId?: (number|null);

        /** GeneralRaceRank raceType */
        raceType?: (number|null);

        /** GeneralRaceRank raceName */
        raceName?: (string|null);

        /** GeneralRaceRank time */
        time?: (number|Long|null);

        /** GeneralRaceRank rewardText */
        rewardText?: (string|null);

        /** GeneralRaceRank rank */
        rank?: (number|null);

        /** GeneralRaceRank playerGuid */
        playerGuid?: (number|Long|null);

        /** GeneralRaceRank playerName */
        playerName?: (string|null);

        /** GeneralRaceRank portraits */
        portraits?: (string|null);

        /** GeneralRaceRank portBorder */
        portBorder?: (number|null);

        /** GeneralRaceRank raceWelfare */
        raceWelfare?: (number|Long|null);
    }

    /** Represents a GeneralRaceRank. */
    class GeneralRaceRank implements IGeneralRaceRank {

        /**
         * Constructs a new GeneralRaceRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IGeneralRaceRank);

        /** GeneralRaceRank id. */
        public id: (number|Long);

        /** GeneralRaceRank raceId. */
        public raceId: number;

        /** GeneralRaceRank raceType. */
        public raceType: number;

        /** GeneralRaceRank raceName. */
        public raceName: string;

        /** GeneralRaceRank time. */
        public time: (number|Long);

        /** GeneralRaceRank rewardText. */
        public rewardText: string;

        /** GeneralRaceRank rank. */
        public rank: number;

        /** GeneralRaceRank playerGuid. */
        public playerGuid: (number|Long);

        /** GeneralRaceRank playerName. */
        public playerName: string;

        /** GeneralRaceRank portraits. */
        public portraits: string;

        /** GeneralRaceRank portBorder. */
        public portBorder: number;

        /** GeneralRaceRank raceWelfare. */
        public raceWelfare: (number|Long);

        /**
         * Creates a new GeneralRaceRank instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GeneralRaceRank instance
         */
        public static create(properties?: pb.IGeneralRaceRank): pb.GeneralRaceRank;

        /**
         * Encodes the specified GeneralRaceRank message. Does not implicitly {@link pb.GeneralRaceRank.verify|verify} messages.
         * @param message GeneralRaceRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IGeneralRaceRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GeneralRaceRank message, length delimited. Does not implicitly {@link pb.GeneralRaceRank.verify|verify} messages.
         * @param message GeneralRaceRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IGeneralRaceRank, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GeneralRaceRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GeneralRaceRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.GeneralRaceRank;

        /**
         * Decodes a GeneralRaceRank message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GeneralRaceRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.GeneralRaceRank;

        /**
         * Verifies a GeneralRaceRank message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GeneralRaceRank message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GeneralRaceRank
         */
        public static fromObject(object: { [k: string]: any }): pb.GeneralRaceRank;

        /**
         * Creates a plain object from a GeneralRaceRank message. Also converts values to other types if specified.
         * @param message GeneralRaceRank
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.GeneralRaceRank, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GeneralRaceRank to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** RankCat enum. */
    enum RankCat {
        RankCat_Null = 0,
        RankCat_Coin = 1,
        RankCat_WinCoin = 2,
        RankCat_PlayTimes = 3,
        RankCat_Multiples = 4
    }

    /** Properties of a C2SGetRankList. */
    interface IC2SGetRankList {

        /** C2SGetRankList cat */
        cat?: (pb.RankCat|null);
    }

    /** Represents a C2SGetRankList. */
    class C2SGetRankList implements IC2SGetRankList {

        /**
         * Constructs a new C2SGetRankList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetRankList);

        /** C2SGetRankList cat. */
        public cat: pb.RankCat;

        /**
         * Creates a new C2SGetRankList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetRankList instance
         */
        public static create(properties?: pb.IC2SGetRankList): pb.C2SGetRankList;

        /**
         * Encodes the specified C2SGetRankList message. Does not implicitly {@link pb.C2SGetRankList.verify|verify} messages.
         * @param message C2SGetRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetRankList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetRankList message, length delimited. Does not implicitly {@link pb.C2SGetRankList.verify|verify} messages.
         * @param message C2SGetRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetRankList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetRankList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetRankList;

        /**
         * Decodes a C2SGetRankList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetRankList;

        /**
         * Verifies a C2SGetRankList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetRankList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetRankList
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetRankList;

        /**
         * Creates a plain object from a C2SGetRankList message. Also converts values to other types if specified.
         * @param message C2SGetRankList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetRankList, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetRankList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetRankList. */
    interface IS2CGetRankList {

        /** S2CGetRankList cat */
        cat?: (pb.RankCat|null);

        /** S2CGetRankList todayData */
        todayData?: (pb.ICatRankItem|null);

        /** S2CGetRankList yesData */
        yesData?: (pb.ICatRankItem|null);
    }

    /** Represents a S2CGetRankList. */
    class S2CGetRankList implements IS2CGetRankList {

        /**
         * Constructs a new S2CGetRankList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetRankList);

        /** S2CGetRankList cat. */
        public cat: pb.RankCat;

        /** S2CGetRankList todayData. */
        public todayData?: (pb.ICatRankItem|null);

        /** S2CGetRankList yesData. */
        public yesData?: (pb.ICatRankItem|null);

        /**
         * Creates a new S2CGetRankList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetRankList instance
         */
        public static create(properties?: pb.IS2CGetRankList): pb.S2CGetRankList;

        /**
         * Encodes the specified S2CGetRankList message. Does not implicitly {@link pb.S2CGetRankList.verify|verify} messages.
         * @param message S2CGetRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetRankList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetRankList message, length delimited. Does not implicitly {@link pb.S2CGetRankList.verify|verify} messages.
         * @param message S2CGetRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetRankList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetRankList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetRankList;

        /**
         * Decodes a S2CGetRankList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetRankList;

        /**
         * Verifies a S2CGetRankList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetRankList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetRankList
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetRankList;

        /**
         * Creates a plain object from a S2CGetRankList message. Also converts values to other types if specified.
         * @param message S2CGetRankList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetRankList, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetRankList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetRankReward. */
    interface IC2SGetRankReward {

        /** C2SGetRankReward cat */
        cat?: (pb.RankCat|null);
    }

    /** Represents a C2SGetRankReward. */
    class C2SGetRankReward implements IC2SGetRankReward {

        /**
         * Constructs a new C2SGetRankReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetRankReward);

        /** C2SGetRankReward cat. */
        public cat: pb.RankCat;

        /**
         * Creates a new C2SGetRankReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetRankReward instance
         */
        public static create(properties?: pb.IC2SGetRankReward): pb.C2SGetRankReward;

        /**
         * Encodes the specified C2SGetRankReward message. Does not implicitly {@link pb.C2SGetRankReward.verify|verify} messages.
         * @param message C2SGetRankReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetRankReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetRankReward message, length delimited. Does not implicitly {@link pb.C2SGetRankReward.verify|verify} messages.
         * @param message C2SGetRankReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetRankReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetRankReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetRankReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetRankReward;

        /**
         * Decodes a C2SGetRankReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetRankReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetRankReward;

        /**
         * Verifies a C2SGetRankReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetRankReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetRankReward
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetRankReward;

        /**
         * Creates a plain object from a C2SGetRankReward message. Also converts values to other types if specified.
         * @param message C2SGetRankReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetRankReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetRankReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SRankRewardCfgs. */
    interface IC2SRankRewardCfgs {
    }

    /** Represents a C2SRankRewardCfgs. */
    class C2SRankRewardCfgs implements IC2SRankRewardCfgs {

        /**
         * Constructs a new C2SRankRewardCfgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SRankRewardCfgs);

        /**
         * Creates a new C2SRankRewardCfgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SRankRewardCfgs instance
         */
        public static create(properties?: pb.IC2SRankRewardCfgs): pb.C2SRankRewardCfgs;

        /**
         * Encodes the specified C2SRankRewardCfgs message. Does not implicitly {@link pb.C2SRankRewardCfgs.verify|verify} messages.
         * @param message C2SRankRewardCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SRankRewardCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SRankRewardCfgs message, length delimited. Does not implicitly {@link pb.C2SRankRewardCfgs.verify|verify} messages.
         * @param message C2SRankRewardCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SRankRewardCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SRankRewardCfgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SRankRewardCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SRankRewardCfgs;

        /**
         * Decodes a C2SRankRewardCfgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SRankRewardCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SRankRewardCfgs;

        /**
         * Verifies a C2SRankRewardCfgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SRankRewardCfgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SRankRewardCfgs
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SRankRewardCfgs;

        /**
         * Creates a plain object from a C2SRankRewardCfgs message. Also converts values to other types if specified.
         * @param message C2SRankRewardCfgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SRankRewardCfgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SRankRewardCfgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CRankRewardCfgs. */
    interface IS2CRankRewardCfgs {

        /** S2CRankRewardCfgs items */
        items?: (pb.IRankRewardCfg[]|null);
    }

    /** Represents a S2CRankRewardCfgs. */
    class S2CRankRewardCfgs implements IS2CRankRewardCfgs {

        /**
         * Constructs a new S2CRankRewardCfgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CRankRewardCfgs);

        /** S2CRankRewardCfgs items. */
        public items: pb.IRankRewardCfg[];

        /**
         * Creates a new S2CRankRewardCfgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CRankRewardCfgs instance
         */
        public static create(properties?: pb.IS2CRankRewardCfgs): pb.S2CRankRewardCfgs;

        /**
         * Encodes the specified S2CRankRewardCfgs message. Does not implicitly {@link pb.S2CRankRewardCfgs.verify|verify} messages.
         * @param message S2CRankRewardCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CRankRewardCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CRankRewardCfgs message, length delimited. Does not implicitly {@link pb.S2CRankRewardCfgs.verify|verify} messages.
         * @param message S2CRankRewardCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CRankRewardCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CRankRewardCfgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CRankRewardCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CRankRewardCfgs;

        /**
         * Decodes a S2CRankRewardCfgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CRankRewardCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CRankRewardCfgs;

        /**
         * Verifies a S2CRankRewardCfgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CRankRewardCfgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CRankRewardCfgs
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CRankRewardCfgs;

        /**
         * Creates a plain object from a S2CRankRewardCfgs message. Also converts values to other types if specified.
         * @param message S2CRankRewardCfgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CRankRewardCfgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CRankRewardCfgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankItem. */
    interface IRankItem {

        /** RankItem date */
        date?: (number|null);

        /** RankItem cat */
        cat?: (number|null);

        /** RankItem player */
        player?: (pb.IPlayerShowBase|null);

        /** RankItem value */
        value?: (number|Long|null);

        /** RankItem rank */
        rank?: (number|null);
    }

    /** Represents a RankItem. */
    class RankItem implements IRankItem {

        /**
         * Constructs a new RankItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRankItem);

        /** RankItem date. */
        public date: number;

        /** RankItem cat. */
        public cat: number;

        /** RankItem player. */
        public player?: (pb.IPlayerShowBase|null);

        /** RankItem value. */
        public value: (number|Long);

        /** RankItem rank. */
        public rank: number;

        /**
         * Creates a new RankItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankItem instance
         */
        public static create(properties?: pb.IRankItem): pb.RankItem;

        /**
         * Encodes the specified RankItem message. Does not implicitly {@link pb.RankItem.verify|verify} messages.
         * @param message RankItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRankItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankItem message, length delimited. Does not implicitly {@link pb.RankItem.verify|verify} messages.
         * @param message RankItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRankItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.RankItem;

        /**
         * Decodes a RankItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.RankItem;

        /**
         * Verifies a RankItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankItem
         */
        public static fromObject(object: { [k: string]: any }): pb.RankItem;

        /**
         * Creates a plain object from a RankItem message. Also converts values to other types if specified.
         * @param message RankItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.RankItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CatRankItem. */
    interface ICatRankItem {

        /** CatRankItem cat */
        cat?: (number|null);

        /** CatRankItem items */
        items?: (pb.IRankItem[]|null);
    }

    /** Represents a CatRankItem. */
    class CatRankItem implements ICatRankItem {

        /**
         * Constructs a new CatRankItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICatRankItem);

        /** CatRankItem cat. */
        public cat: number;

        /** CatRankItem items. */
        public items: pb.IRankItem[];

        /**
         * Creates a new CatRankItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CatRankItem instance
         */
        public static create(properties?: pb.ICatRankItem): pb.CatRankItem;

        /**
         * Encodes the specified CatRankItem message. Does not implicitly {@link pb.CatRankItem.verify|verify} messages.
         * @param message CatRankItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICatRankItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CatRankItem message, length delimited. Does not implicitly {@link pb.CatRankItem.verify|verify} messages.
         * @param message CatRankItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICatRankItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CatRankItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CatRankItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.CatRankItem;

        /**
         * Decodes a CatRankItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CatRankItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.CatRankItem;

        /**
         * Verifies a CatRankItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CatRankItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CatRankItem
         */
        public static fromObject(object: { [k: string]: any }): pb.CatRankItem;

        /**
         * Creates a plain object from a CatRankItem message. Also converts values to other types if specified.
         * @param message CatRankItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.CatRankItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CatRankItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RankRewardCfg. */
    interface IRankRewardCfg {

        /** RankRewardCfg id */
        id?: (number|null);

        /** RankRewardCfg cat */
        cat?: (number|null);

        /** RankRewardCfg rankStart */
        rankStart?: (number|null);

        /** RankRewardCfg rankEnd */
        rankEnd?: (number|null);

        /** RankRewardCfg rewards */
        rewards?: ({ [k: string]: (number|Long) }|null);

        /** RankRewardCfg mailId */
        mailId?: (number|null);
    }

    /** Represents a RankRewardCfg. */
    class RankRewardCfg implements IRankRewardCfg {

        /**
         * Constructs a new RankRewardCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IRankRewardCfg);

        /** RankRewardCfg id. */
        public id: number;

        /** RankRewardCfg cat. */
        public cat: number;

        /** RankRewardCfg rankStart. */
        public rankStart: number;

        /** RankRewardCfg rankEnd. */
        public rankEnd: number;

        /** RankRewardCfg rewards. */
        public rewards: { [k: string]: (number|Long) };

        /** RankRewardCfg mailId. */
        public mailId: number;

        /**
         * Creates a new RankRewardCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RankRewardCfg instance
         */
        public static create(properties?: pb.IRankRewardCfg): pb.RankRewardCfg;

        /**
         * Encodes the specified RankRewardCfg message. Does not implicitly {@link pb.RankRewardCfg.verify|verify} messages.
         * @param message RankRewardCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IRankRewardCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RankRewardCfg message, length delimited. Does not implicitly {@link pb.RankRewardCfg.verify|verify} messages.
         * @param message RankRewardCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IRankRewardCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RankRewardCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RankRewardCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.RankRewardCfg;

        /**
         * Decodes a RankRewardCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RankRewardCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.RankRewardCfg;

        /**
         * Verifies a RankRewardCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RankRewardCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RankRewardCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.RankRewardCfg;

        /**
         * Creates a plain object from a RankRewardCfg message. Also converts values to other types if specified.
         * @param message RankRewardCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.RankRewardCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RankRewardCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** RedDotId enum. */
    enum RedDotId {
        RedDotId_Null = 0,
        RedDotId_Mail = 1,
        RedDotId_Shop = 2,
        RedDotId_RankList = 3,
        RedDotId_SignIn = 4,
        RedDotId_Lottery = 5,
        RedDotId_Bag = 6,
        RedDotId_Money = 7,
        RedDotId_Achiev = 8,
        RedDotId_Act = 9,
        RedDotId_TimedLogin = 10,
        RedDotId_Set = 11
    }

    /** Properties of a S2CRedDotChange. */
    interface IS2CRedDotChange {

        /** S2CRedDotChange id */
        id?: (pb.RedDotId|null);
    }

    /** Represents a S2CRedDotChange. */
    class S2CRedDotChange implements IS2CRedDotChange {

        /**
         * Constructs a new S2CRedDotChange.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CRedDotChange);

        /** S2CRedDotChange id. */
        public id: pb.RedDotId;

        /**
         * Creates a new S2CRedDotChange instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CRedDotChange instance
         */
        public static create(properties?: pb.IS2CRedDotChange): pb.S2CRedDotChange;

        /**
         * Encodes the specified S2CRedDotChange message. Does not implicitly {@link pb.S2CRedDotChange.verify|verify} messages.
         * @param message S2CRedDotChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CRedDotChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CRedDotChange message, length delimited. Does not implicitly {@link pb.S2CRedDotChange.verify|verify} messages.
         * @param message S2CRedDotChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CRedDotChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CRedDotChange message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CRedDotChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CRedDotChange;

        /**
         * Decodes a S2CRedDotChange message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CRedDotChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CRedDotChange;

        /**
         * Verifies a S2CRedDotChange message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CRedDotChange message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CRedDotChange
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CRedDotChange;

        /**
         * Creates a plain object from a S2CRedDotChange message. Also converts values to other types if specified.
         * @param message S2CRedDotChange
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CRedDotChange, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CRedDotChange to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CSafeBox. */
    interface IS2CSafeBox {

        /** S2CSafeBox value */
        value?: (Uint8Array|null);
    }

    /** Represents a S2CSafeBox. */
    class S2CSafeBox implements IS2CSafeBox {

        /**
         * Constructs a new S2CSafeBox.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CSafeBox);

        /** S2CSafeBox value. */
        public value: Uint8Array;

        /**
         * Creates a new S2CSafeBox instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CSafeBox instance
         */
        public static create(properties?: pb.IS2CSafeBox): pb.S2CSafeBox;

        /**
         * Encodes the specified S2CSafeBox message. Does not implicitly {@link pb.S2CSafeBox.verify|verify} messages.
         * @param message S2CSafeBox message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CSafeBox, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CSafeBox message, length delimited. Does not implicitly {@link pb.S2CSafeBox.verify|verify} messages.
         * @param message S2CSafeBox message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CSafeBox, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CSafeBox message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CSafeBox
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CSafeBox;

        /**
         * Decodes a S2CSafeBox message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CSafeBox
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CSafeBox;

        /**
         * Verifies a S2CSafeBox message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CSafeBox message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CSafeBox
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CSafeBox;

        /**
         * Creates a plain object from a S2CSafeBox message. Also converts values to other types if specified.
         * @param message S2CSafeBox
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CSafeBox, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CSafeBox to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SInSafeBox. */
    interface IC2SInSafeBox {

        /** C2SInSafeBox coin */
        coin?: (number|Long|null);
    }

    /** Represents a C2SInSafeBox. */
    class C2SInSafeBox implements IC2SInSafeBox {

        /**
         * Constructs a new C2SInSafeBox.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SInSafeBox);

        /** C2SInSafeBox coin. */
        public coin: (number|Long);

        /**
         * Creates a new C2SInSafeBox instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SInSafeBox instance
         */
        public static create(properties?: pb.IC2SInSafeBox): pb.C2SInSafeBox;

        /**
         * Encodes the specified C2SInSafeBox message. Does not implicitly {@link pb.C2SInSafeBox.verify|verify} messages.
         * @param message C2SInSafeBox message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SInSafeBox, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SInSafeBox message, length delimited. Does not implicitly {@link pb.C2SInSafeBox.verify|verify} messages.
         * @param message C2SInSafeBox message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SInSafeBox, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SInSafeBox message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SInSafeBox
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SInSafeBox;

        /**
         * Decodes a C2SInSafeBox message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SInSafeBox
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SInSafeBox;

        /**
         * Verifies a C2SInSafeBox message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SInSafeBox message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SInSafeBox
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SInSafeBox;

        /**
         * Creates a plain object from a C2SInSafeBox message. Also converts values to other types if specified.
         * @param message C2SInSafeBox
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SInSafeBox, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SInSafeBox to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CInSafeBox. */
    interface IS2CInSafeBox {

        /** S2CInSafeBox ec */
        ec?: (number|null);
    }

    /** Represents a S2CInSafeBox. */
    class S2CInSafeBox implements IS2CInSafeBox {

        /**
         * Constructs a new S2CInSafeBox.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CInSafeBox);

        /** S2CInSafeBox ec. */
        public ec: number;

        /**
         * Creates a new S2CInSafeBox instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CInSafeBox instance
         */
        public static create(properties?: pb.IS2CInSafeBox): pb.S2CInSafeBox;

        /**
         * Encodes the specified S2CInSafeBox message. Does not implicitly {@link pb.S2CInSafeBox.verify|verify} messages.
         * @param message S2CInSafeBox message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CInSafeBox, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CInSafeBox message, length delimited. Does not implicitly {@link pb.S2CInSafeBox.verify|verify} messages.
         * @param message S2CInSafeBox message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CInSafeBox, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CInSafeBox message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CInSafeBox
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CInSafeBox;

        /**
         * Decodes a S2CInSafeBox message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CInSafeBox
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CInSafeBox;

        /**
         * Verifies a S2CInSafeBox message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CInSafeBox message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CInSafeBox
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CInSafeBox;

        /**
         * Creates a plain object from a S2CInSafeBox message. Also converts values to other types if specified.
         * @param message S2CInSafeBox
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CInSafeBox, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CInSafeBox to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SOutSafeBox. */
    interface IC2SOutSafeBox {

        /** C2SOutSafeBox coin */
        coin?: (number|Long|null);
    }

    /** Represents a C2SOutSafeBox. */
    class C2SOutSafeBox implements IC2SOutSafeBox {

        /**
         * Constructs a new C2SOutSafeBox.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SOutSafeBox);

        /** C2SOutSafeBox coin. */
        public coin: (number|Long);

        /**
         * Creates a new C2SOutSafeBox instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SOutSafeBox instance
         */
        public static create(properties?: pb.IC2SOutSafeBox): pb.C2SOutSafeBox;

        /**
         * Encodes the specified C2SOutSafeBox message. Does not implicitly {@link pb.C2SOutSafeBox.verify|verify} messages.
         * @param message C2SOutSafeBox message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SOutSafeBox, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SOutSafeBox message, length delimited. Does not implicitly {@link pb.C2SOutSafeBox.verify|verify} messages.
         * @param message C2SOutSafeBox message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SOutSafeBox, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SOutSafeBox message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SOutSafeBox
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SOutSafeBox;

        /**
         * Decodes a C2SOutSafeBox message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SOutSafeBox
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SOutSafeBox;

        /**
         * Verifies a C2SOutSafeBox message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SOutSafeBox message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SOutSafeBox
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SOutSafeBox;

        /**
         * Creates a plain object from a C2SOutSafeBox message. Also converts values to other types if specified.
         * @param message C2SOutSafeBox
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SOutSafeBox, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SOutSafeBox to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2COutSafeBox. */
    interface IS2COutSafeBox {

        /** S2COutSafeBox ec */
        ec?: (number|null);
    }

    /** Represents a S2COutSafeBox. */
    class S2COutSafeBox implements IS2COutSafeBox {

        /**
         * Constructs a new S2COutSafeBox.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2COutSafeBox);

        /** S2COutSafeBox ec. */
        public ec: number;

        /**
         * Creates a new S2COutSafeBox instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2COutSafeBox instance
         */
        public static create(properties?: pb.IS2COutSafeBox): pb.S2COutSafeBox;

        /**
         * Encodes the specified S2COutSafeBox message. Does not implicitly {@link pb.S2COutSafeBox.verify|verify} messages.
         * @param message S2COutSafeBox message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2COutSafeBox, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2COutSafeBox message, length delimited. Does not implicitly {@link pb.S2COutSafeBox.verify|verify} messages.
         * @param message S2COutSafeBox message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2COutSafeBox, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2COutSafeBox message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2COutSafeBox
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2COutSafeBox;

        /**
         * Decodes a S2COutSafeBox message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2COutSafeBox
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2COutSafeBox;

        /**
         * Verifies a S2COutSafeBox message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2COutSafeBox message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2COutSafeBox
         */
        public static fromObject(object: { [k: string]: any }): pb.S2COutSafeBox;

        /**
         * Creates a plain object from a S2COutSafeBox message. Also converts values to other types if specified.
         * @param message S2COutSafeBox
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2COutSafeBox, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2COutSafeBox to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetScoreTop. */
    interface IC2SGetScoreTop {

        /** C2SGetScoreTop scoreType */
        scoreType?: (pb.ScoreType|null);
    }

    /** Represents a C2SGetScoreTop. */
    class C2SGetScoreTop implements IC2SGetScoreTop {

        /**
         * Constructs a new C2SGetScoreTop.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetScoreTop);

        /** C2SGetScoreTop scoreType. */
        public scoreType: pb.ScoreType;

        /**
         * Creates a new C2SGetScoreTop instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetScoreTop instance
         */
        public static create(properties?: pb.IC2SGetScoreTop): pb.C2SGetScoreTop;

        /**
         * Encodes the specified C2SGetScoreTop message. Does not implicitly {@link pb.C2SGetScoreTop.verify|verify} messages.
         * @param message C2SGetScoreTop message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetScoreTop, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetScoreTop message, length delimited. Does not implicitly {@link pb.C2SGetScoreTop.verify|verify} messages.
         * @param message C2SGetScoreTop message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetScoreTop, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetScoreTop message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetScoreTop
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetScoreTop;

        /**
         * Decodes a C2SGetScoreTop message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetScoreTop
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetScoreTop;

        /**
         * Verifies a C2SGetScoreTop message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetScoreTop message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetScoreTop
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetScoreTop;

        /**
         * Creates a plain object from a C2SGetScoreTop message. Also converts values to other types if specified.
         * @param message C2SGetScoreTop
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetScoreTop, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetScoreTop to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetScoreTop. */
    interface IS2CGetScoreTop {

        /** S2CGetScoreTop scoreType */
        scoreType?: (pb.ScoreType|null);

        /** S2CGetScoreTop items */
        items?: (pb.IScoreTopData[]|null);
    }

    /** Represents a S2CGetScoreTop. */
    class S2CGetScoreTop implements IS2CGetScoreTop {

        /**
         * Constructs a new S2CGetScoreTop.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetScoreTop);

        /** S2CGetScoreTop scoreType. */
        public scoreType: pb.ScoreType;

        /** S2CGetScoreTop items. */
        public items: pb.IScoreTopData[];

        /**
         * Creates a new S2CGetScoreTop instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetScoreTop instance
         */
        public static create(properties?: pb.IS2CGetScoreTop): pb.S2CGetScoreTop;

        /**
         * Encodes the specified S2CGetScoreTop message. Does not implicitly {@link pb.S2CGetScoreTop.verify|verify} messages.
         * @param message S2CGetScoreTop message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetScoreTop, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetScoreTop message, length delimited. Does not implicitly {@link pb.S2CGetScoreTop.verify|verify} messages.
         * @param message S2CGetScoreTop message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetScoreTop, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetScoreTop message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetScoreTop
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetScoreTop;

        /**
         * Decodes a S2CGetScoreTop message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetScoreTop
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetScoreTop;

        /**
         * Verifies a S2CGetScoreTop message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetScoreTop message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetScoreTop
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetScoreTop;

        /**
         * Creates a plain object from a S2CGetScoreTop message. Also converts values to other types if specified.
         * @param message S2CGetScoreTop
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetScoreTop, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetScoreTop to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetScoreRewardList. */
    interface IC2SGetScoreRewardList {

        /** C2SGetScoreRewardList scoreType */
        scoreType?: (pb.ScoreType|null);
    }

    /** Represents a C2SGetScoreRewardList. */
    class C2SGetScoreRewardList implements IC2SGetScoreRewardList {

        /**
         * Constructs a new C2SGetScoreRewardList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetScoreRewardList);

        /** C2SGetScoreRewardList scoreType. */
        public scoreType: pb.ScoreType;

        /**
         * Creates a new C2SGetScoreRewardList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetScoreRewardList instance
         */
        public static create(properties?: pb.IC2SGetScoreRewardList): pb.C2SGetScoreRewardList;

        /**
         * Encodes the specified C2SGetScoreRewardList message. Does not implicitly {@link pb.C2SGetScoreRewardList.verify|verify} messages.
         * @param message C2SGetScoreRewardList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetScoreRewardList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetScoreRewardList message, length delimited. Does not implicitly {@link pb.C2SGetScoreRewardList.verify|verify} messages.
         * @param message C2SGetScoreRewardList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetScoreRewardList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetScoreRewardList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetScoreRewardList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetScoreRewardList;

        /**
         * Decodes a C2SGetScoreRewardList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetScoreRewardList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetScoreRewardList;

        /**
         * Verifies a C2SGetScoreRewardList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetScoreRewardList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetScoreRewardList
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetScoreRewardList;

        /**
         * Creates a plain object from a C2SGetScoreRewardList message. Also converts values to other types if specified.
         * @param message C2SGetScoreRewardList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetScoreRewardList, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetScoreRewardList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetScoreRewardList. */
    interface IS2CGetScoreRewardList {

        /** S2CGetScoreRewardList scoreType */
        scoreType?: (pb.ScoreType|null);

        /** S2CGetScoreRewardList items */
        items?: (pb.IScoreTopData[]|null);
    }

    /** Represents a S2CGetScoreRewardList. */
    class S2CGetScoreRewardList implements IS2CGetScoreRewardList {

        /**
         * Constructs a new S2CGetScoreRewardList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetScoreRewardList);

        /** S2CGetScoreRewardList scoreType. */
        public scoreType: pb.ScoreType;

        /** S2CGetScoreRewardList items. */
        public items: pb.IScoreTopData[];

        /**
         * Creates a new S2CGetScoreRewardList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetScoreRewardList instance
         */
        public static create(properties?: pb.IS2CGetScoreRewardList): pb.S2CGetScoreRewardList;

        /**
         * Encodes the specified S2CGetScoreRewardList message. Does not implicitly {@link pb.S2CGetScoreRewardList.verify|verify} messages.
         * @param message S2CGetScoreRewardList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetScoreRewardList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetScoreRewardList message, length delimited. Does not implicitly {@link pb.S2CGetScoreRewardList.verify|verify} messages.
         * @param message S2CGetScoreRewardList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetScoreRewardList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetScoreRewardList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetScoreRewardList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetScoreRewardList;

        /**
         * Decodes a S2CGetScoreRewardList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetScoreRewardList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetScoreRewardList;

        /**
         * Verifies a S2CGetScoreRewardList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetScoreRewardList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetScoreRewardList
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetScoreRewardList;

        /**
         * Creates a plain object from a S2CGetScoreRewardList message. Also converts values to other types if specified.
         * @param message S2CGetScoreRewardList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetScoreRewardList, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetScoreRewardList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetScoreReward. */
    interface IC2SGetScoreReward {

        /** C2SGetScoreReward scoreType */
        scoreType?: (pb.ScoreType|null);

        /** C2SGetScoreReward date */
        date?: (number|Long|null);
    }

    /** Represents a C2SGetScoreReward. */
    class C2SGetScoreReward implements IC2SGetScoreReward {

        /**
         * Constructs a new C2SGetScoreReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetScoreReward);

        /** C2SGetScoreReward scoreType. */
        public scoreType: pb.ScoreType;

        /** C2SGetScoreReward date. */
        public date: (number|Long);

        /**
         * Creates a new C2SGetScoreReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetScoreReward instance
         */
        public static create(properties?: pb.IC2SGetScoreReward): pb.C2SGetScoreReward;

        /**
         * Encodes the specified C2SGetScoreReward message. Does not implicitly {@link pb.C2SGetScoreReward.verify|verify} messages.
         * @param message C2SGetScoreReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetScoreReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetScoreReward message, length delimited. Does not implicitly {@link pb.C2SGetScoreReward.verify|verify} messages.
         * @param message C2SGetScoreReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetScoreReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetScoreReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetScoreReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetScoreReward;

        /**
         * Decodes a C2SGetScoreReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetScoreReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetScoreReward;

        /**
         * Verifies a C2SGetScoreReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetScoreReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetScoreReward
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetScoreReward;

        /**
         * Creates a plain object from a C2SGetScoreReward message. Also converts values to other types if specified.
         * @param message C2SGetScoreReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetScoreReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetScoreReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetScoreReward. */
    interface IS2CGetScoreReward {

        /** S2CGetScoreReward scoreType */
        scoreType?: (pb.ScoreType|null);

        /** S2CGetScoreReward date */
        date?: (number|Long|null);

        /** S2CGetScoreReward ec */
        ec?: (number|null);
    }

    /** Represents a S2CGetScoreReward. */
    class S2CGetScoreReward implements IS2CGetScoreReward {

        /**
         * Constructs a new S2CGetScoreReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetScoreReward);

        /** S2CGetScoreReward scoreType. */
        public scoreType: pb.ScoreType;

        /** S2CGetScoreReward date. */
        public date: (number|Long);

        /** S2CGetScoreReward ec. */
        public ec: number;

        /**
         * Creates a new S2CGetScoreReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetScoreReward instance
         */
        public static create(properties?: pb.IS2CGetScoreReward): pb.S2CGetScoreReward;

        /**
         * Encodes the specified S2CGetScoreReward message. Does not implicitly {@link pb.S2CGetScoreReward.verify|verify} messages.
         * @param message S2CGetScoreReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetScoreReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetScoreReward message, length delimited. Does not implicitly {@link pb.S2CGetScoreReward.verify|verify} messages.
         * @param message S2CGetScoreReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetScoreReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetScoreReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetScoreReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetScoreReward;

        /**
         * Decodes a S2CGetScoreReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetScoreReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetScoreReward;

        /**
         * Verifies a S2CGetScoreReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetScoreReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetScoreReward
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetScoreReward;

        /**
         * Creates a plain object from a S2CGetScoreReward message. Also converts values to other types if specified.
         * @param message S2CGetScoreReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetScoreReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetScoreReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SWithdrawScore. */
    interface IC2SWithdrawScore {

        /** C2SWithdrawScore scoreType */
        scoreType?: (pb.ScoreType|null);

        /** C2SWithdrawScore amount */
        amount?: (number|null);

        /** C2SWithdrawScore wxCode */
        wxCode?: (string|null);
    }

    /** Represents a C2SWithdrawScore. */
    class C2SWithdrawScore implements IC2SWithdrawScore {

        /**
         * Constructs a new C2SWithdrawScore.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SWithdrawScore);

        /** C2SWithdrawScore scoreType. */
        public scoreType: pb.ScoreType;

        /** C2SWithdrawScore amount. */
        public amount: number;

        /** C2SWithdrawScore wxCode. */
        public wxCode: string;

        /**
         * Creates a new C2SWithdrawScore instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SWithdrawScore instance
         */
        public static create(properties?: pb.IC2SWithdrawScore): pb.C2SWithdrawScore;

        /**
         * Encodes the specified C2SWithdrawScore message. Does not implicitly {@link pb.C2SWithdrawScore.verify|verify} messages.
         * @param message C2SWithdrawScore message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SWithdrawScore, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SWithdrawScore message, length delimited. Does not implicitly {@link pb.C2SWithdrawScore.verify|verify} messages.
         * @param message C2SWithdrawScore message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SWithdrawScore, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SWithdrawScore message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SWithdrawScore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SWithdrawScore;

        /**
         * Decodes a C2SWithdrawScore message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SWithdrawScore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SWithdrawScore;

        /**
         * Verifies a C2SWithdrawScore message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SWithdrawScore message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SWithdrawScore
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SWithdrawScore;

        /**
         * Creates a plain object from a C2SWithdrawScore message. Also converts values to other types if specified.
         * @param message C2SWithdrawScore
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SWithdrawScore, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SWithdrawScore to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CWithdrawScore. */
    interface IS2CWithdrawScore {

        /** S2CWithdrawScore scoreType */
        scoreType?: (pb.ScoreType|null);

        /** S2CWithdrawScore amount */
        amount?: (number|null);

        /** S2CWithdrawScore ec */
        ec?: (number|null);
    }

    /** Represents a S2CWithdrawScore. */
    class S2CWithdrawScore implements IS2CWithdrawScore {

        /**
         * Constructs a new S2CWithdrawScore.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CWithdrawScore);

        /** S2CWithdrawScore scoreType. */
        public scoreType: pb.ScoreType;

        /** S2CWithdrawScore amount. */
        public amount: number;

        /** S2CWithdrawScore ec. */
        public ec: number;

        /**
         * Creates a new S2CWithdrawScore instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CWithdrawScore instance
         */
        public static create(properties?: pb.IS2CWithdrawScore): pb.S2CWithdrawScore;

        /**
         * Encodes the specified S2CWithdrawScore message. Does not implicitly {@link pb.S2CWithdrawScore.verify|verify} messages.
         * @param message S2CWithdrawScore message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CWithdrawScore, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CWithdrawScore message, length delimited. Does not implicitly {@link pb.S2CWithdrawScore.verify|verify} messages.
         * @param message S2CWithdrawScore message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CWithdrawScore, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CWithdrawScore message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CWithdrawScore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CWithdrawScore;

        /**
         * Decodes a S2CWithdrawScore message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CWithdrawScore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CWithdrawScore;

        /**
         * Verifies a S2CWithdrawScore message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CWithdrawScore message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CWithdrawScore
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CWithdrawScore;

        /**
         * Creates a plain object from a S2CWithdrawScore message. Also converts values to other types if specified.
         * @param message S2CWithdrawScore
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CWithdrawScore, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CWithdrawScore to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SHfqRecharge. */
    interface IC2SHfqRecharge {

        /** C2SHfqRecharge phone */
        phone?: (string|null);

        /** C2SHfqRecharge amount */
        amount?: (number|null);
    }

    /** Represents a C2SHfqRecharge. */
    class C2SHfqRecharge implements IC2SHfqRecharge {

        /**
         * Constructs a new C2SHfqRecharge.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SHfqRecharge);

        /** C2SHfqRecharge phone. */
        public phone: string;

        /** C2SHfqRecharge amount. */
        public amount: number;

        /**
         * Creates a new C2SHfqRecharge instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SHfqRecharge instance
         */
        public static create(properties?: pb.IC2SHfqRecharge): pb.C2SHfqRecharge;

        /**
         * Encodes the specified C2SHfqRecharge message. Does not implicitly {@link pb.C2SHfqRecharge.verify|verify} messages.
         * @param message C2SHfqRecharge message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SHfqRecharge, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SHfqRecharge message, length delimited. Does not implicitly {@link pb.C2SHfqRecharge.verify|verify} messages.
         * @param message C2SHfqRecharge message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SHfqRecharge, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SHfqRecharge message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SHfqRecharge
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SHfqRecharge;

        /**
         * Decodes a C2SHfqRecharge message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SHfqRecharge
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SHfqRecharge;

        /**
         * Verifies a C2SHfqRecharge message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SHfqRecharge message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SHfqRecharge
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SHfqRecharge;

        /**
         * Creates a plain object from a C2SHfqRecharge message. Also converts values to other types if specified.
         * @param message C2SHfqRecharge
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SHfqRecharge, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SHfqRecharge to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CHfqRecharge. */
    interface IS2CHfqRecharge {

        /** S2CHfqRecharge phone */
        phone?: (string|null);

        /** S2CHfqRecharge amount */
        amount?: (number|null);

        /** S2CHfqRecharge ec */
        ec?: (number|null);
    }

    /** Represents a S2CHfqRecharge. */
    class S2CHfqRecharge implements IS2CHfqRecharge {

        /**
         * Constructs a new S2CHfqRecharge.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CHfqRecharge);

        /** S2CHfqRecharge phone. */
        public phone: string;

        /** S2CHfqRecharge amount. */
        public amount: number;

        /** S2CHfqRecharge ec. */
        public ec: number;

        /**
         * Creates a new S2CHfqRecharge instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CHfqRecharge instance
         */
        public static create(properties?: pb.IS2CHfqRecharge): pb.S2CHfqRecharge;

        /**
         * Encodes the specified S2CHfqRecharge message. Does not implicitly {@link pb.S2CHfqRecharge.verify|verify} messages.
         * @param message S2CHfqRecharge message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CHfqRecharge, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CHfqRecharge message, length delimited. Does not implicitly {@link pb.S2CHfqRecharge.verify|verify} messages.
         * @param message S2CHfqRecharge message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CHfqRecharge, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CHfqRecharge message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CHfqRecharge
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CHfqRecharge;

        /**
         * Decodes a S2CHfqRecharge message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CHfqRecharge
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CHfqRecharge;

        /**
         * Verifies a S2CHfqRecharge message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CHfqRecharge message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CHfqRecharge
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CHfqRecharge;

        /**
         * Creates a plain object from a S2CHfqRecharge message. Also converts values to other types if specified.
         * @param message S2CHfqRecharge
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CHfqRecharge, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CHfqRecharge to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SWithdrawScoreLog. */
    interface IC2SWithdrawScoreLog {
    }

    /** Represents a C2SWithdrawScoreLog. */
    class C2SWithdrawScoreLog implements IC2SWithdrawScoreLog {

        /**
         * Constructs a new C2SWithdrawScoreLog.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SWithdrawScoreLog);

        /**
         * Creates a new C2SWithdrawScoreLog instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SWithdrawScoreLog instance
         */
        public static create(properties?: pb.IC2SWithdrawScoreLog): pb.C2SWithdrawScoreLog;

        /**
         * Encodes the specified C2SWithdrawScoreLog message. Does not implicitly {@link pb.C2SWithdrawScoreLog.verify|verify} messages.
         * @param message C2SWithdrawScoreLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SWithdrawScoreLog, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SWithdrawScoreLog message, length delimited. Does not implicitly {@link pb.C2SWithdrawScoreLog.verify|verify} messages.
         * @param message C2SWithdrawScoreLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SWithdrawScoreLog, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SWithdrawScoreLog message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SWithdrawScoreLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SWithdrawScoreLog;

        /**
         * Decodes a C2SWithdrawScoreLog message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SWithdrawScoreLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SWithdrawScoreLog;

        /**
         * Verifies a C2SWithdrawScoreLog message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SWithdrawScoreLog message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SWithdrawScoreLog
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SWithdrawScoreLog;

        /**
         * Creates a plain object from a C2SWithdrawScoreLog message. Also converts values to other types if specified.
         * @param message C2SWithdrawScoreLog
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SWithdrawScoreLog, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SWithdrawScoreLog to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CWithdrawScoreLog. */
    interface IS2CWithdrawScoreLog {

        /** S2CWithdrawScoreLog items */
        items?: (pb.IWithScoreLogItem[]|null);
    }

    /** Represents a S2CWithdrawScoreLog. */
    class S2CWithdrawScoreLog implements IS2CWithdrawScoreLog {

        /**
         * Constructs a new S2CWithdrawScoreLog.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CWithdrawScoreLog);

        /** S2CWithdrawScoreLog items. */
        public items: pb.IWithScoreLogItem[];

        /**
         * Creates a new S2CWithdrawScoreLog instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CWithdrawScoreLog instance
         */
        public static create(properties?: pb.IS2CWithdrawScoreLog): pb.S2CWithdrawScoreLog;

        /**
         * Encodes the specified S2CWithdrawScoreLog message. Does not implicitly {@link pb.S2CWithdrawScoreLog.verify|verify} messages.
         * @param message S2CWithdrawScoreLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CWithdrawScoreLog, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CWithdrawScoreLog message, length delimited. Does not implicitly {@link pb.S2CWithdrawScoreLog.verify|verify} messages.
         * @param message S2CWithdrawScoreLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CWithdrawScoreLog, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CWithdrawScoreLog message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CWithdrawScoreLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CWithdrawScoreLog;

        /**
         * Decodes a S2CWithdrawScoreLog message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CWithdrawScoreLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CWithdrawScoreLog;

        /**
         * Verifies a S2CWithdrawScoreLog message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CWithdrawScoreLog message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CWithdrawScoreLog
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CWithdrawScoreLog;

        /**
         * Creates a plain object from a S2CWithdrawScoreLog message. Also converts values to other types if specified.
         * @param message S2CWithdrawScoreLog
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CWithdrawScoreLog, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CWithdrawScoreLog to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetHfqRechargeLog. */
    interface IC2SGetHfqRechargeLog {
    }

    /** Represents a C2SGetHfqRechargeLog. */
    class C2SGetHfqRechargeLog implements IC2SGetHfqRechargeLog {

        /**
         * Constructs a new C2SGetHfqRechargeLog.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetHfqRechargeLog);

        /**
         * Creates a new C2SGetHfqRechargeLog instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetHfqRechargeLog instance
         */
        public static create(properties?: pb.IC2SGetHfqRechargeLog): pb.C2SGetHfqRechargeLog;

        /**
         * Encodes the specified C2SGetHfqRechargeLog message. Does not implicitly {@link pb.C2SGetHfqRechargeLog.verify|verify} messages.
         * @param message C2SGetHfqRechargeLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetHfqRechargeLog, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetHfqRechargeLog message, length delimited. Does not implicitly {@link pb.C2SGetHfqRechargeLog.verify|verify} messages.
         * @param message C2SGetHfqRechargeLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetHfqRechargeLog, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetHfqRechargeLog message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetHfqRechargeLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetHfqRechargeLog;

        /**
         * Decodes a C2SGetHfqRechargeLog message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetHfqRechargeLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetHfqRechargeLog;

        /**
         * Verifies a C2SGetHfqRechargeLog message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetHfqRechargeLog message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetHfqRechargeLog
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetHfqRechargeLog;

        /**
         * Creates a plain object from a C2SGetHfqRechargeLog message. Also converts values to other types if specified.
         * @param message C2SGetHfqRechargeLog
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetHfqRechargeLog, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetHfqRechargeLog to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetHfqRechargeLog. */
    interface IS2CGetHfqRechargeLog {

        /** S2CGetHfqRechargeLog items */
        items?: (pb.IHfqRechargeLogItem[]|null);
    }

    /** Represents a S2CGetHfqRechargeLog. */
    class S2CGetHfqRechargeLog implements IS2CGetHfqRechargeLog {

        /**
         * Constructs a new S2CGetHfqRechargeLog.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetHfqRechargeLog);

        /** S2CGetHfqRechargeLog items. */
        public items: pb.IHfqRechargeLogItem[];

        /**
         * Creates a new S2CGetHfqRechargeLog instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetHfqRechargeLog instance
         */
        public static create(properties?: pb.IS2CGetHfqRechargeLog): pb.S2CGetHfqRechargeLog;

        /**
         * Encodes the specified S2CGetHfqRechargeLog message. Does not implicitly {@link pb.S2CGetHfqRechargeLog.verify|verify} messages.
         * @param message S2CGetHfqRechargeLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetHfqRechargeLog, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetHfqRechargeLog message, length delimited. Does not implicitly {@link pb.S2CGetHfqRechargeLog.verify|verify} messages.
         * @param message S2CGetHfqRechargeLog message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetHfqRechargeLog, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetHfqRechargeLog message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetHfqRechargeLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetHfqRechargeLog;

        /**
         * Decodes a S2CGetHfqRechargeLog message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetHfqRechargeLog
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetHfqRechargeLog;

        /**
         * Verifies a S2CGetHfqRechargeLog message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetHfqRechargeLog message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetHfqRechargeLog
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetHfqRechargeLog;

        /**
         * Creates a plain object from a S2CGetHfqRechargeLog message. Also converts values to other types if specified.
         * @param message S2CGetHfqRechargeLog
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetHfqRechargeLog, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetHfqRechargeLog to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetScoreRewardCfgs. */
    interface IC2SGetScoreRewardCfgs {
    }

    /** Represents a C2SGetScoreRewardCfgs. */
    class C2SGetScoreRewardCfgs implements IC2SGetScoreRewardCfgs {

        /**
         * Constructs a new C2SGetScoreRewardCfgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetScoreRewardCfgs);

        /**
         * Creates a new C2SGetScoreRewardCfgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetScoreRewardCfgs instance
         */
        public static create(properties?: pb.IC2SGetScoreRewardCfgs): pb.C2SGetScoreRewardCfgs;

        /**
         * Encodes the specified C2SGetScoreRewardCfgs message. Does not implicitly {@link pb.C2SGetScoreRewardCfgs.verify|verify} messages.
         * @param message C2SGetScoreRewardCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetScoreRewardCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetScoreRewardCfgs message, length delimited. Does not implicitly {@link pb.C2SGetScoreRewardCfgs.verify|verify} messages.
         * @param message C2SGetScoreRewardCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetScoreRewardCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetScoreRewardCfgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetScoreRewardCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetScoreRewardCfgs;

        /**
         * Decodes a C2SGetScoreRewardCfgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetScoreRewardCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetScoreRewardCfgs;

        /**
         * Verifies a C2SGetScoreRewardCfgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetScoreRewardCfgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetScoreRewardCfgs
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetScoreRewardCfgs;

        /**
         * Creates a plain object from a C2SGetScoreRewardCfgs message. Also converts values to other types if specified.
         * @param message C2SGetScoreRewardCfgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetScoreRewardCfgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetScoreRewardCfgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetScoreRewardCfgs. */
    interface IS2CGetScoreRewardCfgs {

        /** S2CGetScoreRewardCfgs items */
        items?: (pb.IScoreTopRewardEx[]|null);
    }

    /** Represents a S2CGetScoreRewardCfgs. */
    class S2CGetScoreRewardCfgs implements IS2CGetScoreRewardCfgs {

        /**
         * Constructs a new S2CGetScoreRewardCfgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetScoreRewardCfgs);

        /** S2CGetScoreRewardCfgs items. */
        public items: pb.IScoreTopRewardEx[];

        /**
         * Creates a new S2CGetScoreRewardCfgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetScoreRewardCfgs instance
         */
        public static create(properties?: pb.IS2CGetScoreRewardCfgs): pb.S2CGetScoreRewardCfgs;

        /**
         * Encodes the specified S2CGetScoreRewardCfgs message. Does not implicitly {@link pb.S2CGetScoreRewardCfgs.verify|verify} messages.
         * @param message S2CGetScoreRewardCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetScoreRewardCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetScoreRewardCfgs message, length delimited. Does not implicitly {@link pb.S2CGetScoreRewardCfgs.verify|verify} messages.
         * @param message S2CGetScoreRewardCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetScoreRewardCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetScoreRewardCfgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetScoreRewardCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetScoreRewardCfgs;

        /**
         * Decodes a S2CGetScoreRewardCfgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetScoreRewardCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetScoreRewardCfgs;

        /**
         * Verifies a S2CGetScoreRewardCfgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetScoreRewardCfgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetScoreRewardCfgs
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetScoreRewardCfgs;

        /**
         * Creates a plain object from a S2CGetScoreRewardCfgs message. Also converts values to other types if specified.
         * @param message S2CGetScoreRewardCfgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetScoreRewardCfgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetScoreRewardCfgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** ScoreType enum. */
    enum ScoreType {
        ST_Null = 0,
        ST_Day = 1,
        ST_Week = 2,
        ST_Month = 3,
        ST_Year = 4
    }

    /** Properties of a ScoreTopData. */
    interface IScoreTopData {

        /** ScoreTopData player */
        player?: (pb.IPlayerShowBase|null);

        /** ScoreTopData scoreType */
        scoreType?: (pb.ScoreType|null);

        /** ScoreTopData date */
        date?: (number|null);

        /** ScoreTopData score */
        score?: (number|Long|null);

        /** ScoreTopData rank */
        rank?: (number|null);

        /** ScoreTopData state */
        state?: (number|null);

        /** ScoreTopData changeVal */
        changeVal?: (number|Long|null);
    }

    /** Represents a ScoreTopData. */
    class ScoreTopData implements IScoreTopData {

        /**
         * Constructs a new ScoreTopData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IScoreTopData);

        /** ScoreTopData player. */
        public player?: (pb.IPlayerShowBase|null);

        /** ScoreTopData scoreType. */
        public scoreType: pb.ScoreType;

        /** ScoreTopData date. */
        public date: number;

        /** ScoreTopData score. */
        public score: (number|Long);

        /** ScoreTopData rank. */
        public rank: number;

        /** ScoreTopData state. */
        public state: number;

        /** ScoreTopData changeVal. */
        public changeVal: (number|Long);

        /**
         * Creates a new ScoreTopData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ScoreTopData instance
         */
        public static create(properties?: pb.IScoreTopData): pb.ScoreTopData;

        /**
         * Encodes the specified ScoreTopData message. Does not implicitly {@link pb.ScoreTopData.verify|verify} messages.
         * @param message ScoreTopData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IScoreTopData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ScoreTopData message, length delimited. Does not implicitly {@link pb.ScoreTopData.verify|verify} messages.
         * @param message ScoreTopData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IScoreTopData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ScoreTopData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ScoreTopData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ScoreTopData;

        /**
         * Decodes a ScoreTopData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ScoreTopData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ScoreTopData;

        /**
         * Verifies a ScoreTopData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ScoreTopData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ScoreTopData
         */
        public static fromObject(object: { [k: string]: any }): pb.ScoreTopData;

        /**
         * Creates a plain object from a ScoreTopData message. Also converts values to other types if specified.
         * @param message ScoreTopData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ScoreTopData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ScoreTopData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ScoreData. */
    interface IScoreData {

        /** ScoreData date */
        date?: (number|null);

        /** ScoreData scoreType */
        scoreType?: (pb.ScoreType|null);

        /** ScoreData score */
        score?: (number|Long|null);
    }

    /** Represents a ScoreData. */
    class ScoreData implements IScoreData {

        /**
         * Constructs a new ScoreData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IScoreData);

        /** ScoreData date. */
        public date: number;

        /** ScoreData scoreType. */
        public scoreType: pb.ScoreType;

        /** ScoreData score. */
        public score: (number|Long);

        /**
         * Creates a new ScoreData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ScoreData instance
         */
        public static create(properties?: pb.IScoreData): pb.ScoreData;

        /**
         * Encodes the specified ScoreData message. Does not implicitly {@link pb.ScoreData.verify|verify} messages.
         * @param message ScoreData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IScoreData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ScoreData message, length delimited. Does not implicitly {@link pb.ScoreData.verify|verify} messages.
         * @param message ScoreData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IScoreData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ScoreData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ScoreData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ScoreData;

        /**
         * Decodes a ScoreData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ScoreData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ScoreData;

        /**
         * Verifies a ScoreData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ScoreData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ScoreData
         */
        public static fromObject(object: { [k: string]: any }): pb.ScoreData;

        /**
         * Creates a plain object from a ScoreData message. Also converts values to other types if specified.
         * @param message ScoreData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ScoreData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ScoreData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ScoreTopSaveData. */
    interface IScoreTopSaveData {

        /** ScoreTopSaveData player */
        player?: (pb.IPlayerShowBase|null);

        /** ScoreTopSaveData items */
        items?: (pb.IScoreData[]|null);
    }

    /** Represents a ScoreTopSaveData. */
    class ScoreTopSaveData implements IScoreTopSaveData {

        /**
         * Constructs a new ScoreTopSaveData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IScoreTopSaveData);

        /** ScoreTopSaveData player. */
        public player?: (pb.IPlayerShowBase|null);

        /** ScoreTopSaveData items. */
        public items: pb.IScoreData[];

        /**
         * Creates a new ScoreTopSaveData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ScoreTopSaveData instance
         */
        public static create(properties?: pb.IScoreTopSaveData): pb.ScoreTopSaveData;

        /**
         * Encodes the specified ScoreTopSaveData message. Does not implicitly {@link pb.ScoreTopSaveData.verify|verify} messages.
         * @param message ScoreTopSaveData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IScoreTopSaveData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ScoreTopSaveData message, length delimited. Does not implicitly {@link pb.ScoreTopSaveData.verify|verify} messages.
         * @param message ScoreTopSaveData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IScoreTopSaveData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ScoreTopSaveData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ScoreTopSaveData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ScoreTopSaveData;

        /**
         * Decodes a ScoreTopSaveData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ScoreTopSaveData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ScoreTopSaveData;

        /**
         * Verifies a ScoreTopSaveData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ScoreTopSaveData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ScoreTopSaveData
         */
        public static fromObject(object: { [k: string]: any }): pb.ScoreTopSaveData;

        /**
         * Creates a plain object from a ScoreTopSaveData message. Also converts values to other types if specified.
         * @param message ScoreTopSaveData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ScoreTopSaveData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ScoreTopSaveData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PayScoreData. */
    interface IPayScoreData {

        /** PayScoreData player */
        player?: (pb.IPlayerShowBase|null);

        /** PayScoreData items */
        items?: (pb.IScoreData[]|null);
    }

    /** Represents a PayScoreData. */
    class PayScoreData implements IPayScoreData {

        /**
         * Constructs a new PayScoreData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPayScoreData);

        /** PayScoreData player. */
        public player?: (pb.IPlayerShowBase|null);

        /** PayScoreData items. */
        public items: pb.IScoreData[];

        /**
         * Creates a new PayScoreData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PayScoreData instance
         */
        public static create(properties?: pb.IPayScoreData): pb.PayScoreData;

        /**
         * Encodes the specified PayScoreData message. Does not implicitly {@link pb.PayScoreData.verify|verify} messages.
         * @param message PayScoreData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPayScoreData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PayScoreData message, length delimited. Does not implicitly {@link pb.PayScoreData.verify|verify} messages.
         * @param message PayScoreData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPayScoreData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PayScoreData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PayScoreData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.PayScoreData;

        /**
         * Decodes a PayScoreData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PayScoreData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.PayScoreData;

        /**
         * Verifies a PayScoreData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PayScoreData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PayScoreData
         */
        public static fromObject(object: { [k: string]: any }): pb.PayScoreData;

        /**
         * Creates a plain object from a PayScoreData message. Also converts values to other types if specified.
         * @param message PayScoreData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.PayScoreData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PayScoreData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ScoreTopReward. */
    interface IScoreTopReward {

        /** ScoreTopReward topType */
        topType?: (pb.ScoreType|null);

        /** ScoreTopReward rank */
        rank?: (number|null);

        /** ScoreTopReward payReturn */
        payReturn?: (number|null);

        /** ScoreTopReward ctReturn */
        ctReturn?: ({ [k: string]: (number|Long) }|null);

        /** ScoreTopReward hfqReturn */
        hfqReturn?: (number|null);
    }

    /** Represents a ScoreTopReward. */
    class ScoreTopReward implements IScoreTopReward {

        /**
         * Constructs a new ScoreTopReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IScoreTopReward);

        /** ScoreTopReward topType. */
        public topType: pb.ScoreType;

        /** ScoreTopReward rank. */
        public rank: number;

        /** ScoreTopReward payReturn. */
        public payReturn: number;

        /** ScoreTopReward ctReturn. */
        public ctReturn: { [k: string]: (number|Long) };

        /** ScoreTopReward hfqReturn. */
        public hfqReturn: number;

        /**
         * Creates a new ScoreTopReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ScoreTopReward instance
         */
        public static create(properties?: pb.IScoreTopReward): pb.ScoreTopReward;

        /**
         * Encodes the specified ScoreTopReward message. Does not implicitly {@link pb.ScoreTopReward.verify|verify} messages.
         * @param message ScoreTopReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IScoreTopReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ScoreTopReward message, length delimited. Does not implicitly {@link pb.ScoreTopReward.verify|verify} messages.
         * @param message ScoreTopReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IScoreTopReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ScoreTopReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ScoreTopReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ScoreTopReward;

        /**
         * Decodes a ScoreTopReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ScoreTopReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ScoreTopReward;

        /**
         * Verifies a ScoreTopReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ScoreTopReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ScoreTopReward
         */
        public static fromObject(object: { [k: string]: any }): pb.ScoreTopReward;

        /**
         * Creates a plain object from a ScoreTopReward message. Also converts values to other types if specified.
         * @param message ScoreTopReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ScoreTopReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ScoreTopReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ScoreTopRewardEx. */
    interface IScoreTopRewardEx {

        /** ScoreTopRewardEx topType */
        topType?: (pb.ScoreType|null);

        /** ScoreTopRewardEx items */
        items?: (pb.IScoreTopReward[]|null);
    }

    /** Represents a ScoreTopRewardEx. */
    class ScoreTopRewardEx implements IScoreTopRewardEx {

        /**
         * Constructs a new ScoreTopRewardEx.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IScoreTopRewardEx);

        /** ScoreTopRewardEx topType. */
        public topType: pb.ScoreType;

        /** ScoreTopRewardEx items. */
        public items: pb.IScoreTopReward[];

        /**
         * Creates a new ScoreTopRewardEx instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ScoreTopRewardEx instance
         */
        public static create(properties?: pb.IScoreTopRewardEx): pb.ScoreTopRewardEx;

        /**
         * Encodes the specified ScoreTopRewardEx message. Does not implicitly {@link pb.ScoreTopRewardEx.verify|verify} messages.
         * @param message ScoreTopRewardEx message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IScoreTopRewardEx, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ScoreTopRewardEx message, length delimited. Does not implicitly {@link pb.ScoreTopRewardEx.verify|verify} messages.
         * @param message ScoreTopRewardEx message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IScoreTopRewardEx, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ScoreTopRewardEx message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ScoreTopRewardEx
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ScoreTopRewardEx;

        /**
         * Decodes a ScoreTopRewardEx message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ScoreTopRewardEx
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ScoreTopRewardEx;

        /**
         * Verifies a ScoreTopRewardEx message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ScoreTopRewardEx message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ScoreTopRewardEx
         */
        public static fromObject(object: { [k: string]: any }): pb.ScoreTopRewardEx;

        /**
         * Creates a plain object from a ScoreTopRewardEx message. Also converts values to other types if specified.
         * @param message ScoreTopRewardEx
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ScoreTopRewardEx, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ScoreTopRewardEx to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WithScoreLogItem. */
    interface IWithScoreLogItem {

        /** WithScoreLogItem time */
        time?: (number|Long|null);

        /** WithScoreLogItem uid */
        uid?: (number|Long|null);

        /** WithScoreLogItem id */
        id?: (number|Long|null);

        /** WithScoreLogItem scoreType */
        scoreType?: (pb.ScoreType|null);

        /** WithScoreLogItem amount */
        amount?: (number|null);

        /** WithScoreLogItem remain */
        remain?: (number|null);

        /** WithScoreLogItem state */
        state?: (number|null);
    }

    /** Represents a WithScoreLogItem. */
    class WithScoreLogItem implements IWithScoreLogItem {

        /**
         * Constructs a new WithScoreLogItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IWithScoreLogItem);

        /** WithScoreLogItem time. */
        public time: (number|Long);

        /** WithScoreLogItem uid. */
        public uid: (number|Long);

        /** WithScoreLogItem id. */
        public id: (number|Long);

        /** WithScoreLogItem scoreType. */
        public scoreType: pb.ScoreType;

        /** WithScoreLogItem amount. */
        public amount: number;

        /** WithScoreLogItem remain. */
        public remain: number;

        /** WithScoreLogItem state. */
        public state: number;

        /**
         * Creates a new WithScoreLogItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WithScoreLogItem instance
         */
        public static create(properties?: pb.IWithScoreLogItem): pb.WithScoreLogItem;

        /**
         * Encodes the specified WithScoreLogItem message. Does not implicitly {@link pb.WithScoreLogItem.verify|verify} messages.
         * @param message WithScoreLogItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IWithScoreLogItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WithScoreLogItem message, length delimited. Does not implicitly {@link pb.WithScoreLogItem.verify|verify} messages.
         * @param message WithScoreLogItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IWithScoreLogItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WithScoreLogItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WithScoreLogItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.WithScoreLogItem;

        /**
         * Decodes a WithScoreLogItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WithScoreLogItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.WithScoreLogItem;

        /**
         * Verifies a WithScoreLogItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WithScoreLogItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WithScoreLogItem
         */
        public static fromObject(object: { [k: string]: any }): pb.WithScoreLogItem;

        /**
         * Creates a plain object from a WithScoreLogItem message. Also converts values to other types if specified.
         * @param message WithScoreLogItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.WithScoreLogItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WithScoreLogItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HfqRechargeLogItem. */
    interface IHfqRechargeLogItem {

        /** HfqRechargeLogItem time */
        time?: (number|Long|null);

        /** HfqRechargeLogItem uid */
        uid?: (number|Long|null);

        /** HfqRechargeLogItem id */
        id?: (number|Long|null);

        /** HfqRechargeLogItem phone */
        phone?: (string|null);

        /** HfqRechargeLogItem amount */
        amount?: (number|null);

        /** HfqRechargeLogItem state */
        state?: (number|null);
    }

    /** Represents a HfqRechargeLogItem. */
    class HfqRechargeLogItem implements IHfqRechargeLogItem {

        /**
         * Constructs a new HfqRechargeLogItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IHfqRechargeLogItem);

        /** HfqRechargeLogItem time. */
        public time: (number|Long);

        /** HfqRechargeLogItem uid. */
        public uid: (number|Long);

        /** HfqRechargeLogItem id. */
        public id: (number|Long);

        /** HfqRechargeLogItem phone. */
        public phone: string;

        /** HfqRechargeLogItem amount. */
        public amount: number;

        /** HfqRechargeLogItem state. */
        public state: number;

        /**
         * Creates a new HfqRechargeLogItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HfqRechargeLogItem instance
         */
        public static create(properties?: pb.IHfqRechargeLogItem): pb.HfqRechargeLogItem;

        /**
         * Encodes the specified HfqRechargeLogItem message. Does not implicitly {@link pb.HfqRechargeLogItem.verify|verify} messages.
         * @param message HfqRechargeLogItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IHfqRechargeLogItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HfqRechargeLogItem message, length delimited. Does not implicitly {@link pb.HfqRechargeLogItem.verify|verify} messages.
         * @param message HfqRechargeLogItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IHfqRechargeLogItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HfqRechargeLogItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HfqRechargeLogItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.HfqRechargeLogItem;

        /**
         * Decodes a HfqRechargeLogItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HfqRechargeLogItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.HfqRechargeLogItem;

        /**
         * Verifies a HfqRechargeLogItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HfqRechargeLogItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HfqRechargeLogItem
         */
        public static fromObject(object: { [k: string]: any }): pb.HfqRechargeLogItem;

        /**
         * Creates a plain object from a HfqRechargeLogItem message. Also converts values to other types if specified.
         * @param message HfqRechargeLogItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.HfqRechargeLogItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HfqRechargeLogItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetIdlePlayers. */
    interface IC2SGetIdlePlayers {

        /** C2SGetIdlePlayers guid */
        guid?: (number|Long|null);
    }

    /** Represents a C2SGetIdlePlayers. */
    class C2SGetIdlePlayers implements IC2SGetIdlePlayers {

        /**
         * Constructs a new C2SGetIdlePlayers.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetIdlePlayers);

        /** C2SGetIdlePlayers guid. */
        public guid: (number|Long);

        /**
         * Creates a new C2SGetIdlePlayers instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetIdlePlayers instance
         */
        public static create(properties?: pb.IC2SGetIdlePlayers): pb.C2SGetIdlePlayers;

        /**
         * Encodes the specified C2SGetIdlePlayers message. Does not implicitly {@link pb.C2SGetIdlePlayers.verify|verify} messages.
         * @param message C2SGetIdlePlayers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetIdlePlayers, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetIdlePlayers message, length delimited. Does not implicitly {@link pb.C2SGetIdlePlayers.verify|verify} messages.
         * @param message C2SGetIdlePlayers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetIdlePlayers, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetIdlePlayers message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetIdlePlayers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetIdlePlayers;

        /**
         * Decodes a C2SGetIdlePlayers message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetIdlePlayers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetIdlePlayers;

        /**
         * Verifies a C2SGetIdlePlayers message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetIdlePlayers message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetIdlePlayers
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetIdlePlayers;

        /**
         * Creates a plain object from a C2SGetIdlePlayers message. Also converts values to other types if specified.
         * @param message C2SGetIdlePlayers
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetIdlePlayers, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetIdlePlayers to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PlayerBaseInfo. */
    interface IPlayerBaseInfo {

        /** PlayerBaseInfo guid */
        guid?: (number|Long|null);

        /** PlayerBaseInfo name */
        name?: (string|null);

        /** PlayerBaseInfo portraits */
        portraits?: (string|null);

        /** PlayerBaseInfo portBorder */
        portBorder?: (number|null);

        /** PlayerBaseInfo level */
        level?: (number|null);

        /** PlayerBaseInfo gender */
        gender?: (number|null);

        /** PlayerBaseInfo state */
        state?: (pb.PlayerBaseInfo.State|null);
    }

    /** Represents a PlayerBaseInfo. */
    class PlayerBaseInfo implements IPlayerBaseInfo {

        /**
         * Constructs a new PlayerBaseInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPlayerBaseInfo);

        /** PlayerBaseInfo guid. */
        public guid: (number|Long);

        /** PlayerBaseInfo name. */
        public name: string;

        /** PlayerBaseInfo portraits. */
        public portraits: string;

        /** PlayerBaseInfo portBorder. */
        public portBorder: number;

        /** PlayerBaseInfo level. */
        public level: number;

        /** PlayerBaseInfo gender. */
        public gender: number;

        /** PlayerBaseInfo state. */
        public state: pb.PlayerBaseInfo.State;

        /**
         * Creates a new PlayerBaseInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlayerBaseInfo instance
         */
        public static create(properties?: pb.IPlayerBaseInfo): pb.PlayerBaseInfo;

        /**
         * Encodes the specified PlayerBaseInfo message. Does not implicitly {@link pb.PlayerBaseInfo.verify|verify} messages.
         * @param message PlayerBaseInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPlayerBaseInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PlayerBaseInfo message, length delimited. Does not implicitly {@link pb.PlayerBaseInfo.verify|verify} messages.
         * @param message PlayerBaseInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPlayerBaseInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PlayerBaseInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerBaseInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.PlayerBaseInfo;

        /**
         * Decodes a PlayerBaseInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlayerBaseInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.PlayerBaseInfo;

        /**
         * Verifies a PlayerBaseInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlayerBaseInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlayerBaseInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.PlayerBaseInfo;

        /**
         * Creates a plain object from a PlayerBaseInfo message. Also converts values to other types if specified.
         * @param message PlayerBaseInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.PlayerBaseInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlayerBaseInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace PlayerBaseInfo {

        /** State enum. */
        enum State {
            Offline = 0,
            Playing = 1,
            Idle = 2
        }
    }

    /** Properties of a S2CGetIdlePlayers. */
    interface IS2CGetIdlePlayers {

        /** S2CGetIdlePlayers items */
        items?: (pb.IPlayerBaseInfo[]|null);

        /** S2CGetIdlePlayers guid */
        guid?: (number|Long|null);
    }

    /** Represents a S2CGetIdlePlayers. */
    class S2CGetIdlePlayers implements IS2CGetIdlePlayers {

        /**
         * Constructs a new S2CGetIdlePlayers.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetIdlePlayers);

        /** S2CGetIdlePlayers items. */
        public items: pb.IPlayerBaseInfo[];

        /** S2CGetIdlePlayers guid. */
        public guid: (number|Long);

        /**
         * Creates a new S2CGetIdlePlayers instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetIdlePlayers instance
         */
        public static create(properties?: pb.IS2CGetIdlePlayers): pb.S2CGetIdlePlayers;

        /**
         * Encodes the specified S2CGetIdlePlayers message. Does not implicitly {@link pb.S2CGetIdlePlayers.verify|verify} messages.
         * @param message S2CGetIdlePlayers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetIdlePlayers, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetIdlePlayers message, length delimited. Does not implicitly {@link pb.S2CGetIdlePlayers.verify|verify} messages.
         * @param message S2CGetIdlePlayers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetIdlePlayers, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetIdlePlayers message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetIdlePlayers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetIdlePlayers;

        /**
         * Decodes a S2CGetIdlePlayers message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetIdlePlayers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetIdlePlayers;

        /**
         * Verifies a S2CGetIdlePlayers message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetIdlePlayers message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetIdlePlayers
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetIdlePlayers;

        /**
         * Creates a plain object from a S2CGetIdlePlayers message. Also converts values to other types if specified.
         * @param message S2CGetIdlePlayers
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetIdlePlayers, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetIdlePlayers to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SInvitePlay. */
    interface IC2SInvitePlay {

        /** C2SInvitePlay guid */
        guid?: (number|Long|null);
    }

    /** Represents a C2SInvitePlay. */
    class C2SInvitePlay implements IC2SInvitePlay {

        /**
         * Constructs a new C2SInvitePlay.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SInvitePlay);

        /** C2SInvitePlay guid. */
        public guid: (number|Long);

        /**
         * Creates a new C2SInvitePlay instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SInvitePlay instance
         */
        public static create(properties?: pb.IC2SInvitePlay): pb.C2SInvitePlay;

        /**
         * Encodes the specified C2SInvitePlay message. Does not implicitly {@link pb.C2SInvitePlay.verify|verify} messages.
         * @param message C2SInvitePlay message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SInvitePlay, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SInvitePlay message, length delimited. Does not implicitly {@link pb.C2SInvitePlay.verify|verify} messages.
         * @param message C2SInvitePlay message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SInvitePlay, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SInvitePlay message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SInvitePlay
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SInvitePlay;

        /**
         * Decodes a C2SInvitePlay message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SInvitePlay
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SInvitePlay;

        /**
         * Verifies a C2SInvitePlay message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SInvitePlay message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SInvitePlay
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SInvitePlay;

        /**
         * Creates a plain object from a C2SInvitePlay message. Also converts values to other types if specified.
         * @param message C2SInvitePlay
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SInvitePlay, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SInvitePlay to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an InviteTarget. */
    interface IInviteTarget {

        /** InviteTarget gsId */
        gsId?: (number|null);

        /** InviteTarget id */
        id?: (number|Long|null);

        /** InviteTarget game */
        game?: (number|null);

        /** InviteTarget isTable */
        isTable?: (boolean|null);
    }

    /** Represents an InviteTarget. */
    class InviteTarget implements IInviteTarget {

        /**
         * Constructs a new InviteTarget.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IInviteTarget);

        /** InviteTarget gsId. */
        public gsId: number;

        /** InviteTarget id. */
        public id: (number|Long);

        /** InviteTarget game. */
        public game: number;

        /** InviteTarget isTable. */
        public isTable: boolean;

        /**
         * Creates a new InviteTarget instance using the specified properties.
         * @param [properties] Properties to set
         * @returns InviteTarget instance
         */
        public static create(properties?: pb.IInviteTarget): pb.InviteTarget;

        /**
         * Encodes the specified InviteTarget message. Does not implicitly {@link pb.InviteTarget.verify|verify} messages.
         * @param message InviteTarget message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IInviteTarget, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified InviteTarget message, length delimited. Does not implicitly {@link pb.InviteTarget.verify|verify} messages.
         * @param message InviteTarget message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IInviteTarget, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an InviteTarget message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns InviteTarget
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.InviteTarget;

        /**
         * Decodes an InviteTarget message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns InviteTarget
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.InviteTarget;

        /**
         * Verifies an InviteTarget message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an InviteTarget message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns InviteTarget
         */
        public static fromObject(object: { [k: string]: any }): pb.InviteTarget;

        /**
         * Creates a plain object from an InviteTarget message. Also converts values to other types if specified.
         * @param message InviteTarget
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.InviteTarget, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this InviteTarget to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CInviteNotify. */
    interface IS2CInviteNotify {

        /** S2CInviteNotify target */
        target?: (pb.IInviteTarget|null);

        /** S2CInviteNotify inviterConnId */
        inviterConnId?: (number|Long|null);

        /** S2CInviteNotify playerName */
        playerName?: (string|null);

        /** S2CInviteNotify gameName */
        gameName?: (string|null);
    }

    /** Represents a S2CInviteNotify. */
    class S2CInviteNotify implements IS2CInviteNotify {

        /**
         * Constructs a new S2CInviteNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CInviteNotify);

        /** S2CInviteNotify target. */
        public target?: (pb.IInviteTarget|null);

        /** S2CInviteNotify inviterConnId. */
        public inviterConnId: (number|Long);

        /** S2CInviteNotify playerName. */
        public playerName: string;

        /** S2CInviteNotify gameName. */
        public gameName: string;

        /**
         * Creates a new S2CInviteNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CInviteNotify instance
         */
        public static create(properties?: pb.IS2CInviteNotify): pb.S2CInviteNotify;

        /**
         * Encodes the specified S2CInviteNotify message. Does not implicitly {@link pb.S2CInviteNotify.verify|verify} messages.
         * @param message S2CInviteNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CInviteNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CInviteNotify message, length delimited. Does not implicitly {@link pb.S2CInviteNotify.verify|verify} messages.
         * @param message S2CInviteNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CInviteNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CInviteNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CInviteNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CInviteNotify;

        /**
         * Decodes a S2CInviteNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CInviteNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CInviteNotify;

        /**
         * Verifies a S2CInviteNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CInviteNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CInviteNotify
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CInviteNotify;

        /**
         * Creates a plain object from a S2CInviteNotify message. Also converts values to other types if specified.
         * @param message S2CInviteNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CInviteNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CInviteNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SInviteNotify. */
    interface IC2SInviteNotify {

        /** C2SInviteNotify target */
        target?: (pb.IInviteTarget|null);

        /** C2SInviteNotify inviterConnId */
        inviterConnId?: (number|Long|null);

        /** C2SInviteNotify agree */
        agree?: (boolean|null);
    }

    /** Represents a C2SInviteNotify. */
    class C2SInviteNotify implements IC2SInviteNotify {

        /**
         * Constructs a new C2SInviteNotify.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SInviteNotify);

        /** C2SInviteNotify target. */
        public target?: (pb.IInviteTarget|null);

        /** C2SInviteNotify inviterConnId. */
        public inviterConnId: (number|Long);

        /** C2SInviteNotify agree. */
        public agree: boolean;

        /**
         * Creates a new C2SInviteNotify instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SInviteNotify instance
         */
        public static create(properties?: pb.IC2SInviteNotify): pb.C2SInviteNotify;

        /**
         * Encodes the specified C2SInviteNotify message. Does not implicitly {@link pb.C2SInviteNotify.verify|verify} messages.
         * @param message C2SInviteNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SInviteNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SInviteNotify message, length delimited. Does not implicitly {@link pb.C2SInviteNotify.verify|verify} messages.
         * @param message C2SInviteNotify message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SInviteNotify, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SInviteNotify message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SInviteNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SInviteNotify;

        /**
         * Decodes a C2SInviteNotify message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SInviteNotify
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SInviteNotify;

        /**
         * Verifies a C2SInviteNotify message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SInviteNotify message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SInviteNotify
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SInviteNotify;

        /**
         * Creates a plain object from a C2SInviteNotify message. Also converts values to other types if specified.
         * @param message C2SInviteNotify
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SInviteNotify, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SInviteNotify to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CInviteRefuse. */
    interface IS2CInviteRefuse {

        /** S2CInviteRefuse playerName */
        playerName?: (string|null);
    }

    /** Represents a S2CInviteRefuse. */
    class S2CInviteRefuse implements IS2CInviteRefuse {

        /**
         * Constructs a new S2CInviteRefuse.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CInviteRefuse);

        /** S2CInviteRefuse playerName. */
        public playerName: string;

        /**
         * Creates a new S2CInviteRefuse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CInviteRefuse instance
         */
        public static create(properties?: pb.IS2CInviteRefuse): pb.S2CInviteRefuse;

        /**
         * Encodes the specified S2CInviteRefuse message. Does not implicitly {@link pb.S2CInviteRefuse.verify|verify} messages.
         * @param message S2CInviteRefuse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CInviteRefuse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CInviteRefuse message, length delimited. Does not implicitly {@link pb.S2CInviteRefuse.verify|verify} messages.
         * @param message S2CInviteRefuse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CInviteRefuse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CInviteRefuse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CInviteRefuse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CInviteRefuse;

        /**
         * Decodes a S2CInviteRefuse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CInviteRefuse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CInviteRefuse;

        /**
         * Verifies a S2CInviteRefuse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CInviteRefuse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CInviteRefuse
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CInviteRefuse;

        /**
         * Creates a plain object from a S2CInviteRefuse message. Also converts values to other types if specified.
         * @param message S2CInviteRefuse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CInviteRefuse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CInviteRefuse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CSeason. */
    interface IS2CSeason {

        /** S2CSeason season */
        season?: (pb.ISeasonCfg|null);

        /** S2CSeason rankPercent */
        rankPercent?: (number|null);
    }

    /** Represents a S2CSeason. */
    class S2CSeason implements IS2CSeason {

        /**
         * Constructs a new S2CSeason.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CSeason);

        /** S2CSeason season. */
        public season?: (pb.ISeasonCfg|null);

        /** S2CSeason rankPercent. */
        public rankPercent: number;

        /**
         * Creates a new S2CSeason instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CSeason instance
         */
        public static create(properties?: pb.IS2CSeason): pb.S2CSeason;

        /**
         * Encodes the specified S2CSeason message. Does not implicitly {@link pb.S2CSeason.verify|verify} messages.
         * @param message S2CSeason message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CSeason, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CSeason message, length delimited. Does not implicitly {@link pb.S2CSeason.verify|verify} messages.
         * @param message S2CSeason message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CSeason, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CSeason message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CSeason
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CSeason;

        /**
         * Decodes a S2CSeason message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CSeason
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CSeason;

        /**
         * Verifies a S2CSeason message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CSeason message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CSeason
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CSeason;

        /**
         * Creates a plain object from a S2CSeason message. Also converts values to other types if specified.
         * @param message S2CSeason
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CSeason, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CSeason to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SSeasonRankList. */
    interface IC2SSeasonRankList {

        /** C2SSeasonRankList areaId */
        areaId?: (number|Long|null);
    }

    /** Represents a C2SSeasonRankList. */
    class C2SSeasonRankList implements IC2SSeasonRankList {

        /**
         * Constructs a new C2SSeasonRankList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SSeasonRankList);

        /** C2SSeasonRankList areaId. */
        public areaId: (number|Long);

        /**
         * Creates a new C2SSeasonRankList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SSeasonRankList instance
         */
        public static create(properties?: pb.IC2SSeasonRankList): pb.C2SSeasonRankList;

        /**
         * Encodes the specified C2SSeasonRankList message. Does not implicitly {@link pb.C2SSeasonRankList.verify|verify} messages.
         * @param message C2SSeasonRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SSeasonRankList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SSeasonRankList message, length delimited. Does not implicitly {@link pb.C2SSeasonRankList.verify|verify} messages.
         * @param message C2SSeasonRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SSeasonRankList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SSeasonRankList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SSeasonRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SSeasonRankList;

        /**
         * Decodes a C2SSeasonRankList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SSeasonRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SSeasonRankList;

        /**
         * Verifies a C2SSeasonRankList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SSeasonRankList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SSeasonRankList
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SSeasonRankList;

        /**
         * Creates a plain object from a C2SSeasonRankList message. Also converts values to other types if specified.
         * @param message C2SSeasonRankList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SSeasonRankList, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SSeasonRankList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CSeasonRankList. */
    interface IS2CSeasonRankList {

        /** S2CSeasonRankList gameCat */
        gameCat?: (number|null);

        /** S2CSeasonRankList areaId */
        areaId?: (number|Long|null);

        /** S2CSeasonRankList items */
        items?: (pb.ISeasonRankItem[]|null);
    }

    /** Represents a S2CSeasonRankList. */
    class S2CSeasonRankList implements IS2CSeasonRankList {

        /**
         * Constructs a new S2CSeasonRankList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CSeasonRankList);

        /** S2CSeasonRankList gameCat. */
        public gameCat: number;

        /** S2CSeasonRankList areaId. */
        public areaId: (number|Long);

        /** S2CSeasonRankList items. */
        public items: pb.ISeasonRankItem[];

        /**
         * Creates a new S2CSeasonRankList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CSeasonRankList instance
         */
        public static create(properties?: pb.IS2CSeasonRankList): pb.S2CSeasonRankList;

        /**
         * Encodes the specified S2CSeasonRankList message. Does not implicitly {@link pb.S2CSeasonRankList.verify|verify} messages.
         * @param message S2CSeasonRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CSeasonRankList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CSeasonRankList message, length delimited. Does not implicitly {@link pb.S2CSeasonRankList.verify|verify} messages.
         * @param message S2CSeasonRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CSeasonRankList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CSeasonRankList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CSeasonRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CSeasonRankList;

        /**
         * Decodes a S2CSeasonRankList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CSeasonRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CSeasonRankList;

        /**
         * Verifies a S2CSeasonRankList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CSeasonRankList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CSeasonRankList
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CSeasonRankList;

        /**
         * Creates a plain object from a S2CSeasonRankList message. Also converts values to other types if specified.
         * @param message S2CSeasonRankList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CSeasonRankList, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CSeasonRankList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetDuanWeiReward. */
    interface IC2SGetDuanWeiReward {

        /** C2SGetDuanWeiReward duanWei */
        duanWei?: (number|null);
    }

    /** Represents a C2SGetDuanWeiReward. */
    class C2SGetDuanWeiReward implements IC2SGetDuanWeiReward {

        /**
         * Constructs a new C2SGetDuanWeiReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetDuanWeiReward);

        /** C2SGetDuanWeiReward duanWei. */
        public duanWei: number;

        /**
         * Creates a new C2SGetDuanWeiReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetDuanWeiReward instance
         */
        public static create(properties?: pb.IC2SGetDuanWeiReward): pb.C2SGetDuanWeiReward;

        /**
         * Encodes the specified C2SGetDuanWeiReward message. Does not implicitly {@link pb.C2SGetDuanWeiReward.verify|verify} messages.
         * @param message C2SGetDuanWeiReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetDuanWeiReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetDuanWeiReward message, length delimited. Does not implicitly {@link pb.C2SGetDuanWeiReward.verify|verify} messages.
         * @param message C2SGetDuanWeiReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetDuanWeiReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetDuanWeiReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetDuanWeiReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetDuanWeiReward;

        /**
         * Decodes a C2SGetDuanWeiReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetDuanWeiReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetDuanWeiReward;

        /**
         * Verifies a C2SGetDuanWeiReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetDuanWeiReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetDuanWeiReward
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetDuanWeiReward;

        /**
         * Creates a plain object from a C2SGetDuanWeiReward message. Also converts values to other types if specified.
         * @param message C2SGetDuanWeiReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetDuanWeiReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetDuanWeiReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetDuanWeiReward. */
    interface IS2CGetDuanWeiReward {

        /** S2CGetDuanWeiReward duanWei */
        duanWei?: (number|null);

        /** S2CGetDuanWeiReward ok */
        ok?: (boolean|null);
    }

    /** Represents a S2CGetDuanWeiReward. */
    class S2CGetDuanWeiReward implements IS2CGetDuanWeiReward {

        /**
         * Constructs a new S2CGetDuanWeiReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetDuanWeiReward);

        /** S2CGetDuanWeiReward duanWei. */
        public duanWei: number;

        /** S2CGetDuanWeiReward ok. */
        public ok: boolean;

        /**
         * Creates a new S2CGetDuanWeiReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetDuanWeiReward instance
         */
        public static create(properties?: pb.IS2CGetDuanWeiReward): pb.S2CGetDuanWeiReward;

        /**
         * Encodes the specified S2CGetDuanWeiReward message. Does not implicitly {@link pb.S2CGetDuanWeiReward.verify|verify} messages.
         * @param message S2CGetDuanWeiReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetDuanWeiReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetDuanWeiReward message, length delimited. Does not implicitly {@link pb.S2CGetDuanWeiReward.verify|verify} messages.
         * @param message S2CGetDuanWeiReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetDuanWeiReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetDuanWeiReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetDuanWeiReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetDuanWeiReward;

        /**
         * Decodes a S2CGetDuanWeiReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetDuanWeiReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetDuanWeiReward;

        /**
         * Verifies a S2CGetDuanWeiReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetDuanWeiReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetDuanWeiReward
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetDuanWeiReward;

        /**
         * Creates a plain object from a S2CGetDuanWeiReward message. Also converts values to other types if specified.
         * @param message S2CGetDuanWeiReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetDuanWeiReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetDuanWeiReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetSeasonReward. */
    interface IC2SGetSeasonReward {

        /** C2SGetSeasonReward gameCat */
        gameCat?: (number|null);
    }

    /** Represents a C2SGetSeasonReward. */
    class C2SGetSeasonReward implements IC2SGetSeasonReward {

        /**
         * Constructs a new C2SGetSeasonReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetSeasonReward);

        /** C2SGetSeasonReward gameCat. */
        public gameCat: number;

        /**
         * Creates a new C2SGetSeasonReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetSeasonReward instance
         */
        public static create(properties?: pb.IC2SGetSeasonReward): pb.C2SGetSeasonReward;

        /**
         * Encodes the specified C2SGetSeasonReward message. Does not implicitly {@link pb.C2SGetSeasonReward.verify|verify} messages.
         * @param message C2SGetSeasonReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetSeasonReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetSeasonReward message, length delimited. Does not implicitly {@link pb.C2SGetSeasonReward.verify|verify} messages.
         * @param message C2SGetSeasonReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetSeasonReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetSeasonReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetSeasonReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetSeasonReward;

        /**
         * Decodes a C2SGetSeasonReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetSeasonReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetSeasonReward;

        /**
         * Verifies a C2SGetSeasonReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetSeasonReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetSeasonReward
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetSeasonReward;

        /**
         * Creates a plain object from a C2SGetSeasonReward message. Also converts values to other types if specified.
         * @param message C2SGetSeasonReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetSeasonReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetSeasonReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetSeasonReward. */
    interface IS2CGetSeasonReward {

        /** S2CGetSeasonReward ok */
        ok?: (boolean|null);
    }

    /** Represents a S2CGetSeasonReward. */
    class S2CGetSeasonReward implements IS2CGetSeasonReward {

        /**
         * Constructs a new S2CGetSeasonReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetSeasonReward);

        /** S2CGetSeasonReward ok. */
        public ok: boolean;

        /**
         * Creates a new S2CGetSeasonReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetSeasonReward instance
         */
        public static create(properties?: pb.IS2CGetSeasonReward): pb.S2CGetSeasonReward;

        /**
         * Encodes the specified S2CGetSeasonReward message. Does not implicitly {@link pb.S2CGetSeasonReward.verify|verify} messages.
         * @param message S2CGetSeasonReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetSeasonReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetSeasonReward message, length delimited. Does not implicitly {@link pb.S2CGetSeasonReward.verify|verify} messages.
         * @param message S2CGetSeasonReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetSeasonReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetSeasonReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetSeasonReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetSeasonReward;

        /**
         * Decodes a S2CGetSeasonReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetSeasonReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetSeasonReward;

        /**
         * Verifies a S2CGetSeasonReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetSeasonReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetSeasonReward
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetSeasonReward;

        /**
         * Creates a plain object from a S2CGetSeasonReward message. Also converts values to other types if specified.
         * @param message S2CGetSeasonReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetSeasonReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetSeasonReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDuanWeiChange. */
    interface IS2CDuanWeiChange {

        /** S2CDuanWeiChange gameCat */
        gameCat?: (number|null);

        /** S2CDuanWeiChange oldDuanWei */
        oldDuanWei?: (number|null);

        /** S2CDuanWeiChange newDuanWei */
        newDuanWei?: (number|null);
    }

    /** Represents a S2CDuanWeiChange. */
    class S2CDuanWeiChange implements IS2CDuanWeiChange {

        /**
         * Constructs a new S2CDuanWeiChange.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDuanWeiChange);

        /** S2CDuanWeiChange gameCat. */
        public gameCat: number;

        /** S2CDuanWeiChange oldDuanWei. */
        public oldDuanWei: number;

        /** S2CDuanWeiChange newDuanWei. */
        public newDuanWei: number;

        /**
         * Creates a new S2CDuanWeiChange instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDuanWeiChange instance
         */
        public static create(properties?: pb.IS2CDuanWeiChange): pb.S2CDuanWeiChange;

        /**
         * Encodes the specified S2CDuanWeiChange message. Does not implicitly {@link pb.S2CDuanWeiChange.verify|verify} messages.
         * @param message S2CDuanWeiChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDuanWeiChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDuanWeiChange message, length delimited. Does not implicitly {@link pb.S2CDuanWeiChange.verify|verify} messages.
         * @param message S2CDuanWeiChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDuanWeiChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDuanWeiChange message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDuanWeiChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDuanWeiChange;

        /**
         * Decodes a S2CDuanWeiChange message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDuanWeiChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDuanWeiChange;

        /**
         * Verifies a S2CDuanWeiChange message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDuanWeiChange message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDuanWeiChange
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDuanWeiChange;

        /**
         * Creates a plain object from a S2CDuanWeiChange message. Also converts values to other types if specified.
         * @param message S2CDuanWeiChange
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDuanWeiChange, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDuanWeiChange to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CDuanWeiReset. */
    interface IS2CDuanWeiReset {

        /** S2CDuanWeiReset gameCat */
        gameCat?: (number|null);

        /** S2CDuanWeiReset oldDuanWei */
        oldDuanWei?: (number|null);

        /** S2CDuanWeiReset newDuanWei */
        newDuanWei?: (number|null);
    }

    /** Represents a S2CDuanWeiReset. */
    class S2CDuanWeiReset implements IS2CDuanWeiReset {

        /**
         * Constructs a new S2CDuanWeiReset.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CDuanWeiReset);

        /** S2CDuanWeiReset gameCat. */
        public gameCat: number;

        /** S2CDuanWeiReset oldDuanWei. */
        public oldDuanWei: number;

        /** S2CDuanWeiReset newDuanWei. */
        public newDuanWei: number;

        /**
         * Creates a new S2CDuanWeiReset instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CDuanWeiReset instance
         */
        public static create(properties?: pb.IS2CDuanWeiReset): pb.S2CDuanWeiReset;

        /**
         * Encodes the specified S2CDuanWeiReset message. Does not implicitly {@link pb.S2CDuanWeiReset.verify|verify} messages.
         * @param message S2CDuanWeiReset message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CDuanWeiReset, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CDuanWeiReset message, length delimited. Does not implicitly {@link pb.S2CDuanWeiReset.verify|verify} messages.
         * @param message S2CDuanWeiReset message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CDuanWeiReset, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CDuanWeiReset message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CDuanWeiReset
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CDuanWeiReset;

        /**
         * Decodes a S2CDuanWeiReset message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CDuanWeiReset
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CDuanWeiReset;

        /**
         * Verifies a S2CDuanWeiReset message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CDuanWeiReset message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CDuanWeiReset
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CDuanWeiReset;

        /**
         * Creates a plain object from a S2CDuanWeiReset message. Also converts values to other types if specified.
         * @param message S2CDuanWeiReset
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CDuanWeiReset, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CDuanWeiReset to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DuanWeiRewardCfg. */
    interface IDuanWeiRewardCfg {

        /** DuanWeiRewardCfg id */
        id?: (number|null);

        /** DuanWeiRewardCfg gameCat */
        gameCat?: (number|null);

        /** DuanWeiRewardCfg level */
        level?: (number|null);

        /** DuanWeiRewardCfg name */
        name?: (string|null);

        /** DuanWeiRewardCfg needScore */
        needScore?: (number|Long|null);

        /** DuanWeiRewardCfg reward */
        reward?: ({ [k: string]: (number|Long) }|null);

        /** DuanWeiRewardCfg descript */
        descript?: (string|null);

        /** DuanWeiRewardCfg protect */
        protect?: (number|null);

        /** DuanWeiRewardCfg inherit */
        inherit?: (number|null);

        /** DuanWeiRewardCfg scoreDesc */
        scoreDesc?: (string|null);

        /** DuanWeiRewardCfg diTuIcon */
        diTuIcon?: (number|null);

        /** DuanWeiRewardCfg dengJiIcon */
        dengJiIcon?: (number|null);
    }

    /** Represents a DuanWeiRewardCfg. */
    class DuanWeiRewardCfg implements IDuanWeiRewardCfg {

        /**
         * Constructs a new DuanWeiRewardCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IDuanWeiRewardCfg);

        /** DuanWeiRewardCfg id. */
        public id: number;

        /** DuanWeiRewardCfg gameCat. */
        public gameCat: number;

        /** DuanWeiRewardCfg level. */
        public level: number;

        /** DuanWeiRewardCfg name. */
        public name: string;

        /** DuanWeiRewardCfg needScore. */
        public needScore: (number|Long);

        /** DuanWeiRewardCfg reward. */
        public reward: { [k: string]: (number|Long) };

        /** DuanWeiRewardCfg descript. */
        public descript: string;

        /** DuanWeiRewardCfg protect. */
        public protect: number;

        /** DuanWeiRewardCfg inherit. */
        public inherit: number;

        /** DuanWeiRewardCfg scoreDesc. */
        public scoreDesc: string;

        /** DuanWeiRewardCfg diTuIcon. */
        public diTuIcon: number;

        /** DuanWeiRewardCfg dengJiIcon. */
        public dengJiIcon: number;

        /**
         * Creates a new DuanWeiRewardCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DuanWeiRewardCfg instance
         */
        public static create(properties?: pb.IDuanWeiRewardCfg): pb.DuanWeiRewardCfg;

        /**
         * Encodes the specified DuanWeiRewardCfg message. Does not implicitly {@link pb.DuanWeiRewardCfg.verify|verify} messages.
         * @param message DuanWeiRewardCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IDuanWeiRewardCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DuanWeiRewardCfg message, length delimited. Does not implicitly {@link pb.DuanWeiRewardCfg.verify|verify} messages.
         * @param message DuanWeiRewardCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IDuanWeiRewardCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DuanWeiRewardCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DuanWeiRewardCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.DuanWeiRewardCfg;

        /**
         * Decodes a DuanWeiRewardCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DuanWeiRewardCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.DuanWeiRewardCfg;

        /**
         * Verifies a DuanWeiRewardCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DuanWeiRewardCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DuanWeiRewardCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.DuanWeiRewardCfg;

        /**
         * Creates a plain object from a DuanWeiRewardCfg message. Also converts values to other types if specified.
         * @param message DuanWeiRewardCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.DuanWeiRewardCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DuanWeiRewardCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetSeasonDuanWeiCfg. */
    interface IC2SGetSeasonDuanWeiCfg {

        /** C2SGetSeasonDuanWeiCfg gameCat */
        gameCat?: (number|null);
    }

    /** Represents a C2SGetSeasonDuanWeiCfg. */
    class C2SGetSeasonDuanWeiCfg implements IC2SGetSeasonDuanWeiCfg {

        /**
         * Constructs a new C2SGetSeasonDuanWeiCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetSeasonDuanWeiCfg);

        /** C2SGetSeasonDuanWeiCfg gameCat. */
        public gameCat: number;

        /**
         * Creates a new C2SGetSeasonDuanWeiCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetSeasonDuanWeiCfg instance
         */
        public static create(properties?: pb.IC2SGetSeasonDuanWeiCfg): pb.C2SGetSeasonDuanWeiCfg;

        /**
         * Encodes the specified C2SGetSeasonDuanWeiCfg message. Does not implicitly {@link pb.C2SGetSeasonDuanWeiCfg.verify|verify} messages.
         * @param message C2SGetSeasonDuanWeiCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetSeasonDuanWeiCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetSeasonDuanWeiCfg message, length delimited. Does not implicitly {@link pb.C2SGetSeasonDuanWeiCfg.verify|verify} messages.
         * @param message C2SGetSeasonDuanWeiCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetSeasonDuanWeiCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetSeasonDuanWeiCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetSeasonDuanWeiCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetSeasonDuanWeiCfg;

        /**
         * Decodes a C2SGetSeasonDuanWeiCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetSeasonDuanWeiCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetSeasonDuanWeiCfg;

        /**
         * Verifies a C2SGetSeasonDuanWeiCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetSeasonDuanWeiCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetSeasonDuanWeiCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetSeasonDuanWeiCfg;

        /**
         * Creates a plain object from a C2SGetSeasonDuanWeiCfg message. Also converts values to other types if specified.
         * @param message C2SGetSeasonDuanWeiCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetSeasonDuanWeiCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetSeasonDuanWeiCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetSeasonDuanWeiCfg. */
    interface IS2CGetSeasonDuanWeiCfg {

        /** S2CGetSeasonDuanWeiCfg gameCat */
        gameCat?: (number|null);

        /** S2CGetSeasonDuanWeiCfg items */
        items?: (pb.IDuanWeiRewardCfg[]|null);
    }

    /** Represents a S2CGetSeasonDuanWeiCfg. */
    class S2CGetSeasonDuanWeiCfg implements IS2CGetSeasonDuanWeiCfg {

        /**
         * Constructs a new S2CGetSeasonDuanWeiCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetSeasonDuanWeiCfg);

        /** S2CGetSeasonDuanWeiCfg gameCat. */
        public gameCat: number;

        /** S2CGetSeasonDuanWeiCfg items. */
        public items: pb.IDuanWeiRewardCfg[];

        /**
         * Creates a new S2CGetSeasonDuanWeiCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetSeasonDuanWeiCfg instance
         */
        public static create(properties?: pb.IS2CGetSeasonDuanWeiCfg): pb.S2CGetSeasonDuanWeiCfg;

        /**
         * Encodes the specified S2CGetSeasonDuanWeiCfg message. Does not implicitly {@link pb.S2CGetSeasonDuanWeiCfg.verify|verify} messages.
         * @param message S2CGetSeasonDuanWeiCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetSeasonDuanWeiCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetSeasonDuanWeiCfg message, length delimited. Does not implicitly {@link pb.S2CGetSeasonDuanWeiCfg.verify|verify} messages.
         * @param message S2CGetSeasonDuanWeiCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetSeasonDuanWeiCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetSeasonDuanWeiCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetSeasonDuanWeiCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetSeasonDuanWeiCfg;

        /**
         * Decodes a S2CGetSeasonDuanWeiCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetSeasonDuanWeiCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetSeasonDuanWeiCfg;

        /**
         * Verifies a S2CGetSeasonDuanWeiCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetSeasonDuanWeiCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetSeasonDuanWeiCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetSeasonDuanWeiCfg;

        /**
         * Creates a plain object from a S2CGetSeasonDuanWeiCfg message. Also converts values to other types if specified.
         * @param message S2CGetSeasonDuanWeiCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetSeasonDuanWeiCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetSeasonDuanWeiCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetSeasonRewardCfg. */
    interface IC2SGetSeasonRewardCfg {

        /** C2SGetSeasonRewardCfg gameCat */
        gameCat?: (number|null);
    }

    /** Represents a C2SGetSeasonRewardCfg. */
    class C2SGetSeasonRewardCfg implements IC2SGetSeasonRewardCfg {

        /**
         * Constructs a new C2SGetSeasonRewardCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetSeasonRewardCfg);

        /** C2SGetSeasonRewardCfg gameCat. */
        public gameCat: number;

        /**
         * Creates a new C2SGetSeasonRewardCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetSeasonRewardCfg instance
         */
        public static create(properties?: pb.IC2SGetSeasonRewardCfg): pb.C2SGetSeasonRewardCfg;

        /**
         * Encodes the specified C2SGetSeasonRewardCfg message. Does not implicitly {@link pb.C2SGetSeasonRewardCfg.verify|verify} messages.
         * @param message C2SGetSeasonRewardCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetSeasonRewardCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetSeasonRewardCfg message, length delimited. Does not implicitly {@link pb.C2SGetSeasonRewardCfg.verify|verify} messages.
         * @param message C2SGetSeasonRewardCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetSeasonRewardCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetSeasonRewardCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetSeasonRewardCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetSeasonRewardCfg;

        /**
         * Decodes a C2SGetSeasonRewardCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetSeasonRewardCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetSeasonRewardCfg;

        /**
         * Verifies a C2SGetSeasonRewardCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetSeasonRewardCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetSeasonRewardCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetSeasonRewardCfg;

        /**
         * Creates a plain object from a C2SGetSeasonRewardCfg message. Also converts values to other types if specified.
         * @param message C2SGetSeasonRewardCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetSeasonRewardCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetSeasonRewardCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetSeasonRewardCfg. */
    interface IS2CGetSeasonRewardCfg {

        /** S2CGetSeasonRewardCfg gameCat */
        gameCat?: (number|null);

        /** S2CGetSeasonRewardCfg items */
        items?: (pb.ISeasonRewardCfg[]|null);
    }

    /** Represents a S2CGetSeasonRewardCfg. */
    class S2CGetSeasonRewardCfg implements IS2CGetSeasonRewardCfg {

        /**
         * Constructs a new S2CGetSeasonRewardCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetSeasonRewardCfg);

        /** S2CGetSeasonRewardCfg gameCat. */
        public gameCat: number;

        /** S2CGetSeasonRewardCfg items. */
        public items: pb.ISeasonRewardCfg[];

        /**
         * Creates a new S2CGetSeasonRewardCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetSeasonRewardCfg instance
         */
        public static create(properties?: pb.IS2CGetSeasonRewardCfg): pb.S2CGetSeasonRewardCfg;

        /**
         * Encodes the specified S2CGetSeasonRewardCfg message. Does not implicitly {@link pb.S2CGetSeasonRewardCfg.verify|verify} messages.
         * @param message S2CGetSeasonRewardCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetSeasonRewardCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetSeasonRewardCfg message, length delimited. Does not implicitly {@link pb.S2CGetSeasonRewardCfg.verify|verify} messages.
         * @param message S2CGetSeasonRewardCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetSeasonRewardCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetSeasonRewardCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetSeasonRewardCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetSeasonRewardCfg;

        /**
         * Decodes a S2CGetSeasonRewardCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetSeasonRewardCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetSeasonRewardCfg;

        /**
         * Verifies a S2CGetSeasonRewardCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetSeasonRewardCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetSeasonRewardCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetSeasonRewardCfg;

        /**
         * Creates a plain object from a S2CGetSeasonRewardCfg message. Also converts values to other types if specified.
         * @param message S2CGetSeasonRewardCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetSeasonRewardCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetSeasonRewardCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SSeasonHisRankList. */
    interface IC2SSeasonHisRankList {

        /** C2SSeasonHisRankList gameCat */
        gameCat?: (number|null);
    }

    /** Represents a C2SSeasonHisRankList. */
    class C2SSeasonHisRankList implements IC2SSeasonHisRankList {

        /**
         * Constructs a new C2SSeasonHisRankList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SSeasonHisRankList);

        /** C2SSeasonHisRankList gameCat. */
        public gameCat: number;

        /**
         * Creates a new C2SSeasonHisRankList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SSeasonHisRankList instance
         */
        public static create(properties?: pb.IC2SSeasonHisRankList): pb.C2SSeasonHisRankList;

        /**
         * Encodes the specified C2SSeasonHisRankList message. Does not implicitly {@link pb.C2SSeasonHisRankList.verify|verify} messages.
         * @param message C2SSeasonHisRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SSeasonHisRankList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SSeasonHisRankList message, length delimited. Does not implicitly {@link pb.C2SSeasonHisRankList.verify|verify} messages.
         * @param message C2SSeasonHisRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SSeasonHisRankList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SSeasonHisRankList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SSeasonHisRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SSeasonHisRankList;

        /**
         * Decodes a C2SSeasonHisRankList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SSeasonHisRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SSeasonHisRankList;

        /**
         * Verifies a C2SSeasonHisRankList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SSeasonHisRankList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SSeasonHisRankList
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SSeasonHisRankList;

        /**
         * Creates a plain object from a C2SSeasonHisRankList message. Also converts values to other types if specified.
         * @param message C2SSeasonHisRankList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SSeasonHisRankList, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SSeasonHisRankList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CSeasonHisRankList. */
    interface IS2CSeasonHisRankList {

        /** S2CSeasonHisRankList gameCat */
        gameCat?: (number|null);

        /** S2CSeasonHisRankList datas */
        datas?: (pb.ISeasonRankList[]|null);
    }

    /** Represents a S2CSeasonHisRankList. */
    class S2CSeasonHisRankList implements IS2CSeasonHisRankList {

        /**
         * Constructs a new S2CSeasonHisRankList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CSeasonHisRankList);

        /** S2CSeasonHisRankList gameCat. */
        public gameCat: number;

        /** S2CSeasonHisRankList datas. */
        public datas: pb.ISeasonRankList[];

        /**
         * Creates a new S2CSeasonHisRankList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CSeasonHisRankList instance
         */
        public static create(properties?: pb.IS2CSeasonHisRankList): pb.S2CSeasonHisRankList;

        /**
         * Encodes the specified S2CSeasonHisRankList message. Does not implicitly {@link pb.S2CSeasonHisRankList.verify|verify} messages.
         * @param message S2CSeasonHisRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CSeasonHisRankList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CSeasonHisRankList message, length delimited. Does not implicitly {@link pb.S2CSeasonHisRankList.verify|verify} messages.
         * @param message S2CSeasonHisRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CSeasonHisRankList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CSeasonHisRankList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CSeasonHisRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CSeasonHisRankList;

        /**
         * Decodes a S2CSeasonHisRankList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CSeasonHisRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CSeasonHisRankList;

        /**
         * Verifies a S2CSeasonHisRankList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CSeasonHisRankList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CSeasonHisRankList
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CSeasonHisRankList;

        /**
         * Creates a plain object from a S2CSeasonHisRankList message. Also converts values to other types if specified.
         * @param message S2CSeasonHisRankList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CSeasonHisRankList, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CSeasonHisRankList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** AreaId enum. */
    enum AreaId {
        AreaId_Null = 0,
        AreaId_Nation = -1
    }

    /** AreaUnit enum. */
    enum AreaUnit {
        AreaUnit_Null = 0,
        AreaUnit_Nation = 1,
        AreaUnit_Province = 2,
        AreaUnit_City = 3
    }

    /** SeasonState enum. */
    enum SeasonState {
        SeasonState_Null = 0,
        SeasonState_Run = 1,
        SeasonState_End = 2,
        SeasonState_Wait = 3
    }

    /** Properties of a SeasonCfg. */
    interface ISeasonCfg {

        /** SeasonCfg seasonNum */
        seasonNum?: (number|null);

        /** SeasonCfg lastStartTime */
        lastStartTime?: (number|Long|null);

        /** SeasonCfg lastEndTime */
        lastEndTime?: (number|Long|null);

        /** SeasonCfg startTime */
        startTime?: (number|Long|null);

        /** SeasonCfg duration */
        duration?: (number|null);

        /** SeasonCfg interval */
        interval?: (number|null);

        /** SeasonCfg state */
        state?: (pb.SeasonState|null);
    }

    /** Represents a SeasonCfg. */
    class SeasonCfg implements ISeasonCfg {

        /**
         * Constructs a new SeasonCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonCfg);

        /** SeasonCfg seasonNum. */
        public seasonNum: number;

        /** SeasonCfg lastStartTime. */
        public lastStartTime: (number|Long);

        /** SeasonCfg lastEndTime. */
        public lastEndTime: (number|Long);

        /** SeasonCfg startTime. */
        public startTime: (number|Long);

        /** SeasonCfg duration. */
        public duration: number;

        /** SeasonCfg interval. */
        public interval: number;

        /** SeasonCfg state. */
        public state: pb.SeasonState;

        /**
         * Creates a new SeasonCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonCfg instance
         */
        public static create(properties?: pb.ISeasonCfg): pb.SeasonCfg;

        /**
         * Encodes the specified SeasonCfg message. Does not implicitly {@link pb.SeasonCfg.verify|verify} messages.
         * @param message SeasonCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SeasonCfg message, length delimited. Does not implicitly {@link pb.SeasonCfg.verify|verify} messages.
         * @param message SeasonCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SeasonCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.SeasonCfg;

        /**
         * Decodes a SeasonCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.SeasonCfg;

        /**
         * Verifies a SeasonCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SeasonCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SeasonCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.SeasonCfg;

        /**
         * Creates a plain object from a SeasonCfg message. Also converts values to other types if specified.
         * @param message SeasonCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.SeasonCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SeasonCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SeasonRankItem. */
    interface ISeasonRankItem {

        /** SeasonRankItem player */
        player?: (pb.IPlayerShowBase|null);

        /** SeasonRankItem duanWei */
        duanWei?: (number|null);

        /** SeasonRankItem score */
        score?: (number|Long|null);

        /** SeasonRankItem rank */
        rank?: (number|null);

        /** SeasonRankItem playTimes */
        playTimes?: (number|null);

        /** SeasonRankItem winTimes */
        winTimes?: (number|null);
    }

    /** Represents a SeasonRankItem. */
    class SeasonRankItem implements ISeasonRankItem {

        /**
         * Constructs a new SeasonRankItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonRankItem);

        /** SeasonRankItem player. */
        public player?: (pb.IPlayerShowBase|null);

        /** SeasonRankItem duanWei. */
        public duanWei: number;

        /** SeasonRankItem score. */
        public score: (number|Long);

        /** SeasonRankItem rank. */
        public rank: number;

        /** SeasonRankItem playTimes. */
        public playTimes: number;

        /** SeasonRankItem winTimes. */
        public winTimes: number;

        /**
         * Creates a new SeasonRankItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonRankItem instance
         */
        public static create(properties?: pb.ISeasonRankItem): pb.SeasonRankItem;

        /**
         * Encodes the specified SeasonRankItem message. Does not implicitly {@link pb.SeasonRankItem.verify|verify} messages.
         * @param message SeasonRankItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonRankItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SeasonRankItem message, length delimited. Does not implicitly {@link pb.SeasonRankItem.verify|verify} messages.
         * @param message SeasonRankItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonRankItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SeasonRankItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonRankItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.SeasonRankItem;

        /**
         * Decodes a SeasonRankItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonRankItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.SeasonRankItem;

        /**
         * Verifies a SeasonRankItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SeasonRankItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SeasonRankItem
         */
        public static fromObject(object: { [k: string]: any }): pb.SeasonRankItem;

        /**
         * Creates a plain object from a SeasonRankItem message. Also converts values to other types if specified.
         * @param message SeasonRankItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.SeasonRankItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SeasonRankItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SeasonRewardCfg. */
    interface ISeasonRewardCfg {

        /** SeasonRewardCfg id */
        id?: (number|null);

        /** SeasonRewardCfg gameCat */
        gameCat?: (number|null);

        /** SeasonRewardCfg startRank */
        startRank?: (number|null);

        /** SeasonRewardCfg endRank */
        endRank?: (number|null);

        /** SeasonRewardCfg reward */
        reward?: ({ [k: string]: (number|Long) }|null);

        /** SeasonRewardCfg desc */
        desc?: (string|null);
    }

    /** Represents a SeasonRewardCfg. */
    class SeasonRewardCfg implements ISeasonRewardCfg {

        /**
         * Constructs a new SeasonRewardCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonRewardCfg);

        /** SeasonRewardCfg id. */
        public id: number;

        /** SeasonRewardCfg gameCat. */
        public gameCat: number;

        /** SeasonRewardCfg startRank. */
        public startRank: number;

        /** SeasonRewardCfg endRank. */
        public endRank: number;

        /** SeasonRewardCfg reward. */
        public reward: { [k: string]: (number|Long) };

        /** SeasonRewardCfg desc. */
        public desc: string;

        /**
         * Creates a new SeasonRewardCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonRewardCfg instance
         */
        public static create(properties?: pb.ISeasonRewardCfg): pb.SeasonRewardCfg;

        /**
         * Encodes the specified SeasonRewardCfg message. Does not implicitly {@link pb.SeasonRewardCfg.verify|verify} messages.
         * @param message SeasonRewardCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonRewardCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SeasonRewardCfg message, length delimited. Does not implicitly {@link pb.SeasonRewardCfg.verify|verify} messages.
         * @param message SeasonRewardCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonRewardCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SeasonRewardCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonRewardCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.SeasonRewardCfg;

        /**
         * Decodes a SeasonRewardCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonRewardCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.SeasonRewardCfg;

        /**
         * Verifies a SeasonRewardCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SeasonRewardCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SeasonRewardCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.SeasonRewardCfg;

        /**
         * Creates a plain object from a SeasonRewardCfg message. Also converts values to other types if specified.
         * @param message SeasonRewardCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.SeasonRewardCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SeasonRewardCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PlayerSeasonData. */
    interface IPlayerSeasonData {

        /** PlayerSeasonData seasonNum */
        seasonNum?: (number|null);

        /** PlayerSeasonData player */
        player?: (pb.IPlayerShowBase|null);

        /** PlayerSeasonData prov */
        prov?: (number|Long|null);

        /** PlayerSeasonData city */
        city?: (number|Long|null);

        /** PlayerSeasonData gameCat */
        gameCat?: (number|null);

        /** PlayerSeasonData duanWei */
        duanWei?: (number|null);

        /** PlayerSeasonData score */
        score?: (number|Long|null);

        /** PlayerSeasonData playTimes */
        playTimes?: (number|null);

        /** PlayerSeasonData winTimes */
        winTimes?: (number|null);

        /** PlayerSeasonData rank */
        rank?: (number|null);
    }

    /** Represents a PlayerSeasonData. */
    class PlayerSeasonData implements IPlayerSeasonData {

        /**
         * Constructs a new PlayerSeasonData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPlayerSeasonData);

        /** PlayerSeasonData seasonNum. */
        public seasonNum: number;

        /** PlayerSeasonData player. */
        public player?: (pb.IPlayerShowBase|null);

        /** PlayerSeasonData prov. */
        public prov: (number|Long);

        /** PlayerSeasonData city. */
        public city: (number|Long);

        /** PlayerSeasonData gameCat. */
        public gameCat: number;

        /** PlayerSeasonData duanWei. */
        public duanWei: number;

        /** PlayerSeasonData score. */
        public score: (number|Long);

        /** PlayerSeasonData playTimes. */
        public playTimes: number;

        /** PlayerSeasonData winTimes. */
        public winTimes: number;

        /** PlayerSeasonData rank. */
        public rank: number;

        /**
         * Creates a new PlayerSeasonData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlayerSeasonData instance
         */
        public static create(properties?: pb.IPlayerSeasonData): pb.PlayerSeasonData;

        /**
         * Encodes the specified PlayerSeasonData message. Does not implicitly {@link pb.PlayerSeasonData.verify|verify} messages.
         * @param message PlayerSeasonData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPlayerSeasonData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PlayerSeasonData message, length delimited. Does not implicitly {@link pb.PlayerSeasonData.verify|verify} messages.
         * @param message PlayerSeasonData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPlayerSeasonData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PlayerSeasonData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerSeasonData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.PlayerSeasonData;

        /**
         * Decodes a PlayerSeasonData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlayerSeasonData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.PlayerSeasonData;

        /**
         * Verifies a PlayerSeasonData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlayerSeasonData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlayerSeasonData
         */
        public static fromObject(object: { [k: string]: any }): pb.PlayerSeasonData;

        /**
         * Creates a plain object from a PlayerSeasonData message. Also converts values to other types if specified.
         * @param message PlayerSeasonData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.PlayerSeasonData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlayerSeasonData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SeasonRankListItem. */
    interface ISeasonRankListItem {

        /** SeasonRankListItem area */
        area?: (number|Long|null);

        /** SeasonRankListItem items */
        items?: (pb.IPlayerSeasonData[]|null);
    }

    /** Represents a SeasonRankListItem. */
    class SeasonRankListItem implements ISeasonRankListItem {

        /**
         * Constructs a new SeasonRankListItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonRankListItem);

        /** SeasonRankListItem area. */
        public area: (number|Long);

        /** SeasonRankListItem items. */
        public items: pb.IPlayerSeasonData[];

        /**
         * Creates a new SeasonRankListItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonRankListItem instance
         */
        public static create(properties?: pb.ISeasonRankListItem): pb.SeasonRankListItem;

        /**
         * Encodes the specified SeasonRankListItem message. Does not implicitly {@link pb.SeasonRankListItem.verify|verify} messages.
         * @param message SeasonRankListItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonRankListItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SeasonRankListItem message, length delimited. Does not implicitly {@link pb.SeasonRankListItem.verify|verify} messages.
         * @param message SeasonRankListItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonRankListItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SeasonRankListItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonRankListItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.SeasonRankListItem;

        /**
         * Decodes a SeasonRankListItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonRankListItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.SeasonRankListItem;

        /**
         * Verifies a SeasonRankListItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SeasonRankListItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SeasonRankListItem
         */
        public static fromObject(object: { [k: string]: any }): pb.SeasonRankListItem;

        /**
         * Creates a plain object from a SeasonRankListItem message. Also converts values to other types if specified.
         * @param message SeasonRankListItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.SeasonRankListItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SeasonRankListItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SeasonRankList. */
    interface ISeasonRankList {

        /** SeasonRankList gameCat */
        gameCat?: (number|null);

        /** SeasonRankList seasonNum */
        seasonNum?: (number|null);

        /** SeasonRankList startTime */
        startTime?: (number|Long|null);

        /** SeasonRankList endTime */
        endTime?: (number|Long|null);

        /** SeasonRankList items */
        items?: (pb.ISeasonRankListItem[]|null);
    }

    /** Represents a SeasonRankList. */
    class SeasonRankList implements ISeasonRankList {

        /**
         * Constructs a new SeasonRankList.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ISeasonRankList);

        /** SeasonRankList gameCat. */
        public gameCat: number;

        /** SeasonRankList seasonNum. */
        public seasonNum: number;

        /** SeasonRankList startTime. */
        public startTime: (number|Long);

        /** SeasonRankList endTime. */
        public endTime: (number|Long);

        /** SeasonRankList items. */
        public items: pb.ISeasonRankListItem[];

        /**
         * Creates a new SeasonRankList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeasonRankList instance
         */
        public static create(properties?: pb.ISeasonRankList): pb.SeasonRankList;

        /**
         * Encodes the specified SeasonRankList message. Does not implicitly {@link pb.SeasonRankList.verify|verify} messages.
         * @param message SeasonRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ISeasonRankList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SeasonRankList message, length delimited. Does not implicitly {@link pb.SeasonRankList.verify|verify} messages.
         * @param message SeasonRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ISeasonRankList, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SeasonRankList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeasonRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.SeasonRankList;

        /**
         * Decodes a SeasonRankList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeasonRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.SeasonRankList;

        /**
         * Verifies a SeasonRankList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SeasonRankList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SeasonRankList
         */
        public static fromObject(object: { [k: string]: any }): pb.SeasonRankList;

        /**
         * Creates a plain object from a SeasonRankList message. Also converts values to other types if specified.
         * @param message SeasonRankList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.SeasonRankList, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SeasonRankList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetShopItems. */
    interface IC2SGetShopItems {
    }

    /** Represents a C2SGetShopItems. */
    class C2SGetShopItems implements IC2SGetShopItems {

        /**
         * Constructs a new C2SGetShopItems.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetShopItems);

        /**
         * Creates a new C2SGetShopItems instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetShopItems instance
         */
        public static create(properties?: pb.IC2SGetShopItems): pb.C2SGetShopItems;

        /**
         * Encodes the specified C2SGetShopItems message. Does not implicitly {@link pb.C2SGetShopItems.verify|verify} messages.
         * @param message C2SGetShopItems message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetShopItems, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetShopItems message, length delimited. Does not implicitly {@link pb.C2SGetShopItems.verify|verify} messages.
         * @param message C2SGetShopItems message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetShopItems, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetShopItems message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetShopItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetShopItems;

        /**
         * Decodes a C2SGetShopItems message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetShopItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetShopItems;

        /**
         * Verifies a C2SGetShopItems message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetShopItems message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetShopItems
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetShopItems;

        /**
         * Creates a plain object from a C2SGetShopItems message. Also converts values to other types if specified.
         * @param message C2SGetShopItems
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetShopItems, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetShopItems to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CatShopItem. */
    interface ICatShopItem {

        /** CatShopItem catName */
        catName?: (string|null);

        /** CatShopItem items */
        items?: (pb.IShopItem[]|null);
    }

    /** Represents a CatShopItem. */
    class CatShopItem implements ICatShopItem {

        /**
         * Constructs a new CatShopItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICatShopItem);

        /** CatShopItem catName. */
        public catName: string;

        /** CatShopItem items. */
        public items: pb.IShopItem[];

        /**
         * Creates a new CatShopItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CatShopItem instance
         */
        public static create(properties?: pb.ICatShopItem): pb.CatShopItem;

        /**
         * Encodes the specified CatShopItem message. Does not implicitly {@link pb.CatShopItem.verify|verify} messages.
         * @param message CatShopItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICatShopItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CatShopItem message, length delimited. Does not implicitly {@link pb.CatShopItem.verify|verify} messages.
         * @param message CatShopItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICatShopItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CatShopItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CatShopItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.CatShopItem;

        /**
         * Decodes a CatShopItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CatShopItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.CatShopItem;

        /**
         * Verifies a CatShopItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CatShopItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CatShopItem
         */
        public static fromObject(object: { [k: string]: any }): pb.CatShopItem;

        /**
         * Creates a plain object from a CatShopItem message. Also converts values to other types if specified.
         * @param message CatShopItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.CatShopItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CatShopItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetShopItems. */
    interface IS2CGetShopItems {

        /** S2CGetShopItems catShop */
        catShop?: (pb.ICatShopItem[]|null);
    }

    /** Represents a S2CGetShopItems. */
    class S2CGetShopItems implements IS2CGetShopItems {

        /**
         * Constructs a new S2CGetShopItems.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetShopItems);

        /** S2CGetShopItems catShop. */
        public catShop: pb.ICatShopItem[];

        /**
         * Creates a new S2CGetShopItems instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetShopItems instance
         */
        public static create(properties?: pb.IS2CGetShopItems): pb.S2CGetShopItems;

        /**
         * Encodes the specified S2CGetShopItems message. Does not implicitly {@link pb.S2CGetShopItems.verify|verify} messages.
         * @param message S2CGetShopItems message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetShopItems, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetShopItems message, length delimited. Does not implicitly {@link pb.S2CGetShopItems.verify|verify} messages.
         * @param message S2CGetShopItems message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetShopItems, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetShopItems message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetShopItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetShopItems;

        /**
         * Decodes a S2CGetShopItems message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetShopItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetShopItems;

        /**
         * Verifies a S2CGetShopItems message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetShopItems message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetShopItems
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetShopItems;

        /**
         * Creates a plain object from a S2CGetShopItems message. Also converts values to other types if specified.
         * @param message S2CGetShopItems
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetShopItems, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetShopItems to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SBuyShopItem. */
    interface IC2SBuyShopItem {

        /** C2SBuyShopItem id */
        id?: (number|null);

        /** C2SBuyShopItem num */
        num?: (number|null);
    }

    /** Represents a C2SBuyShopItem. */
    class C2SBuyShopItem implements IC2SBuyShopItem {

        /**
         * Constructs a new C2SBuyShopItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SBuyShopItem);

        /** C2SBuyShopItem id. */
        public id: number;

        /** C2SBuyShopItem num. */
        public num: number;

        /**
         * Creates a new C2SBuyShopItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SBuyShopItem instance
         */
        public static create(properties?: pb.IC2SBuyShopItem): pb.C2SBuyShopItem;

        /**
         * Encodes the specified C2SBuyShopItem message. Does not implicitly {@link pb.C2SBuyShopItem.verify|verify} messages.
         * @param message C2SBuyShopItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SBuyShopItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SBuyShopItem message, length delimited. Does not implicitly {@link pb.C2SBuyShopItem.verify|verify} messages.
         * @param message C2SBuyShopItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SBuyShopItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SBuyShopItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SBuyShopItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SBuyShopItem;

        /**
         * Decodes a C2SBuyShopItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SBuyShopItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SBuyShopItem;

        /**
         * Verifies a C2SBuyShopItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SBuyShopItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SBuyShopItem
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SBuyShopItem;

        /**
         * Creates a plain object from a C2SBuyShopItem message. Also converts values to other types if specified.
         * @param message C2SBuyShopItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SBuyShopItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SBuyShopItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CBuyShopItem. */
    interface IS2CBuyShopItem {

        /** S2CBuyShopItem id */
        id?: (number|null);

        /** S2CBuyShopItem ec */
        ec?: (number|null);
    }

    /** Represents a S2CBuyShopItem. */
    class S2CBuyShopItem implements IS2CBuyShopItem {

        /**
         * Constructs a new S2CBuyShopItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CBuyShopItem);

        /** S2CBuyShopItem id. */
        public id: number;

        /** S2CBuyShopItem ec. */
        public ec: number;

        /**
         * Creates a new S2CBuyShopItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CBuyShopItem instance
         */
        public static create(properties?: pb.IS2CBuyShopItem): pb.S2CBuyShopItem;

        /**
         * Encodes the specified S2CBuyShopItem message. Does not implicitly {@link pb.S2CBuyShopItem.verify|verify} messages.
         * @param message S2CBuyShopItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CBuyShopItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CBuyShopItem message, length delimited. Does not implicitly {@link pb.S2CBuyShopItem.verify|verify} messages.
         * @param message S2CBuyShopItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CBuyShopItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CBuyShopItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CBuyShopItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CBuyShopItem;

        /**
         * Decodes a S2CBuyShopItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CBuyShopItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CBuyShopItem;

        /**
         * Verifies a S2CBuyShopItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CBuyShopItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CBuyShopItem
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CBuyShopItem;

        /**
         * Creates a plain object from a S2CBuyShopItem message. Also converts values to other types if specified.
         * @param message S2CBuyShopItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CBuyShopItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CBuyShopItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CPortFrames. */
    interface IS2CPortFrames {

        /** S2CPortFrames items */
        items?: (number[]|null);
    }

    /** Represents a S2CPortFrames. */
    class S2CPortFrames implements IS2CPortFrames {

        /**
         * Constructs a new S2CPortFrames.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CPortFrames);

        /** S2CPortFrames items. */
        public items: number[];

        /**
         * Creates a new S2CPortFrames instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CPortFrames instance
         */
        public static create(properties?: pb.IS2CPortFrames): pb.S2CPortFrames;

        /**
         * Encodes the specified S2CPortFrames message. Does not implicitly {@link pb.S2CPortFrames.verify|verify} messages.
         * @param message S2CPortFrames message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CPortFrames, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CPortFrames message, length delimited. Does not implicitly {@link pb.S2CPortFrames.verify|verify} messages.
         * @param message S2CPortFrames message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CPortFrames, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CPortFrames message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CPortFrames
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CPortFrames;

        /**
         * Decodes a S2CPortFrames message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CPortFrames
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CPortFrames;

        /**
         * Verifies a S2CPortFrames message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CPortFrames message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CPortFrames
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CPortFrames;

        /**
         * Creates a plain object from a S2CPortFrames message. Also converts values to other types if specified.
         * @param message S2CPortFrames
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CPortFrames, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CPortFrames to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SSetBuyCb. */
    interface IC2SSetBuyCb {

        /** C2SSetBuyCb orderId */
        orderId?: (string|null);

        /** C2SSetBuyCb shopId */
        shopId?: (number|null);

        /** C2SSetBuyCb num */
        num?: (number|null);
    }

    /** Represents a C2SSetBuyCb. */
    class C2SSetBuyCb implements IC2SSetBuyCb {

        /**
         * Constructs a new C2SSetBuyCb.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SSetBuyCb);

        /** C2SSetBuyCb orderId. */
        public orderId: string;

        /** C2SSetBuyCb shopId. */
        public shopId: number;

        /** C2SSetBuyCb num. */
        public num: number;

        /**
         * Creates a new C2SSetBuyCb instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SSetBuyCb instance
         */
        public static create(properties?: pb.IC2SSetBuyCb): pb.C2SSetBuyCb;

        /**
         * Encodes the specified C2SSetBuyCb message. Does not implicitly {@link pb.C2SSetBuyCb.verify|verify} messages.
         * @param message C2SSetBuyCb message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SSetBuyCb, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SSetBuyCb message, length delimited. Does not implicitly {@link pb.C2SSetBuyCb.verify|verify} messages.
         * @param message C2SSetBuyCb message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SSetBuyCb, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SSetBuyCb message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SSetBuyCb
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SSetBuyCb;

        /**
         * Decodes a C2SSetBuyCb message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SSetBuyCb
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SSetBuyCb;

        /**
         * Verifies a C2SSetBuyCb message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SSetBuyCb message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SSetBuyCb
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SSetBuyCb;

        /**
         * Creates a plain object from a C2SSetBuyCb message. Also converts values to other types if specified.
         * @param message C2SSetBuyCb
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SSetBuyCb, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SSetBuyCb to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetZbShopItems. */
    interface IC2SGetZbShopItems {
    }

    /** Represents a C2SGetZbShopItems. */
    class C2SGetZbShopItems implements IC2SGetZbShopItems {

        /**
         * Constructs a new C2SGetZbShopItems.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetZbShopItems);

        /**
         * Creates a new C2SGetZbShopItems instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetZbShopItems instance
         */
        public static create(properties?: pb.IC2SGetZbShopItems): pb.C2SGetZbShopItems;

        /**
         * Encodes the specified C2SGetZbShopItems message. Does not implicitly {@link pb.C2SGetZbShopItems.verify|verify} messages.
         * @param message C2SGetZbShopItems message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetZbShopItems, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetZbShopItems message, length delimited. Does not implicitly {@link pb.C2SGetZbShopItems.verify|verify} messages.
         * @param message C2SGetZbShopItems message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetZbShopItems, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetZbShopItems message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetZbShopItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetZbShopItems;

        /**
         * Decodes a C2SGetZbShopItems message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetZbShopItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetZbShopItems;

        /**
         * Verifies a C2SGetZbShopItems message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetZbShopItems message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetZbShopItems
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetZbShopItems;

        /**
         * Creates a plain object from a C2SGetZbShopItems message. Also converts values to other types if specified.
         * @param message C2SGetZbShopItems
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetZbShopItems, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetZbShopItems to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetZbShopItems. */
    interface IS2CGetZbShopItems {

        /** S2CGetZbShopItems items */
        items?: (pb.IZbShopItem[]|null);
    }

    /** Represents a S2CGetZbShopItems. */
    class S2CGetZbShopItems implements IS2CGetZbShopItems {

        /**
         * Constructs a new S2CGetZbShopItems.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetZbShopItems);

        /** S2CGetZbShopItems items. */
        public items: pb.IZbShopItem[];

        /**
         * Creates a new S2CGetZbShopItems instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetZbShopItems instance
         */
        public static create(properties?: pb.IS2CGetZbShopItems): pb.S2CGetZbShopItems;

        /**
         * Encodes the specified S2CGetZbShopItems message. Does not implicitly {@link pb.S2CGetZbShopItems.verify|verify} messages.
         * @param message S2CGetZbShopItems message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetZbShopItems, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetZbShopItems message, length delimited. Does not implicitly {@link pb.S2CGetZbShopItems.verify|verify} messages.
         * @param message S2CGetZbShopItems message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetZbShopItems, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetZbShopItems message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetZbShopItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetZbShopItems;

        /**
         * Decodes a S2CGetZbShopItems message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetZbShopItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetZbShopItems;

        /**
         * Verifies a S2CGetZbShopItems message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetZbShopItems message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetZbShopItems
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetZbShopItems;

        /**
         * Creates a plain object from a S2CGetZbShopItems message. Also converts values to other types if specified.
         * @param message S2CGetZbShopItems
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetZbShopItems, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetZbShopItems to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** BuyCurrencyType enum. */
    enum BuyCurrencyType {
        BuyCurrencyType_Null = 0,
        BuyCurrencyType_Rmb = 1,
        BuyCurrencyType_Gem = 2,
        BuyCurrencyType_HuafeiQuan = 3,
        BuyCurrencyType_Advert = 4,
        BuyCurrencyType_Share = 5
    }

    /** ShopCat enum. */
    enum ShopCat {
        ShopCat_Null = 0,
        ShopCat_Coin = 1,
        ShopCat_Gem = 2,
        ShopCat_GemExchange = 3
    }

    /** Properties of a ShopItem. */
    interface IShopItem {

        /** ShopItem id */
        id?: (number|null);

        /** ShopItem catName */
        catName?: (string|null);

        /** ShopItem catOrder */
        catOrder?: (number|null);

        /** ShopItem name */
        name?: (string|null);

        /** ShopItem itemType */
        itemType?: (number|null);

        /** ShopItem amount */
        amount?: (number|Long|null);

        /** ShopItem donateAmount */
        donateAmount?: (number|Long|null);

        /** ShopItem donateTimes */
        donateTimes?: (number|null);

        /** ShopItem ct */
        ct?: (pb.BuyCurrencyType|null);

        /** ShopItem price */
        price?: (number|null);

        /** ShopItem dayReset */
        dayReset?: (boolean|null);

        /** ShopItem dayLimit */
        dayLimit?: (number|null);
    }

    /** Represents a ShopItem. */
    class ShopItem implements IShopItem {

        /**
         * Constructs a new ShopItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IShopItem);

        /** ShopItem id. */
        public id: number;

        /** ShopItem catName. */
        public catName: string;

        /** ShopItem catOrder. */
        public catOrder: number;

        /** ShopItem name. */
        public name: string;

        /** ShopItem itemType. */
        public itemType: number;

        /** ShopItem amount. */
        public amount: (number|Long);

        /** ShopItem donateAmount. */
        public donateAmount: (number|Long);

        /** ShopItem donateTimes. */
        public donateTimes: number;

        /** ShopItem ct. */
        public ct: pb.BuyCurrencyType;

        /** ShopItem price. */
        public price: number;

        /** ShopItem dayReset. */
        public dayReset: boolean;

        /** ShopItem dayLimit. */
        public dayLimit: number;

        /**
         * Creates a new ShopItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShopItem instance
         */
        public static create(properties?: pb.IShopItem): pb.ShopItem;

        /**
         * Encodes the specified ShopItem message. Does not implicitly {@link pb.ShopItem.verify|verify} messages.
         * @param message ShopItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IShopItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShopItem message, length delimited. Does not implicitly {@link pb.ShopItem.verify|verify} messages.
         * @param message ShopItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IShopItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShopItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShopItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ShopItem;

        /**
         * Decodes a ShopItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShopItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ShopItem;

        /**
         * Verifies a ShopItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShopItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShopItem
         */
        public static fromObject(object: { [k: string]: any }): pb.ShopItem;

        /**
         * Creates a plain object from a ShopItem message. Also converts values to other types if specified.
         * @param message ShopItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ShopItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShopItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ZbShopSubItem. */
    interface IZbShopSubItem {

        /** ZbShopSubItem shopId */
        shopId?: (number|null);

        /** ZbShopSubItem expire */
        expire?: (number|null);

        /** ZbShopSubItem ct */
        ct?: (pb.BuyCurrencyType|null);

        /** ZbShopSubItem price */
        price?: (number|null);
    }

    /** Represents a ZbShopSubItem. */
    class ZbShopSubItem implements IZbShopSubItem {

        /**
         * Constructs a new ZbShopSubItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IZbShopSubItem);

        /** ZbShopSubItem shopId. */
        public shopId: number;

        /** ZbShopSubItem expire. */
        public expire: number;

        /** ZbShopSubItem ct. */
        public ct: pb.BuyCurrencyType;

        /** ZbShopSubItem price. */
        public price: number;

        /**
         * Creates a new ZbShopSubItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ZbShopSubItem instance
         */
        public static create(properties?: pb.IZbShopSubItem): pb.ZbShopSubItem;

        /**
         * Encodes the specified ZbShopSubItem message. Does not implicitly {@link pb.ZbShopSubItem.verify|verify} messages.
         * @param message ZbShopSubItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IZbShopSubItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ZbShopSubItem message, length delimited. Does not implicitly {@link pb.ZbShopSubItem.verify|verify} messages.
         * @param message ZbShopSubItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IZbShopSubItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ZbShopSubItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ZbShopSubItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ZbShopSubItem;

        /**
         * Decodes a ZbShopSubItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ZbShopSubItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ZbShopSubItem;

        /**
         * Verifies a ZbShopSubItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ZbShopSubItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ZbShopSubItem
         */
        public static fromObject(object: { [k: string]: any }): pb.ZbShopSubItem;

        /**
         * Creates a plain object from a ZbShopSubItem message. Also converts values to other types if specified.
         * @param message ZbShopSubItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ZbShopSubItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ZbShopSubItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ZbShopItem. */
    interface IZbShopItem {

        /** ZbShopItem id */
        id?: (number|null);

        /** ZbShopItem catName */
        catName?: (string|null);

        /** ZbShopItem catOrder */
        catOrder?: (number|null);

        /** ZbShopItem name */
        name?: (string|null);

        /** ZbShopItem item1 */
        item1?: (pb.IZbShopSubItem|null);

        /** ZbShopItem item2 */
        item2?: (pb.IZbShopSubItem|null);

        /** ZbShopItem item3 */
        item3?: (pb.IZbShopSubItem|null);
    }

    /** Represents a ZbShopItem. */
    class ZbShopItem implements IZbShopItem {

        /**
         * Constructs a new ZbShopItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IZbShopItem);

        /** ZbShopItem id. */
        public id: number;

        /** ZbShopItem catName. */
        public catName: string;

        /** ZbShopItem catOrder. */
        public catOrder: number;

        /** ZbShopItem name. */
        public name: string;

        /** ZbShopItem item1. */
        public item1?: (pb.IZbShopSubItem|null);

        /** ZbShopItem item2. */
        public item2?: (pb.IZbShopSubItem|null);

        /** ZbShopItem item3. */
        public item3?: (pb.IZbShopSubItem|null);

        /**
         * Creates a new ZbShopItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ZbShopItem instance
         */
        public static create(properties?: pb.IZbShopItem): pb.ZbShopItem;

        /**
         * Encodes the specified ZbShopItem message. Does not implicitly {@link pb.ZbShopItem.verify|verify} messages.
         * @param message ZbShopItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IZbShopItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ZbShopItem message, length delimited. Does not implicitly {@link pb.ZbShopItem.verify|verify} messages.
         * @param message ZbShopItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IZbShopItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ZbShopItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ZbShopItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ZbShopItem;

        /**
         * Decodes a ZbShopItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ZbShopItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ZbShopItem;

        /**
         * Verifies a ZbShopItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ZbShopItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ZbShopItem
         */
        public static fromObject(object: { [k: string]: any }): pb.ZbShopItem;

        /**
         * Creates a plain object from a ZbShopItem message. Also converts values to other types if specified.
         * @param message ZbShopItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ZbShopItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ZbShopItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CShowItems. */
    interface IS2CShowItems {

        /** S2CShowItems uid */
        uid?: (number|null);

        /** S2CShowItems items */
        items?: (pb.IItem[]|null);

        /** S2CShowItems adItem */
        adItem?: (pb.IAdRewardItem|null);
    }

    /** Represents a S2CShowItems. */
    class S2CShowItems implements IS2CShowItems {

        /**
         * Constructs a new S2CShowItems.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CShowItems);

        /** S2CShowItems uid. */
        public uid: number;

        /** S2CShowItems items. */
        public items: pb.IItem[];

        /** S2CShowItems adItem. */
        public adItem?: (pb.IAdRewardItem|null);

        /**
         * Creates a new S2CShowItems instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CShowItems instance
         */
        public static create(properties?: pb.IS2CShowItems): pb.S2CShowItems;

        /**
         * Encodes the specified S2CShowItems message. Does not implicitly {@link pb.S2CShowItems.verify|verify} messages.
         * @param message S2CShowItems message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CShowItems, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CShowItems message, length delimited. Does not implicitly {@link pb.S2CShowItems.verify|verify} messages.
         * @param message S2CShowItems message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CShowItems, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CShowItems message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CShowItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CShowItems;

        /**
         * Decodes a S2CShowItems message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CShowItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CShowItems;

        /**
         * Verifies a S2CShowItems message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CShowItems message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CShowItems
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CShowItems;

        /**
         * Creates a plain object from a S2CShowItems message. Also converts values to other types if specified.
         * @param message S2CShowItems
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CShowItems, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CShowItems to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SShowItemsReply. */
    interface IC2SShowItemsReply {

        /** C2SShowItemsReply uid */
        uid?: (number|null);
    }

    /** Represents a C2SShowItemsReply. */
    class C2SShowItemsReply implements IC2SShowItemsReply {

        /**
         * Constructs a new C2SShowItemsReply.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SShowItemsReply);

        /** C2SShowItemsReply uid. */
        public uid: number;

        /**
         * Creates a new C2SShowItemsReply instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SShowItemsReply instance
         */
        public static create(properties?: pb.IC2SShowItemsReply): pb.C2SShowItemsReply;

        /**
         * Encodes the specified C2SShowItemsReply message. Does not implicitly {@link pb.C2SShowItemsReply.verify|verify} messages.
         * @param message C2SShowItemsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SShowItemsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SShowItemsReply message, length delimited. Does not implicitly {@link pb.C2SShowItemsReply.verify|verify} messages.
         * @param message C2SShowItemsReply message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SShowItemsReply, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SShowItemsReply message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SShowItemsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SShowItemsReply;

        /**
         * Decodes a C2SShowItemsReply message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SShowItemsReply
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SShowItemsReply;

        /**
         * Verifies a C2SShowItemsReply message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SShowItemsReply message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SShowItemsReply
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SShowItemsReply;

        /**
         * Creates a plain object from a C2SShowItemsReply message. Also converts values to other types if specified.
         * @param message C2SShowItemsReply
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SShowItemsReply, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SShowItemsReply to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetShowItems. */
    interface IC2SGetShowItems {
    }

    /** Represents a C2SGetShowItems. */
    class C2SGetShowItems implements IC2SGetShowItems {

        /**
         * Constructs a new C2SGetShowItems.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetShowItems);

        /**
         * Creates a new C2SGetShowItems instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetShowItems instance
         */
        public static create(properties?: pb.IC2SGetShowItems): pb.C2SGetShowItems;

        /**
         * Encodes the specified C2SGetShowItems message. Does not implicitly {@link pb.C2SGetShowItems.verify|verify} messages.
         * @param message C2SGetShowItems message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetShowItems, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetShowItems message, length delimited. Does not implicitly {@link pb.C2SGetShowItems.verify|verify} messages.
         * @param message C2SGetShowItems message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetShowItems, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetShowItems message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetShowItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetShowItems;

        /**
         * Decodes a C2SGetShowItems message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetShowItems
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetShowItems;

        /**
         * Verifies a C2SGetShowItems message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetShowItems message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetShowItems
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetShowItems;

        /**
         * Creates a plain object from a C2SGetShowItems message. Also converts values to other types if specified.
         * @param message C2SGetShowItems
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetShowItems, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetShowItems to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CShowBox. */
    interface IS2CShowBox {

        /** S2CShowBox boxType */
        boxType?: (number|null);

        /** S2CShowBox box */
        box?: (pb.IBoxData[]|null);

        /** S2CShowBox pmData */
        pmData?: (pb.IPaiMing|null);
    }

    /** Represents a S2CShowBox. */
    class S2CShowBox implements IS2CShowBox {

        /**
         * Constructs a new S2CShowBox.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CShowBox);

        /** S2CShowBox boxType. */
        public boxType: number;

        /** S2CShowBox box. */
        public box: pb.IBoxData[];

        /** S2CShowBox pmData. */
        public pmData?: (pb.IPaiMing|null);

        /**
         * Creates a new S2CShowBox instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CShowBox instance
         */
        public static create(properties?: pb.IS2CShowBox): pb.S2CShowBox;

        /**
         * Encodes the specified S2CShowBox message. Does not implicitly {@link pb.S2CShowBox.verify|verify} messages.
         * @param message S2CShowBox message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CShowBox, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CShowBox message, length delimited. Does not implicitly {@link pb.S2CShowBox.verify|verify} messages.
         * @param message S2CShowBox message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CShowBox, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CShowBox message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CShowBox
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CShowBox;

        /**
         * Decodes a S2CShowBox message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CShowBox
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CShowBox;

        /**
         * Verifies a S2CShowBox message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CShowBox message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CShowBox
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CShowBox;

        /**
         * Creates a plain object from a S2CShowBox message. Also converts values to other types if specified.
         * @param message S2CShowBox
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CShowBox, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CShowBox to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SCloseShowBox. */
    interface IC2SCloseShowBox {

        /** C2SCloseShowBox adType */
        adType?: (number|null);

        /** C2SCloseShowBox buZaiTiShi */
        buZaiTiShi?: (boolean|null);
    }

    /** Represents a C2SCloseShowBox. */
    class C2SCloseShowBox implements IC2SCloseShowBox {

        /**
         * Constructs a new C2SCloseShowBox.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SCloseShowBox);

        /** C2SCloseShowBox adType. */
        public adType: number;

        /** C2SCloseShowBox buZaiTiShi. */
        public buZaiTiShi: boolean;

        /**
         * Creates a new C2SCloseShowBox instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SCloseShowBox instance
         */
        public static create(properties?: pb.IC2SCloseShowBox): pb.C2SCloseShowBox;

        /**
         * Encodes the specified C2SCloseShowBox message. Does not implicitly {@link pb.C2SCloseShowBox.verify|verify} messages.
         * @param message C2SCloseShowBox message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SCloseShowBox, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SCloseShowBox message, length delimited. Does not implicitly {@link pb.C2SCloseShowBox.verify|verify} messages.
         * @param message C2SCloseShowBox message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SCloseShowBox, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SCloseShowBox message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SCloseShowBox
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SCloseShowBox;

        /**
         * Decodes a C2SCloseShowBox message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SCloseShowBox
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SCloseShowBox;

        /**
         * Verifies a C2SCloseShowBox message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SCloseShowBox message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SCloseShowBox
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SCloseShowBox;

        /**
         * Creates a plain object from a C2SCloseShowBox message. Also converts values to other types if specified.
         * @param message C2SCloseShowBox
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SCloseShowBox, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SCloseShowBox to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BoxData. */
    interface IBoxData {

        /** BoxData adType */
        adType?: (number|null);

        /** BoxData intParam */
        intParam?: (number|null);

        /** BoxData strParam */
        strParam?: (string|null);

        /** BoxData reward */
        reward?: (pb.IItem[]|null);

        /** BoxData otherParam */
        otherParam?: (number|null);

        /** BoxData state */
        state?: (number|null);
    }

    /** Represents a BoxData. */
    class BoxData implements IBoxData {

        /**
         * Constructs a new BoxData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IBoxData);

        /** BoxData adType. */
        public adType: number;

        /** BoxData intParam. */
        public intParam: number;

        /** BoxData strParam. */
        public strParam: string;

        /** BoxData reward. */
        public reward: pb.IItem[];

        /** BoxData otherParam. */
        public otherParam: number;

        /** BoxData state. */
        public state: number;

        /**
         * Creates a new BoxData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BoxData instance
         */
        public static create(properties?: pb.IBoxData): pb.BoxData;

        /**
         * Encodes the specified BoxData message. Does not implicitly {@link pb.BoxData.verify|verify} messages.
         * @param message BoxData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IBoxData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BoxData message, length delimited. Does not implicitly {@link pb.BoxData.verify|verify} messages.
         * @param message BoxData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IBoxData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BoxData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BoxData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.BoxData;

        /**
         * Decodes a BoxData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BoxData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.BoxData;

        /**
         * Verifies a BoxData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BoxData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BoxData
         */
        public static fromObject(object: { [k: string]: any }): pb.BoxData;

        /**
         * Creates a plain object from a BoxData message. Also converts values to other types if specified.
         * @param message BoxData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.BoxData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BoxData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PaiMing. */
    interface IPaiMing {

        /** PaiMing type */
        type?: (number|null);

        /** PaiMing orRank */
        orRank?: (number|Long|null);

        /** PaiMing curRank */
        curRank?: (number|Long|null);

        /** PaiMing orArea */
        orArea?: (string|null);

        /** PaiMing curArea */
        curArea?: (string|null);

        /** PaiMing reward */
        reward?: (pb.IItem[]|null);

        /** PaiMing gameCat */
        gameCat?: (number|null);
    }

    /** Represents a PaiMing. */
    class PaiMing implements IPaiMing {

        /**
         * Constructs a new PaiMing.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IPaiMing);

        /** PaiMing type. */
        public type: number;

        /** PaiMing orRank. */
        public orRank: (number|Long);

        /** PaiMing curRank. */
        public curRank: (number|Long);

        /** PaiMing orArea. */
        public orArea: string;

        /** PaiMing curArea. */
        public curArea: string;

        /** PaiMing reward. */
        public reward: pb.IItem[];

        /** PaiMing gameCat. */
        public gameCat: number;

        /**
         * Creates a new PaiMing instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PaiMing instance
         */
        public static create(properties?: pb.IPaiMing): pb.PaiMing;

        /**
         * Encodes the specified PaiMing message. Does not implicitly {@link pb.PaiMing.verify|verify} messages.
         * @param message PaiMing message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IPaiMing, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PaiMing message, length delimited. Does not implicitly {@link pb.PaiMing.verify|verify} messages.
         * @param message PaiMing message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IPaiMing, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PaiMing message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PaiMing
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.PaiMing;

        /**
         * Decodes a PaiMing message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PaiMing
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.PaiMing;

        /**
         * Verifies a PaiMing message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PaiMing message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PaiMing
         */
        public static fromObject(object: { [k: string]: any }): pb.PaiMing;

        /**
         * Creates a plain object from a PaiMing message. Also converts values to other types if specified.
         * @param message PaiMing
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.PaiMing, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PaiMing to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** BoxType enum. */
    enum BoxType {
        BoxType_Reward = 0,
        BoxType_Notify = 1
    }

    /** BoxNotifyType enum. */
    enum BoxNotifyType {
        BoxNotifyType_Null = 0
    }

    /** BoxFuncType enum. */
    enum BoxFuncType {
        BoxFuncType_Null = 0,
        BoxFuncType_RenWu = 1,
        BoxFuncType_DuanWeiReward = 2,
        BoxFuncType_QuanGuoPaiMin = 3,
        BoxFuncType_SeasonReward = 4,
        BoxFuncType_DingShiDengLu = 5,
        BoxFuncType_DengJi = 6,
        BoxFuncType_PaiHangBangReward = 7,
        BoxFuncType_PaiHangBangUpdate = 8,
        BoxFuncType_QianDao = 9
    }

    /** Properties of a C2SGetTables. */
    interface IC2SGetTables {

        /** C2SGetTables gameType */
        gameType?: (number|null);
    }

    /** Represents a C2SGetTables. */
    class C2SGetTables implements IC2SGetTables {

        /**
         * Constructs a new C2SGetTables.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetTables);

        /** C2SGetTables gameType. */
        public gameType: number;

        /**
         * Creates a new C2SGetTables instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetTables instance
         */
        public static create(properties?: pb.IC2SGetTables): pb.C2SGetTables;

        /**
         * Encodes the specified C2SGetTables message. Does not implicitly {@link pb.C2SGetTables.verify|verify} messages.
         * @param message C2SGetTables message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetTables, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetTables message, length delimited. Does not implicitly {@link pb.C2SGetTables.verify|verify} messages.
         * @param message C2SGetTables message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetTables, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetTables message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetTables
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetTables;

        /**
         * Decodes a C2SGetTables message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetTables
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetTables;

        /**
         * Verifies a C2SGetTables message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetTables message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetTables
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetTables;

        /**
         * Creates a plain object from a C2SGetTables message. Also converts values to other types if specified.
         * @param message C2SGetTables
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetTables, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetTables to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CatTable. */
    interface ICatTable {

        /** CatTable catName */
        catName?: (string|null);

        /** CatTable isRecommend */
        isRecommend?: (boolean|null);

        /** CatTable items */
        items?: (pb.ITableInfo[]|null);
    }

    /** Represents a CatTable. */
    class CatTable implements ICatTable {

        /**
         * Constructs a new CatTable.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.ICatTable);

        /** CatTable catName. */
        public catName: string;

        /** CatTable isRecommend. */
        public isRecommend: boolean;

        /** CatTable items. */
        public items: pb.ITableInfo[];

        /**
         * Creates a new CatTable instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CatTable instance
         */
        public static create(properties?: pb.ICatTable): pb.CatTable;

        /**
         * Encodes the specified CatTable message. Does not implicitly {@link pb.CatTable.verify|verify} messages.
         * @param message CatTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.ICatTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CatTable message, length delimited. Does not implicitly {@link pb.CatTable.verify|verify} messages.
         * @param message CatTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.ICatTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CatTable message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CatTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.CatTable;

        /**
         * Decodes a CatTable message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CatTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.CatTable;

        /**
         * Verifies a CatTable message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CatTable message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CatTable
         */
        public static fromObject(object: { [k: string]: any }): pb.CatTable;

        /**
         * Creates a plain object from a CatTable message. Also converts values to other types if specified.
         * @param message CatTable
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.CatTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CatTable to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a QuickStart. */
    interface IQuickStart {

        /** QuickStart catName */
        catName?: (string|null);

        /** QuickStart cfgId */
        cfgId?: (number|null);
    }

    /** Represents a QuickStart. */
    class QuickStart implements IQuickStart {

        /**
         * Constructs a new QuickStart.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IQuickStart);

        /** QuickStart catName. */
        public catName: string;

        /** QuickStart cfgId. */
        public cfgId: number;

        /**
         * Creates a new QuickStart instance using the specified properties.
         * @param [properties] Properties to set
         * @returns QuickStart instance
         */
        public static create(properties?: pb.IQuickStart): pb.QuickStart;

        /**
         * Encodes the specified QuickStart message. Does not implicitly {@link pb.QuickStart.verify|verify} messages.
         * @param message QuickStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IQuickStart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified QuickStart message, length delimited. Does not implicitly {@link pb.QuickStart.verify|verify} messages.
         * @param message QuickStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IQuickStart, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a QuickStart message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns QuickStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.QuickStart;

        /**
         * Decodes a QuickStart message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns QuickStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.QuickStart;

        /**
         * Verifies a QuickStart message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a QuickStart message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns QuickStart
         */
        public static fromObject(object: { [k: string]: any }): pb.QuickStart;

        /**
         * Creates a plain object from a QuickStart message. Also converts values to other types if specified.
         * @param message QuickStart
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.QuickStart, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this QuickStart to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetTables. */
    interface IS2CGetTables {

        /** S2CGetTables gameType */
        gameType?: (number|null);

        /** S2CGetTables gsCat */
        gsCat?: (pb.GsCat|null);

        /** S2CGetTables tables */
        tables?: (pb.ICatTable[]|null);

        /** S2CGetTables quick */
        quick?: (pb.IQuickStart|null);
    }

    /** Represents a S2CGetTables. */
    class S2CGetTables implements IS2CGetTables {

        /**
         * Constructs a new S2CGetTables.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetTables);

        /** S2CGetTables gameType. */
        public gameType: number;

        /** S2CGetTables gsCat. */
        public gsCat: pb.GsCat;

        /** S2CGetTables tables. */
        public tables: pb.ICatTable[];

        /** S2CGetTables quick. */
        public quick?: (pb.IQuickStart|null);

        /**
         * Creates a new S2CGetTables instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetTables instance
         */
        public static create(properties?: pb.IS2CGetTables): pb.S2CGetTables;

        /**
         * Encodes the specified S2CGetTables message. Does not implicitly {@link pb.S2CGetTables.verify|verify} messages.
         * @param message S2CGetTables message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetTables, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetTables message, length delimited. Does not implicitly {@link pb.S2CGetTables.verify|verify} messages.
         * @param message S2CGetTables message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetTables, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetTables message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetTables
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetTables;

        /**
         * Decodes a S2CGetTables message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetTables
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetTables;

        /**
         * Verifies a S2CGetTables message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetTables message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetTables
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetTables;

        /**
         * Creates a plain object from a S2CGetTables message. Also converts values to other types if specified.
         * @param message S2CGetTables
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetTables, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetTables to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SMatchTable. */
    interface IC2SMatchTable {

        /** C2SMatchTable gameType */
        gameType?: (number|null);

        /** C2SMatchTable tableCfgId */
        tableCfgId?: (number|null);
    }

    /** Represents a C2SMatchTable. */
    class C2SMatchTable implements IC2SMatchTable {

        /**
         * Constructs a new C2SMatchTable.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SMatchTable);

        /** C2SMatchTable gameType. */
        public gameType: number;

        /** C2SMatchTable tableCfgId. */
        public tableCfgId: number;

        /**
         * Creates a new C2SMatchTable instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SMatchTable instance
         */
        public static create(properties?: pb.IC2SMatchTable): pb.C2SMatchTable;

        /**
         * Encodes the specified C2SMatchTable message. Does not implicitly {@link pb.C2SMatchTable.verify|verify} messages.
         * @param message C2SMatchTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SMatchTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SMatchTable message, length delimited. Does not implicitly {@link pb.C2SMatchTable.verify|verify} messages.
         * @param message C2SMatchTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SMatchTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SMatchTable message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SMatchTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SMatchTable;

        /**
         * Decodes a C2SMatchTable message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SMatchTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SMatchTable;

        /**
         * Verifies a C2SMatchTable message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SMatchTable message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SMatchTable
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SMatchTable;

        /**
         * Creates a plain object from a C2SMatchTable message. Also converts values to other types if specified.
         * @param message C2SMatchTable
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SMatchTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SMatchTable to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SNextMatch. */
    interface IC2SNextMatch {

        /** C2SNextMatch gameType */
        gameType?: (number|null);

        /** C2SNextMatch tableCfgId */
        tableCfgId?: (number|null);
    }

    /** Represents a C2SNextMatch. */
    class C2SNextMatch implements IC2SNextMatch {

        /**
         * Constructs a new C2SNextMatch.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SNextMatch);

        /** C2SNextMatch gameType. */
        public gameType: number;

        /** C2SNextMatch tableCfgId. */
        public tableCfgId: number;

        /**
         * Creates a new C2SNextMatch instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SNextMatch instance
         */
        public static create(properties?: pb.IC2SNextMatch): pb.C2SNextMatch;

        /**
         * Encodes the specified C2SNextMatch message. Does not implicitly {@link pb.C2SNextMatch.verify|verify} messages.
         * @param message C2SNextMatch message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SNextMatch, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SNextMatch message, length delimited. Does not implicitly {@link pb.C2SNextMatch.verify|verify} messages.
         * @param message C2SNextMatch message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SNextMatch, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SNextMatch message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SNextMatch
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SNextMatch;

        /**
         * Decodes a C2SNextMatch message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SNextMatch
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SNextMatch;

        /**
         * Verifies a C2SNextMatch message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SNextMatch message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SNextMatch
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SNextMatch;

        /**
         * Creates a plain object from a C2SNextMatch message. Also converts values to other types if specified.
         * @param message C2SNextMatch
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SNextMatch, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SNextMatch to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SExitMatch. */
    interface IC2SExitMatch {
    }

    /** Represents a C2SExitMatch. */
    class C2SExitMatch implements IC2SExitMatch {

        /**
         * Constructs a new C2SExitMatch.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SExitMatch);

        /**
         * Creates a new C2SExitMatch instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SExitMatch instance
         */
        public static create(properties?: pb.IC2SExitMatch): pb.C2SExitMatch;

        /**
         * Encodes the specified C2SExitMatch message. Does not implicitly {@link pb.C2SExitMatch.verify|verify} messages.
         * @param message C2SExitMatch message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SExitMatch, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SExitMatch message, length delimited. Does not implicitly {@link pb.C2SExitMatch.verify|verify} messages.
         * @param message C2SExitMatch message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SExitMatch, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SExitMatch message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SExitMatch
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SExitMatch;

        /**
         * Decodes a C2SExitMatch message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SExitMatch
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SExitMatch;

        /**
         * Verifies a C2SExitMatch message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SExitMatch message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SExitMatch
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SExitMatch;

        /**
         * Creates a plain object from a C2SExitMatch message. Also converts values to other types if specified.
         * @param message C2SExitMatch
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SExitMatch, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SExitMatch to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CExitMatch. */
    interface IS2CExitMatch {
    }

    /** Represents a S2CExitMatch. */
    class S2CExitMatch implements IS2CExitMatch {

        /**
         * Constructs a new S2CExitMatch.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CExitMatch);

        /**
         * Creates a new S2CExitMatch instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CExitMatch instance
         */
        public static create(properties?: pb.IS2CExitMatch): pb.S2CExitMatch;

        /**
         * Encodes the specified S2CExitMatch message. Does not implicitly {@link pb.S2CExitMatch.verify|verify} messages.
         * @param message S2CExitMatch message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CExitMatch, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CExitMatch message, length delimited. Does not implicitly {@link pb.S2CExitMatch.verify|verify} messages.
         * @param message S2CExitMatch message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CExitMatch, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CExitMatch message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CExitMatch
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CExitMatch;

        /**
         * Decodes a S2CExitMatch message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CExitMatch
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CExitMatch;

        /**
         * Verifies a S2CExitMatch message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CExitMatch message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CExitMatch
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CExitMatch;

        /**
         * Creates a plain object from a S2CExitMatch message. Also converts values to other types if specified.
         * @param message S2CExitMatch
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CExitMatch, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CExitMatch to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SJoinTable. */
    interface IC2SJoinTable {

        /** C2SJoinTable tableId */
        tableId?: (number|null);
    }

    /** Represents a C2SJoinTable. */
    class C2SJoinTable implements IC2SJoinTable {

        /**
         * Constructs a new C2SJoinTable.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SJoinTable);

        /** C2SJoinTable tableId. */
        public tableId: number;

        /**
         * Creates a new C2SJoinTable instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SJoinTable instance
         */
        public static create(properties?: pb.IC2SJoinTable): pb.C2SJoinTable;

        /**
         * Encodes the specified C2SJoinTable message. Does not implicitly {@link pb.C2SJoinTable.verify|verify} messages.
         * @param message C2SJoinTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SJoinTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SJoinTable message, length delimited. Does not implicitly {@link pb.C2SJoinTable.verify|verify} messages.
         * @param message C2SJoinTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SJoinTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SJoinTable message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SJoinTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SJoinTable;

        /**
         * Decodes a C2SJoinTable message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SJoinTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SJoinTable;

        /**
         * Verifies a C2SJoinTable message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SJoinTable message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SJoinTable
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SJoinTable;

        /**
         * Creates a plain object from a C2SJoinTable message. Also converts values to other types if specified.
         * @param message C2SJoinTable
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SJoinTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SJoinTable to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CEnterTable. */
    interface IS2CEnterTable {

        /** S2CEnterTable item */
        item?: (pb.ITablePlayer|null);
    }

    /** Represents a S2CEnterTable. */
    class S2CEnterTable implements IS2CEnterTable {

        /**
         * Constructs a new S2CEnterTable.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CEnterTable);

        /** S2CEnterTable item. */
        public item?: (pb.ITablePlayer|null);

        /**
         * Creates a new S2CEnterTable instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CEnterTable instance
         */
        public static create(properties?: pb.IS2CEnterTable): pb.S2CEnterTable;

        /**
         * Encodes the specified S2CEnterTable message. Does not implicitly {@link pb.S2CEnterTable.verify|verify} messages.
         * @param message S2CEnterTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CEnterTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CEnterTable message, length delimited. Does not implicitly {@link pb.S2CEnterTable.verify|verify} messages.
         * @param message S2CEnterTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CEnterTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CEnterTable message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CEnterTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CEnterTable;

        /**
         * Decodes a S2CEnterTable message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CEnterTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CEnterTable;

        /**
         * Verifies a S2CEnterTable message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CEnterTable message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CEnterTable
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CEnterTable;

        /**
         * Creates a plain object from a S2CEnterTable message. Also converts values to other types if specified.
         * @param message S2CEnterTable
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CEnterTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CEnterTable to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SExitTable. */
    interface IC2SExitTable {
    }

    /** Represents a C2SExitTable. */
    class C2SExitTable implements IC2SExitTable {

        /**
         * Constructs a new C2SExitTable.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SExitTable);

        /**
         * Creates a new C2SExitTable instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SExitTable instance
         */
        public static create(properties?: pb.IC2SExitTable): pb.C2SExitTable;

        /**
         * Encodes the specified C2SExitTable message. Does not implicitly {@link pb.C2SExitTable.verify|verify} messages.
         * @param message C2SExitTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SExitTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SExitTable message, length delimited. Does not implicitly {@link pb.C2SExitTable.verify|verify} messages.
         * @param message C2SExitTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SExitTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SExitTable message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SExitTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SExitTable;

        /**
         * Decodes a C2SExitTable message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SExitTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SExitTable;

        /**
         * Verifies a C2SExitTable message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SExitTable message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SExitTable
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SExitTable;

        /**
         * Creates a plain object from a C2SExitTable message. Also converts values to other types if specified.
         * @param message C2SExitTable
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SExitTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SExitTable to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CExitTable. */
    interface IS2CExitTable {

        /** S2CExitTable guid */
        guid?: (number|Long|null);
    }

    /** Represents a S2CExitTable. */
    class S2CExitTable implements IS2CExitTable {

        /**
         * Constructs a new S2CExitTable.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CExitTable);

        /** S2CExitTable guid. */
        public guid: (number|Long);

        /**
         * Creates a new S2CExitTable instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CExitTable instance
         */
        public static create(properties?: pb.IS2CExitTable): pb.S2CExitTable;

        /**
         * Encodes the specified S2CExitTable message. Does not implicitly {@link pb.S2CExitTable.verify|verify} messages.
         * @param message S2CExitTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CExitTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CExitTable message, length delimited. Does not implicitly {@link pb.S2CExitTable.verify|verify} messages.
         * @param message S2CExitTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CExitTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CExitTable message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CExitTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CExitTable;

        /**
         * Decodes a S2CExitTable message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CExitTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CExitTable;

        /**
         * Verifies a S2CExitTable message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CExitTable message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CExitTable
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CExitTable;

        /**
         * Creates a plain object from a S2CExitTable message. Also converts values to other types if specified.
         * @param message S2CExitTable
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CExitTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CExitTable to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CMatchUpdate. */
    interface IS2CMatchUpdate {

        /** S2CMatchUpdate gameType */
        gameType?: (number|null);

        /** S2CMatchUpdate tableCfgId */
        tableCfgId?: (number|null);

        /** S2CMatchUpdate inviteable */
        inviteable?: (boolean|null);

        /** S2CMatchUpdate playerCount */
        playerCount?: (number|null);

        /** S2CMatchUpdate players */
        players?: (pb.IPlayer[]|null);

        /** S2CMatchUpdate state */
        state?: (pb.S2CMatchUpdate.State|null);

        /** S2CMatchUpdate leftSec */
        leftSec?: (number|null);
    }

    /** Represents a S2CMatchUpdate. */
    class S2CMatchUpdate implements IS2CMatchUpdate {

        /**
         * Constructs a new S2CMatchUpdate.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CMatchUpdate);

        /** S2CMatchUpdate gameType. */
        public gameType: number;

        /** S2CMatchUpdate tableCfgId. */
        public tableCfgId: number;

        /** S2CMatchUpdate inviteable. */
        public inviteable: boolean;

        /** S2CMatchUpdate playerCount. */
        public playerCount: number;

        /** S2CMatchUpdate players. */
        public players: pb.IPlayer[];

        /** S2CMatchUpdate state. */
        public state: pb.S2CMatchUpdate.State;

        /** S2CMatchUpdate leftSec. */
        public leftSec: number;

        /**
         * Creates a new S2CMatchUpdate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CMatchUpdate instance
         */
        public static create(properties?: pb.IS2CMatchUpdate): pb.S2CMatchUpdate;

        /**
         * Encodes the specified S2CMatchUpdate message. Does not implicitly {@link pb.S2CMatchUpdate.verify|verify} messages.
         * @param message S2CMatchUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CMatchUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CMatchUpdate message, length delimited. Does not implicitly {@link pb.S2CMatchUpdate.verify|verify} messages.
         * @param message S2CMatchUpdate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CMatchUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CMatchUpdate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CMatchUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CMatchUpdate;

        /**
         * Decodes a S2CMatchUpdate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CMatchUpdate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CMatchUpdate;

        /**
         * Verifies a S2CMatchUpdate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CMatchUpdate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CMatchUpdate
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CMatchUpdate;

        /**
         * Creates a plain object from a S2CMatchUpdate message. Also converts values to other types if specified.
         * @param message S2CMatchUpdate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CMatchUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CMatchUpdate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace S2CMatchUpdate {

        /** State enum. */
        enum State {
            Normal = 0,
            ReadyInvit = 1,
            Inviting = 2
        }
    }

    /** Properties of a S2CServiceFee. */
    interface IS2CServiceFee {

        /** S2CServiceFee value */
        value?: (number|null);
    }

    /** Represents a S2CServiceFee. */
    class S2CServiceFee implements IS2CServiceFee {

        /**
         * Constructs a new S2CServiceFee.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CServiceFee);

        /** S2CServiceFee value. */
        public value: number;

        /**
         * Creates a new S2CServiceFee instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CServiceFee instance
         */
        public static create(properties?: pb.IS2CServiceFee): pb.S2CServiceFee;

        /**
         * Encodes the specified S2CServiceFee message. Does not implicitly {@link pb.S2CServiceFee.verify|verify} messages.
         * @param message S2CServiceFee message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CServiceFee, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CServiceFee message, length delimited. Does not implicitly {@link pb.S2CServiceFee.verify|verify} messages.
         * @param message S2CServiceFee message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CServiceFee, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CServiceFee message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CServiceFee
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CServiceFee;

        /**
         * Decodes a S2CServiceFee message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CServiceFee
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CServiceFee;

        /**
         * Verifies a S2CServiceFee message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CServiceFee message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CServiceFee
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CServiceFee;

        /**
         * Creates a plain object from a S2CServiceFee message. Also converts values to other types if specified.
         * @param message S2CServiceFee
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CServiceFee, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CServiceFee to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CTablePlayer. */
    interface IS2CTablePlayer {

        /** S2CTablePlayer player */
        player?: (pb.ITablePlayer|null);
    }

    /** Represents a S2CTablePlayer. */
    class S2CTablePlayer implements IS2CTablePlayer {

        /**
         * Constructs a new S2CTablePlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CTablePlayer);

        /** S2CTablePlayer player. */
        public player?: (pb.ITablePlayer|null);

        /**
         * Creates a new S2CTablePlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CTablePlayer instance
         */
        public static create(properties?: pb.IS2CTablePlayer): pb.S2CTablePlayer;

        /**
         * Encodes the specified S2CTablePlayer message. Does not implicitly {@link pb.S2CTablePlayer.verify|verify} messages.
         * @param message S2CTablePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CTablePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CTablePlayer message, length delimited. Does not implicitly {@link pb.S2CTablePlayer.verify|verify} messages.
         * @param message S2CTablePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CTablePlayer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CTablePlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CTablePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CTablePlayer;

        /**
         * Decodes a S2CTablePlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CTablePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CTablePlayer;

        /**
         * Verifies a S2CTablePlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CTablePlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CTablePlayer
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CTablePlayer;

        /**
         * Creates a plain object from a S2CTablePlayer message. Also converts values to other types if specified.
         * @param message S2CTablePlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CTablePlayer, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CTablePlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SReqTableInfo. */
    interface IC2SReqTableInfo {
    }

    /** Represents a C2SReqTableInfo. */
    class C2SReqTableInfo implements IC2SReqTableInfo {

        /**
         * Constructs a new C2SReqTableInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SReqTableInfo);

        /**
         * Creates a new C2SReqTableInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SReqTableInfo instance
         */
        public static create(properties?: pb.IC2SReqTableInfo): pb.C2SReqTableInfo;

        /**
         * Encodes the specified C2SReqTableInfo message. Does not implicitly {@link pb.C2SReqTableInfo.verify|verify} messages.
         * @param message C2SReqTableInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SReqTableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SReqTableInfo message, length delimited. Does not implicitly {@link pb.C2SReqTableInfo.verify|verify} messages.
         * @param message C2SReqTableInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SReqTableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SReqTableInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SReqTableInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SReqTableInfo;

        /**
         * Decodes a C2SReqTableInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SReqTableInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SReqTableInfo;

        /**
         * Verifies a C2SReqTableInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SReqTableInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SReqTableInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SReqTableInfo;

        /**
         * Creates a plain object from a C2SReqTableInfo message. Also converts values to other types if specified.
         * @param message C2SReqTableInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SReqTableInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SReqTableInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGoOnGame. */
    interface IS2CGoOnGame {

        /** S2CGoOnGame gameCat */
        gameCat?: (number|null);

        /** S2CGoOnGame gameData */
        gameData?: (Uint8Array|null);
    }

    /** Represents a S2CGoOnGame. */
    class S2CGoOnGame implements IS2CGoOnGame {

        /**
         * Constructs a new S2CGoOnGame.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGoOnGame);

        /** S2CGoOnGame gameCat. */
        public gameCat: number;

        /** S2CGoOnGame gameData. */
        public gameData: Uint8Array;

        /**
         * Creates a new S2CGoOnGame instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGoOnGame instance
         */
        public static create(properties?: pb.IS2CGoOnGame): pb.S2CGoOnGame;

        /**
         * Encodes the specified S2CGoOnGame message. Does not implicitly {@link pb.S2CGoOnGame.verify|verify} messages.
         * @param message S2CGoOnGame message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGoOnGame, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGoOnGame message, length delimited. Does not implicitly {@link pb.S2CGoOnGame.verify|verify} messages.
         * @param message S2CGoOnGame message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGoOnGame, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGoOnGame message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGoOnGame
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGoOnGame;

        /**
         * Decodes a S2CGoOnGame message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGoOnGame
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGoOnGame;

        /**
         * Verifies a S2CGoOnGame message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGoOnGame message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGoOnGame
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGoOnGame;

        /**
         * Creates a plain object from a S2CGoOnGame message. Also converts values to other types if specified.
         * @param message S2CGoOnGame
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGoOnGame, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGoOnGame to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SUILoaded. */
    interface IC2SUILoaded {
    }

    /** Represents a C2SUILoaded. */
    class C2SUILoaded implements IC2SUILoaded {

        /**
         * Constructs a new C2SUILoaded.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SUILoaded);

        /**
         * Creates a new C2SUILoaded instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SUILoaded instance
         */
        public static create(properties?: pb.IC2SUILoaded): pb.C2SUILoaded;

        /**
         * Encodes the specified C2SUILoaded message. Does not implicitly {@link pb.C2SUILoaded.verify|verify} messages.
         * @param message C2SUILoaded message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SUILoaded, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SUILoaded message, length delimited. Does not implicitly {@link pb.C2SUILoaded.verify|verify} messages.
         * @param message C2SUILoaded message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SUILoaded, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SUILoaded message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SUILoaded
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SUILoaded;

        /**
         * Decodes a C2SUILoaded message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SUILoaded
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SUILoaded;

        /**
         * Verifies a C2SUILoaded message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SUILoaded message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SUILoaded
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SUILoaded;

        /**
         * Creates a plain object from a C2SUILoaded message. Also converts values to other types if specified.
         * @param message C2SUILoaded
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SUILoaded, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SUILoaded to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** TableMode enum. */
    enum TableMode {
        TM_Null = 0,
        TM_Match = 1,
        TM_Race = 2
    }

    /** Properties of a S2CTipMsg. */
    interface IS2CTipMsg {

        /** S2CTipMsg cfgId */
        cfgId?: (number|null);

        /** S2CTipMsg params */
        params?: (string[]|null);
    }

    /** Represents a S2CTipMsg. */
    class S2CTipMsg implements IS2CTipMsg {

        /**
         * Constructs a new S2CTipMsg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CTipMsg);

        /** S2CTipMsg cfgId. */
        public cfgId: number;

        /** S2CTipMsg params. */
        public params: string[];

        /**
         * Creates a new S2CTipMsg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CTipMsg instance
         */
        public static create(properties?: pb.IS2CTipMsg): pb.S2CTipMsg;

        /**
         * Encodes the specified S2CTipMsg message. Does not implicitly {@link pb.S2CTipMsg.verify|verify} messages.
         * @param message S2CTipMsg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CTipMsg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CTipMsg message, length delimited. Does not implicitly {@link pb.S2CTipMsg.verify|verify} messages.
         * @param message S2CTipMsg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CTipMsg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CTipMsg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CTipMsg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CTipMsg;

        /**
         * Decodes a S2CTipMsg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CTipMsg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CTipMsg;

        /**
         * Verifies a S2CTipMsg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CTipMsg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CTipMsg
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CTipMsg;

        /**
         * Creates a plain object from a S2CTipMsg message. Also converts values to other types if specified.
         * @param message S2CTipMsg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CTipMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CTipMsg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2STrueNameAuth. */
    interface IC2STrueNameAuth {

        /** C2STrueNameAuth idNum */
        idNum?: (string|null);

        /** C2STrueNameAuth name */
        name?: (string|null);
    }

    /** Represents a C2STrueNameAuth. */
    class C2STrueNameAuth implements IC2STrueNameAuth {

        /**
         * Constructs a new C2STrueNameAuth.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2STrueNameAuth);

        /** C2STrueNameAuth idNum. */
        public idNum: string;

        /** C2STrueNameAuth name. */
        public name: string;

        /**
         * Creates a new C2STrueNameAuth instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2STrueNameAuth instance
         */
        public static create(properties?: pb.IC2STrueNameAuth): pb.C2STrueNameAuth;

        /**
         * Encodes the specified C2STrueNameAuth message. Does not implicitly {@link pb.C2STrueNameAuth.verify|verify} messages.
         * @param message C2STrueNameAuth message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2STrueNameAuth, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2STrueNameAuth message, length delimited. Does not implicitly {@link pb.C2STrueNameAuth.verify|verify} messages.
         * @param message C2STrueNameAuth message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2STrueNameAuth, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2STrueNameAuth message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2STrueNameAuth
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2STrueNameAuth;

        /**
         * Decodes a C2STrueNameAuth message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2STrueNameAuth
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2STrueNameAuth;

        /**
         * Verifies a C2STrueNameAuth message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2STrueNameAuth message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2STrueNameAuth
         */
        public static fromObject(object: { [k: string]: any }): pb.C2STrueNameAuth;

        /**
         * Creates a plain object from a C2STrueNameAuth message. Also converts values to other types if specified.
         * @param message C2STrueNameAuth
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2STrueNameAuth, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2STrueNameAuth to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CTrueNameAuth. */
    interface IS2CTrueNameAuth {

        /** S2CTrueNameAuth result */
        result?: (number|null);
    }

    /** Represents a S2CTrueNameAuth. */
    class S2CTrueNameAuth implements IS2CTrueNameAuth {

        /**
         * Constructs a new S2CTrueNameAuth.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CTrueNameAuth);

        /** S2CTrueNameAuth result. */
        public result: number;

        /**
         * Creates a new S2CTrueNameAuth instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CTrueNameAuth instance
         */
        public static create(properties?: pb.IS2CTrueNameAuth): pb.S2CTrueNameAuth;

        /**
         * Encodes the specified S2CTrueNameAuth message. Does not implicitly {@link pb.S2CTrueNameAuth.verify|verify} messages.
         * @param message S2CTrueNameAuth message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CTrueNameAuth, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CTrueNameAuth message, length delimited. Does not implicitly {@link pb.S2CTrueNameAuth.verify|verify} messages.
         * @param message S2CTrueNameAuth message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CTrueNameAuth, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CTrueNameAuth message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CTrueNameAuth
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CTrueNameAuth;

        /**
         * Decodes a S2CTrueNameAuth message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CTrueNameAuth
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CTrueNameAuth;

        /**
         * Verifies a S2CTrueNameAuth message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CTrueNameAuth message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CTrueNameAuth
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CTrueNameAuth;

        /**
         * Creates a plain object from a S2CTrueNameAuth message. Also converts values to other types if specified.
         * @param message S2CTrueNameAuth
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CTrueNameAuth, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CTrueNameAuth to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** GenderType enum. */
    enum GenderType {
        Gender_Null = 0,
        Gender_Male = 1,
        Gender_Female = 2
    }

    /** Properties of a C2SSetGender. */
    interface IC2SSetGender {

        /** C2SSetGender sex */
        sex?: (pb.GenderType|null);
    }

    /** Represents a C2SSetGender. */
    class C2SSetGender implements IC2SSetGender {

        /**
         * Constructs a new C2SSetGender.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SSetGender);

        /** C2SSetGender sex. */
        public sex: pb.GenderType;

        /**
         * Creates a new C2SSetGender instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SSetGender instance
         */
        public static create(properties?: pb.IC2SSetGender): pb.C2SSetGender;

        /**
         * Encodes the specified C2SSetGender message. Does not implicitly {@link pb.C2SSetGender.verify|verify} messages.
         * @param message C2SSetGender message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SSetGender, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SSetGender message, length delimited. Does not implicitly {@link pb.C2SSetGender.verify|verify} messages.
         * @param message C2SSetGender message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SSetGender, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SSetGender message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SSetGender
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SSetGender;

        /**
         * Decodes a C2SSetGender message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SSetGender
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SSetGender;

        /**
         * Verifies a C2SSetGender message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SSetGender message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SSetGender
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SSetGender;

        /**
         * Creates a plain object from a C2SSetGender message. Also converts values to other types if specified.
         * @param message C2SSetGender
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SSetGender, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SSetGender to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CSetGender. */
    interface IS2CSetGender {

        /** S2CSetGender sex */
        sex?: (pb.GenderType|null);
    }

    /** Represents a S2CSetGender. */
    class S2CSetGender implements IS2CSetGender {

        /**
         * Constructs a new S2CSetGender.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CSetGender);

        /** S2CSetGender sex. */
        public sex: pb.GenderType;

        /**
         * Creates a new S2CSetGender instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CSetGender instance
         */
        public static create(properties?: pb.IS2CSetGender): pb.S2CSetGender;

        /**
         * Encodes the specified S2CSetGender message. Does not implicitly {@link pb.S2CSetGender.verify|verify} messages.
         * @param message S2CSetGender message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CSetGender, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CSetGender message, length delimited. Does not implicitly {@link pb.S2CSetGender.verify|verify} messages.
         * @param message S2CSetGender message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CSetGender, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CSetGender message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CSetGender
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CSetGender;

        /**
         * Decodes a S2CSetGender message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CSetGender
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CSetGender;

        /**
         * Verifies a S2CSetGender message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CSetGender message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CSetGender
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CSetGender;

        /**
         * Creates a plain object from a S2CSetGender message. Also converts values to other types if specified.
         * @param message S2CSetGender
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CSetGender, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CSetGender to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SHideMe. */
    interface IC2SHideMe {

        /** C2SHideMe hide */
        hide?: (boolean|null);
    }

    /** Represents a C2SHideMe. */
    class C2SHideMe implements IC2SHideMe {

        /**
         * Constructs a new C2SHideMe.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SHideMe);

        /** C2SHideMe hide. */
        public hide: boolean;

        /**
         * Creates a new C2SHideMe instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SHideMe instance
         */
        public static create(properties?: pb.IC2SHideMe): pb.C2SHideMe;

        /**
         * Encodes the specified C2SHideMe message. Does not implicitly {@link pb.C2SHideMe.verify|verify} messages.
         * @param message C2SHideMe message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SHideMe, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SHideMe message, length delimited. Does not implicitly {@link pb.C2SHideMe.verify|verify} messages.
         * @param message C2SHideMe message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SHideMe, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SHideMe message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SHideMe
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SHideMe;

        /**
         * Decodes a C2SHideMe message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SHideMe
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SHideMe;

        /**
         * Verifies a C2SHideMe message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SHideMe message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SHideMe
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SHideMe;

        /**
         * Creates a plain object from a C2SHideMe message. Also converts values to other types if specified.
         * @param message C2SHideMe
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SHideMe, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SHideMe to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CHideMe. */
    interface IS2CHideMe {

        /** S2CHideMe hide */
        hide?: (boolean|null);
    }

    /** Represents a S2CHideMe. */
    class S2CHideMe implements IS2CHideMe {

        /**
         * Constructs a new S2CHideMe.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CHideMe);

        /** S2CHideMe hide. */
        public hide: boolean;

        /**
         * Creates a new S2CHideMe instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CHideMe instance
         */
        public static create(properties?: pb.IS2CHideMe): pb.S2CHideMe;

        /**
         * Encodes the specified S2CHideMe message. Does not implicitly {@link pb.S2CHideMe.verify|verify} messages.
         * @param message S2CHideMe message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CHideMe, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CHideMe message, length delimited. Does not implicitly {@link pb.S2CHideMe.verify|verify} messages.
         * @param message S2CHideMe message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CHideMe, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CHideMe message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CHideMe
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CHideMe;

        /**
         * Decodes a S2CHideMe message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CHideMe
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CHideMe;

        /**
         * Verifies a S2CHideMe message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CHideMe message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CHideMe
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CHideMe;

        /**
         * Creates a plain object from a S2CHideMe message. Also converts values to other types if specified.
         * @param message S2CHideMe
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CHideMe, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CHideMe to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SSetName. */
    interface IC2SSetName {

        /** C2SSetName name */
        name?: (string|null);
    }

    /** Represents a C2SSetName. */
    class C2SSetName implements IC2SSetName {

        /**
         * Constructs a new C2SSetName.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SSetName);

        /** C2SSetName name. */
        public name: string;

        /**
         * Creates a new C2SSetName instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SSetName instance
         */
        public static create(properties?: pb.IC2SSetName): pb.C2SSetName;

        /**
         * Encodes the specified C2SSetName message. Does not implicitly {@link pb.C2SSetName.verify|verify} messages.
         * @param message C2SSetName message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SSetName, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SSetName message, length delimited. Does not implicitly {@link pb.C2SSetName.verify|verify} messages.
         * @param message C2SSetName message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SSetName, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SSetName message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SSetName
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SSetName;

        /**
         * Decodes a C2SSetName message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SSetName
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SSetName;

        /**
         * Verifies a C2SSetName message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SSetName message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SSetName
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SSetName;

        /**
         * Creates a plain object from a C2SSetName message. Also converts values to other types if specified.
         * @param message C2SSetName
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SSetName, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SSetName to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** SetNameResult enum. */
    enum SetNameResult {
        SetName_Fail = 0,
        SetName_Ok = 1,
        SetName_Illegal = 2
    }

    /** Properties of a S2CSetName. */
    interface IS2CSetName {

        /** S2CSetName result */
        result?: (pb.SetNameResult|null);

        /** S2CSetName name */
        name?: (string|null);
    }

    /** Represents a S2CSetName. */
    class S2CSetName implements IS2CSetName {

        /**
         * Constructs a new S2CSetName.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CSetName);

        /** S2CSetName result. */
        public result: pb.SetNameResult;

        /** S2CSetName name. */
        public name: string;

        /**
         * Creates a new S2CSetName instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CSetName instance
         */
        public static create(properties?: pb.IS2CSetName): pb.S2CSetName;

        /**
         * Encodes the specified S2CSetName message. Does not implicitly {@link pb.S2CSetName.verify|verify} messages.
         * @param message S2CSetName message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CSetName, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CSetName message, length delimited. Does not implicitly {@link pb.S2CSetName.verify|verify} messages.
         * @param message S2CSetName message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CSetName, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CSetName message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CSetName
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CSetName;

        /**
         * Decodes a S2CSetName message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CSetName
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CSetName;

        /**
         * Verifies a S2CSetName message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CSetName message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CSetName
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CSetName;

        /**
         * Creates a plain object from a S2CSetName message. Also converts values to other types if specified.
         * @param message S2CSetName
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CSetName, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CSetName to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SSetPortraits. */
    interface IC2SSetPortraits {

        /** C2SSetPortraits iconId */
        iconId?: (number|null);
    }

    /** Represents a C2SSetPortraits. */
    class C2SSetPortraits implements IC2SSetPortraits {

        /**
         * Constructs a new C2SSetPortraits.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SSetPortraits);

        /** C2SSetPortraits iconId. */
        public iconId: number;

        /**
         * Creates a new C2SSetPortraits instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SSetPortraits instance
         */
        public static create(properties?: pb.IC2SSetPortraits): pb.C2SSetPortraits;

        /**
         * Encodes the specified C2SSetPortraits message. Does not implicitly {@link pb.C2SSetPortraits.verify|verify} messages.
         * @param message C2SSetPortraits message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SSetPortraits, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SSetPortraits message, length delimited. Does not implicitly {@link pb.C2SSetPortraits.verify|verify} messages.
         * @param message C2SSetPortraits message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SSetPortraits, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SSetPortraits message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SSetPortraits
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SSetPortraits;

        /**
         * Decodes a C2SSetPortraits message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SSetPortraits
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SSetPortraits;

        /**
         * Verifies a C2SSetPortraits message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SSetPortraits message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SSetPortraits
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SSetPortraits;

        /**
         * Creates a plain object from a C2SSetPortraits message. Also converts values to other types if specified.
         * @param message C2SSetPortraits
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SSetPortraits, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SSetPortraits to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CSetPortraits. */
    interface IS2CSetPortraits {

        /** S2CSetPortraits iconId */
        iconId?: (number|null);
    }

    /** Represents a S2CSetPortraits. */
    class S2CSetPortraits implements IS2CSetPortraits {

        /**
         * Constructs a new S2CSetPortraits.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CSetPortraits);

        /** S2CSetPortraits iconId. */
        public iconId: number;

        /**
         * Creates a new S2CSetPortraits instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CSetPortraits instance
         */
        public static create(properties?: pb.IS2CSetPortraits): pb.S2CSetPortraits;

        /**
         * Encodes the specified S2CSetPortraits message. Does not implicitly {@link pb.S2CSetPortraits.verify|verify} messages.
         * @param message S2CSetPortraits message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CSetPortraits, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CSetPortraits message, length delimited. Does not implicitly {@link pb.S2CSetPortraits.verify|verify} messages.
         * @param message S2CSetPortraits message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CSetPortraits, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CSetPortraits message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CSetPortraits
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CSetPortraits;

        /**
         * Decodes a S2CSetPortraits message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CSetPortraits
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CSetPortraits;

        /**
         * Verifies a S2CSetPortraits message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CSetPortraits message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CSetPortraits
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CSetPortraits;

        /**
         * Creates a plain object from a S2CSetPortraits message. Also converts values to other types if specified.
         * @param message S2CSetPortraits
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CSetPortraits, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CSetPortraits to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SSetPortBorder. */
    interface IC2SSetPortBorder {

        /** C2SSetPortBorder id */
        id?: (number|null);
    }

    /** Represents a C2SSetPortBorder. */
    class C2SSetPortBorder implements IC2SSetPortBorder {

        /**
         * Constructs a new C2SSetPortBorder.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SSetPortBorder);

        /** C2SSetPortBorder id. */
        public id: number;

        /**
         * Creates a new C2SSetPortBorder instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SSetPortBorder instance
         */
        public static create(properties?: pb.IC2SSetPortBorder): pb.C2SSetPortBorder;

        /**
         * Encodes the specified C2SSetPortBorder message. Does not implicitly {@link pb.C2SSetPortBorder.verify|verify} messages.
         * @param message C2SSetPortBorder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SSetPortBorder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SSetPortBorder message, length delimited. Does not implicitly {@link pb.C2SSetPortBorder.verify|verify} messages.
         * @param message C2SSetPortBorder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SSetPortBorder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SSetPortBorder message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SSetPortBorder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SSetPortBorder;

        /**
         * Decodes a C2SSetPortBorder message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SSetPortBorder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SSetPortBorder;

        /**
         * Verifies a C2SSetPortBorder message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SSetPortBorder message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SSetPortBorder
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SSetPortBorder;

        /**
         * Creates a plain object from a C2SSetPortBorder message. Also converts values to other types if specified.
         * @param message C2SSetPortBorder
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SSetPortBorder, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SSetPortBorder to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CSetPortBorder. */
    interface IS2CSetPortBorder {

        /** S2CSetPortBorder id */
        id?: (number|null);
    }

    /** Represents a S2CSetPortBorder. */
    class S2CSetPortBorder implements IS2CSetPortBorder {

        /**
         * Constructs a new S2CSetPortBorder.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CSetPortBorder);

        /** S2CSetPortBorder id. */
        public id: number;

        /**
         * Creates a new S2CSetPortBorder instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CSetPortBorder instance
         */
        public static create(properties?: pb.IS2CSetPortBorder): pb.S2CSetPortBorder;

        /**
         * Encodes the specified S2CSetPortBorder message. Does not implicitly {@link pb.S2CSetPortBorder.verify|verify} messages.
         * @param message S2CSetPortBorder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CSetPortBorder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CSetPortBorder message, length delimited. Does not implicitly {@link pb.S2CSetPortBorder.verify|verify} messages.
         * @param message S2CSetPortBorder message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CSetPortBorder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CSetPortBorder message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CSetPortBorder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CSetPortBorder;

        /**
         * Decodes a S2CSetPortBorder message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CSetPortBorder
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CSetPortBorder;

        /**
         * Verifies a S2CSetPortBorder message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CSetPortBorder message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CSetPortBorder
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CSetPortBorder;

        /**
         * Creates a plain object from a S2CSetPortBorder message. Also converts values to other types if specified.
         * @param message S2CSetPortBorder
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CSetPortBorder, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CSetPortBorder to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SLocat. */
    interface IC2SLocat {

        /** C2SLocat data */
        data?: (string|null);
    }

    /** Represents a C2SLocat. */
    class C2SLocat implements IC2SLocat {

        /**
         * Constructs a new C2SLocat.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SLocat);

        /** C2SLocat data. */
        public data: string;

        /**
         * Creates a new C2SLocat instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SLocat instance
         */
        public static create(properties?: pb.IC2SLocat): pb.C2SLocat;

        /**
         * Encodes the specified C2SLocat message. Does not implicitly {@link pb.C2SLocat.verify|verify} messages.
         * @param message C2SLocat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SLocat, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SLocat message, length delimited. Does not implicitly {@link pb.C2SLocat.verify|verify} messages.
         * @param message C2SLocat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SLocat, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SLocat message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SLocat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SLocat;

        /**
         * Decodes a C2SLocat message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SLocat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SLocat;

        /**
         * Verifies a C2SLocat message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SLocat message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SLocat
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SLocat;

        /**
         * Creates a plain object from a C2SLocat message. Also converts values to other types if specified.
         * @param message C2SLocat
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SLocat, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SLocat to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetYinLiuReward. */
    interface IC2SGetYinLiuReward {
    }

    /** Represents a C2SGetYinLiuReward. */
    class C2SGetYinLiuReward implements IC2SGetYinLiuReward {

        /**
         * Constructs a new C2SGetYinLiuReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetYinLiuReward);

        /**
         * Creates a new C2SGetYinLiuReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetYinLiuReward instance
         */
        public static create(properties?: pb.IC2SGetYinLiuReward): pb.C2SGetYinLiuReward;

        /**
         * Encodes the specified C2SGetYinLiuReward message. Does not implicitly {@link pb.C2SGetYinLiuReward.verify|verify} messages.
         * @param message C2SGetYinLiuReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetYinLiuReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetYinLiuReward message, length delimited. Does not implicitly {@link pb.C2SGetYinLiuReward.verify|verify} messages.
         * @param message C2SGetYinLiuReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetYinLiuReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetYinLiuReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetYinLiuReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetYinLiuReward;

        /**
         * Decodes a C2SGetYinLiuReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetYinLiuReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetYinLiuReward;

        /**
         * Verifies a C2SGetYinLiuReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetYinLiuReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetYinLiuReward
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetYinLiuReward;

        /**
         * Creates a plain object from a C2SGetYinLiuReward message. Also converts values to other types if specified.
         * @param message C2SGetYinLiuReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetYinLiuReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetYinLiuReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetYinLiuReward. */
    interface IS2CGetYinLiuReward {

        /** S2CGetYinLiuReward ec */
        ec?: (number|null);
    }

    /** Represents a S2CGetYinLiuReward. */
    class S2CGetYinLiuReward implements IS2CGetYinLiuReward {

        /**
         * Constructs a new S2CGetYinLiuReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetYinLiuReward);

        /** S2CGetYinLiuReward ec. */
        public ec: number;

        /**
         * Creates a new S2CGetYinLiuReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetYinLiuReward instance
         */
        public static create(properties?: pb.IS2CGetYinLiuReward): pb.S2CGetYinLiuReward;

        /**
         * Encodes the specified S2CGetYinLiuReward message. Does not implicitly {@link pb.S2CGetYinLiuReward.verify|verify} messages.
         * @param message S2CGetYinLiuReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetYinLiuReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetYinLiuReward message, length delimited. Does not implicitly {@link pb.S2CGetYinLiuReward.verify|verify} messages.
         * @param message S2CGetYinLiuReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetYinLiuReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetYinLiuReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetYinLiuReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetYinLiuReward;

        /**
         * Decodes a S2CGetYinLiuReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetYinLiuReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetYinLiuReward;

        /**
         * Verifies a S2CGetYinLiuReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetYinLiuReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetYinLiuReward
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetYinLiuReward;

        /**
         * Creates a plain object from a S2CGetYinLiuReward message. Also converts values to other types if specified.
         * @param message S2CGetYinLiuReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetYinLiuReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetYinLiuReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SVipCfgs. */
    interface IC2SVipCfgs {
    }

    /** Represents a C2SVipCfgs. */
    class C2SVipCfgs implements IC2SVipCfgs {

        /**
         * Constructs a new C2SVipCfgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SVipCfgs);

        /**
         * Creates a new C2SVipCfgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SVipCfgs instance
         */
        public static create(properties?: pb.IC2SVipCfgs): pb.C2SVipCfgs;

        /**
         * Encodes the specified C2SVipCfgs message. Does not implicitly {@link pb.C2SVipCfgs.verify|verify} messages.
         * @param message C2SVipCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SVipCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SVipCfgs message, length delimited. Does not implicitly {@link pb.C2SVipCfgs.verify|verify} messages.
         * @param message C2SVipCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SVipCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SVipCfgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SVipCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SVipCfgs;

        /**
         * Decodes a C2SVipCfgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SVipCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SVipCfgs;

        /**
         * Verifies a C2SVipCfgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SVipCfgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SVipCfgs
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SVipCfgs;

        /**
         * Creates a plain object from a C2SVipCfgs message. Also converts values to other types if specified.
         * @param message C2SVipCfgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SVipCfgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SVipCfgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CVipCfgs. */
    interface IS2CVipCfgs {

        /** S2CVipCfgs items */
        items?: (pb.IVipCfg[]|null);
    }

    /** Represents a S2CVipCfgs. */
    class S2CVipCfgs implements IS2CVipCfgs {

        /**
         * Constructs a new S2CVipCfgs.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CVipCfgs);

        /** S2CVipCfgs items. */
        public items: pb.IVipCfg[];

        /**
         * Creates a new S2CVipCfgs instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CVipCfgs instance
         */
        public static create(properties?: pb.IS2CVipCfgs): pb.S2CVipCfgs;

        /**
         * Encodes the specified S2CVipCfgs message. Does not implicitly {@link pb.S2CVipCfgs.verify|verify} messages.
         * @param message S2CVipCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CVipCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CVipCfgs message, length delimited. Does not implicitly {@link pb.S2CVipCfgs.verify|verify} messages.
         * @param message S2CVipCfgs message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CVipCfgs, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CVipCfgs message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CVipCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CVipCfgs;

        /**
         * Decodes a S2CVipCfgs message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CVipCfgs
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CVipCfgs;

        /**
         * Verifies a S2CVipCfgs message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CVipCfgs message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CVipCfgs
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CVipCfgs;

        /**
         * Creates a plain object from a S2CVipCfgs message. Also converts values to other types if specified.
         * @param message S2CVipCfgs
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CVipCfgs, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CVipCfgs to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetVipReward. */
    interface IC2SGetVipReward {

        /** C2SGetVipReward level */
        level?: (number|null);
    }

    /** Represents a C2SGetVipReward. */
    class C2SGetVipReward implements IC2SGetVipReward {

        /**
         * Constructs a new C2SGetVipReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetVipReward);

        /** C2SGetVipReward level. */
        public level: number;

        /**
         * Creates a new C2SGetVipReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetVipReward instance
         */
        public static create(properties?: pb.IC2SGetVipReward): pb.C2SGetVipReward;

        /**
         * Encodes the specified C2SGetVipReward message. Does not implicitly {@link pb.C2SGetVipReward.verify|verify} messages.
         * @param message C2SGetVipReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetVipReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetVipReward message, length delimited. Does not implicitly {@link pb.C2SGetVipReward.verify|verify} messages.
         * @param message C2SGetVipReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetVipReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetVipReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetVipReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetVipReward;

        /**
         * Decodes a C2SGetVipReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetVipReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetVipReward;

        /**
         * Verifies a C2SGetVipReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetVipReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetVipReward
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetVipReward;

        /**
         * Creates a plain object from a C2SGetVipReward message. Also converts values to other types if specified.
         * @param message C2SGetVipReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetVipReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetVipReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetVipReward. */
    interface IS2CGetVipReward {

        /** S2CGetVipReward level */
        level?: (number|null);

        /** S2CGetVipReward ec */
        ec?: (number|null);
    }

    /** Represents a S2CGetVipReward. */
    class S2CGetVipReward implements IS2CGetVipReward {

        /**
         * Constructs a new S2CGetVipReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetVipReward);

        /** S2CGetVipReward level. */
        public level: number;

        /** S2CGetVipReward ec. */
        public ec: number;

        /**
         * Creates a new S2CGetVipReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetVipReward instance
         */
        public static create(properties?: pb.IS2CGetVipReward): pb.S2CGetVipReward;

        /**
         * Encodes the specified S2CGetVipReward message. Does not implicitly {@link pb.S2CGetVipReward.verify|verify} messages.
         * @param message S2CGetVipReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetVipReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetVipReward message, length delimited. Does not implicitly {@link pb.S2CGetVipReward.verify|verify} messages.
         * @param message S2CGetVipReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetVipReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetVipReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetVipReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetVipReward;

        /**
         * Decodes a S2CGetVipReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetVipReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetVipReward;

        /**
         * Verifies a S2CGetVipReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetVipReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetVipReward
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetVipReward;

        /**
         * Creates a plain object from a S2CGetVipReward message. Also converts values to other types if specified.
         * @param message S2CGetVipReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetVipReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetVipReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SGetVipDayReward. */
    interface IC2SGetVipDayReward {
    }

    /** Represents a C2SGetVipDayReward. */
    class C2SGetVipDayReward implements IC2SGetVipDayReward {

        /**
         * Constructs a new C2SGetVipDayReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SGetVipDayReward);

        /**
         * Creates a new C2SGetVipDayReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SGetVipDayReward instance
         */
        public static create(properties?: pb.IC2SGetVipDayReward): pb.C2SGetVipDayReward;

        /**
         * Encodes the specified C2SGetVipDayReward message. Does not implicitly {@link pb.C2SGetVipDayReward.verify|verify} messages.
         * @param message C2SGetVipDayReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SGetVipDayReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SGetVipDayReward message, length delimited. Does not implicitly {@link pb.C2SGetVipDayReward.verify|verify} messages.
         * @param message C2SGetVipDayReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SGetVipDayReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SGetVipDayReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SGetVipDayReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SGetVipDayReward;

        /**
         * Decodes a C2SGetVipDayReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SGetVipDayReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SGetVipDayReward;

        /**
         * Verifies a C2SGetVipDayReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SGetVipDayReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SGetVipDayReward
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SGetVipDayReward;

        /**
         * Creates a plain object from a C2SGetVipDayReward message. Also converts values to other types if specified.
         * @param message C2SGetVipDayReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SGetVipDayReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SGetVipDayReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CGetVipDayReward. */
    interface IS2CGetVipDayReward {

        /** S2CGetVipDayReward ec */
        ec?: (number|null);
    }

    /** Represents a S2CGetVipDayReward. */
    class S2CGetVipDayReward implements IS2CGetVipDayReward {

        /**
         * Constructs a new S2CGetVipDayReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CGetVipDayReward);

        /** S2CGetVipDayReward ec. */
        public ec: number;

        /**
         * Creates a new S2CGetVipDayReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CGetVipDayReward instance
         */
        public static create(properties?: pb.IS2CGetVipDayReward): pb.S2CGetVipDayReward;

        /**
         * Encodes the specified S2CGetVipDayReward message. Does not implicitly {@link pb.S2CGetVipDayReward.verify|verify} messages.
         * @param message S2CGetVipDayReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CGetVipDayReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CGetVipDayReward message, length delimited. Does not implicitly {@link pb.S2CGetVipDayReward.verify|verify} messages.
         * @param message S2CGetVipDayReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CGetVipDayReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CGetVipDayReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CGetVipDayReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CGetVipDayReward;

        /**
         * Decodes a S2CGetVipDayReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CGetVipDayReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CGetVipDayReward;

        /**
         * Verifies a S2CGetVipDayReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CGetVipDayReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CGetVipDayReward
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CGetVipDayReward;

        /**
         * Creates a plain object from a S2CGetVipDayReward message. Also converts values to other types if specified.
         * @param message S2CGetVipDayReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CGetVipDayReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CGetVipDayReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CVipChange. */
    interface IS2CVipChange {

        /** S2CVipChange oldVip */
        oldVip?: (number|null);

        /** S2CVipChange newVip */
        newVip?: (number|null);
    }

    /** Represents a S2CVipChange. */
    class S2CVipChange implements IS2CVipChange {

        /**
         * Constructs a new S2CVipChange.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CVipChange);

        /** S2CVipChange oldVip. */
        public oldVip: number;

        /** S2CVipChange newVip. */
        public newVip: number;

        /**
         * Creates a new S2CVipChange instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CVipChange instance
         */
        public static create(properties?: pb.IS2CVipChange): pb.S2CVipChange;

        /**
         * Encodes the specified S2CVipChange message. Does not implicitly {@link pb.S2CVipChange.verify|verify} messages.
         * @param message S2CVipChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CVipChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CVipChange message, length delimited. Does not implicitly {@link pb.S2CVipChange.verify|verify} messages.
         * @param message S2CVipChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CVipChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CVipChange message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CVipChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CVipChange;

        /**
         * Decodes a S2CVipChange message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CVipChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CVipChange;

        /**
         * Verifies a S2CVipChange message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CVipChange message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CVipChange
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CVipChange;

        /**
         * Creates a plain object from a S2CVipChange message. Also converts values to other types if specified.
         * @param message S2CVipChange
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CVipChange, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CVipChange to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VipPlayerBase. */
    interface IVipPlayerBase {

        /** VipPlayerBase name */
        name?: (string|null);

        /** VipPlayerBase playerGuid */
        playerGuid?: (number|Long|null);

        /** VipPlayerBase portBorder */
        portBorder?: (number|null);

        /** VipPlayerBase vipLevel */
        vipLevel?: (number|null);
    }

    /** Represents a VipPlayerBase. */
    class VipPlayerBase implements IVipPlayerBase {

        /**
         * Constructs a new VipPlayerBase.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IVipPlayerBase);

        /** VipPlayerBase name. */
        public name: string;

        /** VipPlayerBase playerGuid. */
        public playerGuid: (number|Long);

        /** VipPlayerBase portBorder. */
        public portBorder: number;

        /** VipPlayerBase vipLevel. */
        public vipLevel: number;

        /**
         * Creates a new VipPlayerBase instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VipPlayerBase instance
         */
        public static create(properties?: pb.IVipPlayerBase): pb.VipPlayerBase;

        /**
         * Encodes the specified VipPlayerBase message. Does not implicitly {@link pb.VipPlayerBase.verify|verify} messages.
         * @param message VipPlayerBase message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IVipPlayerBase, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VipPlayerBase message, length delimited. Does not implicitly {@link pb.VipPlayerBase.verify|verify} messages.
         * @param message VipPlayerBase message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IVipPlayerBase, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VipPlayerBase message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VipPlayerBase
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.VipPlayerBase;

        /**
         * Decodes a VipPlayerBase message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VipPlayerBase
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.VipPlayerBase;

        /**
         * Verifies a VipPlayerBase message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VipPlayerBase message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VipPlayerBase
         */
        public static fromObject(object: { [k: string]: any }): pb.VipPlayerBase;

        /**
         * Creates a plain object from a VipPlayerBase message. Also converts values to other types if specified.
         * @param message VipPlayerBase
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.VipPlayerBase, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VipPlayerBase to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CVipLogin. */
    interface IS2CVipLogin {

        /** S2CVipLogin item */
        item?: (pb.IVipPlayerBase|null);

        /** S2CVipLogin inform */
        inform?: (pb.InformType|null);
    }

    /** Represents a S2CVipLogin. */
    class S2CVipLogin implements IS2CVipLogin {

        /**
         * Constructs a new S2CVipLogin.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CVipLogin);

        /** S2CVipLogin item. */
        public item?: (pb.IVipPlayerBase|null);

        /** S2CVipLogin inform. */
        public inform: pb.InformType;

        /**
         * Creates a new S2CVipLogin instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CVipLogin instance
         */
        public static create(properties?: pb.IS2CVipLogin): pb.S2CVipLogin;

        /**
         * Encodes the specified S2CVipLogin message. Does not implicitly {@link pb.S2CVipLogin.verify|verify} messages.
         * @param message S2CVipLogin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CVipLogin, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CVipLogin message, length delimited. Does not implicitly {@link pb.S2CVipLogin.verify|verify} messages.
         * @param message S2CVipLogin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CVipLogin, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CVipLogin message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CVipLogin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CVipLogin;

        /**
         * Decodes a S2CVipLogin message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CVipLogin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CVipLogin;

        /**
         * Verifies a S2CVipLogin message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CVipLogin message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CVipLogin
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CVipLogin;

        /**
         * Creates a plain object from a S2CVipLogin message. Also converts values to other types if specified.
         * @param message S2CVipLogin
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CVipLogin, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CVipLogin to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** InformType enum. */
    enum InformType {
        InformType_Null = 0,
        InformType_Text = 1,
        InformType_Ani = 2
    }

    /** Properties of a VipCfg. */
    interface IVipCfg {

        /** VipCfg level */
        level?: (number|null);

        /** VipCfg payAmount */
        payAmount?: (number|null);

        /** VipCfg dayGift */
        dayGift?: ({ [k: string]: (number|Long) }|null);

        /** VipCfg gift */
        gift?: ({ [k: string]: (number|Long) }|null);

        /** VipCfg jjjMul */
        jjjMul?: (number|null);

        /** VipCfg poChanMul */
        poChanMul?: (number|null);

        /** VipCfg poChanTimes */
        poChanTimes?: (number|null);

        /** VipCfg loginInform */
        loginInform?: (pb.InformType|null);

        /** VipCfg entryInform */
        entryInform?: (pb.InformType|null);

        /** VipCfg portBorder */
        portBorder?: (number|null);

        /** VipCfg decorates */
        decorates?: ({ [k: string]: (number|Long) }|null);

        /** VipCfg desc */
        desc?: (string|null);
    }

    /** Represents a VipCfg. */
    class VipCfg implements IVipCfg {

        /**
         * Constructs a new VipCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IVipCfg);

        /** VipCfg level. */
        public level: number;

        /** VipCfg payAmount. */
        public payAmount: number;

        /** VipCfg dayGift. */
        public dayGift: { [k: string]: (number|Long) };

        /** VipCfg gift. */
        public gift: { [k: string]: (number|Long) };

        /** VipCfg jjjMul. */
        public jjjMul: number;

        /** VipCfg poChanMul. */
        public poChanMul: number;

        /** VipCfg poChanTimes. */
        public poChanTimes: number;

        /** VipCfg loginInform. */
        public loginInform: pb.InformType;

        /** VipCfg entryInform. */
        public entryInform: pb.InformType;

        /** VipCfg portBorder. */
        public portBorder: number;

        /** VipCfg decorates. */
        public decorates: { [k: string]: (number|Long) };

        /** VipCfg desc. */
        public desc: string;

        /**
         * Creates a new VipCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VipCfg instance
         */
        public static create(properties?: pb.IVipCfg): pb.VipCfg;

        /**
         * Encodes the specified VipCfg message. Does not implicitly {@link pb.VipCfg.verify|verify} messages.
         * @param message VipCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IVipCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VipCfg message, length delimited. Does not implicitly {@link pb.VipCfg.verify|verify} messages.
         * @param message VipCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IVipCfg, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VipCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VipCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.VipCfg;

        /**
         * Decodes a VipCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VipCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.VipCfg;

        /**
         * Verifies a VipCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VipCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VipCfg
         */
        public static fromObject(object: { [k: string]: any }): pb.VipCfg;

        /**
         * Creates a plain object from a VipCfg message. Also converts values to other types if specified.
         * @param message VipCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.VipCfg, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VipCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SZaiXianInfo. */
    interface IC2SZaiXianInfo {
    }

    /** Represents a C2SZaiXianInfo. */
    class C2SZaiXianInfo implements IC2SZaiXianInfo {

        /**
         * Constructs a new C2SZaiXianInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SZaiXianInfo);

        /**
         * Creates a new C2SZaiXianInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SZaiXianInfo instance
         */
        public static create(properties?: pb.IC2SZaiXianInfo): pb.C2SZaiXianInfo;

        /**
         * Encodes the specified C2SZaiXianInfo message. Does not implicitly {@link pb.C2SZaiXianInfo.verify|verify} messages.
         * @param message C2SZaiXianInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SZaiXianInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SZaiXianInfo message, length delimited. Does not implicitly {@link pb.C2SZaiXianInfo.verify|verify} messages.
         * @param message C2SZaiXianInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SZaiXianInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SZaiXianInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SZaiXianInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SZaiXianInfo;

        /**
         * Decodes a C2SZaiXianInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SZaiXianInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SZaiXianInfo;

        /**
         * Verifies a C2SZaiXianInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SZaiXianInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SZaiXianInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SZaiXianInfo;

        /**
         * Creates a plain object from a C2SZaiXianInfo message. Also converts values to other types if specified.
         * @param message C2SZaiXianInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SZaiXianInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SZaiXianInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CZaiXianInfo. */
    interface IS2CZaiXianInfo {

        /** S2CZaiXianInfo data */
        data?: (pb.IZaiXianData[]|null);
    }

    /** Represents a S2CZaiXianInfo. */
    class S2CZaiXianInfo implements IS2CZaiXianInfo {

        /**
         * Constructs a new S2CZaiXianInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CZaiXianInfo);

        /** S2CZaiXianInfo data. */
        public data: pb.IZaiXianData[];

        /**
         * Creates a new S2CZaiXianInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CZaiXianInfo instance
         */
        public static create(properties?: pb.IS2CZaiXianInfo): pb.S2CZaiXianInfo;

        /**
         * Encodes the specified S2CZaiXianInfo message. Does not implicitly {@link pb.S2CZaiXianInfo.verify|verify} messages.
         * @param message S2CZaiXianInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CZaiXianInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CZaiXianInfo message, length delimited. Does not implicitly {@link pb.S2CZaiXianInfo.verify|verify} messages.
         * @param message S2CZaiXianInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CZaiXianInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CZaiXianInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CZaiXianInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CZaiXianInfo;

        /**
         * Decodes a S2CZaiXianInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CZaiXianInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CZaiXianInfo;

        /**
         * Verifies a S2CZaiXianInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CZaiXianInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CZaiXianInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CZaiXianInfo;

        /**
         * Creates a plain object from a S2CZaiXianInfo message. Also converts values to other types if specified.
         * @param message S2CZaiXianInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CZaiXianInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CZaiXianInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SZaiXianReward. */
    interface IC2SZaiXianReward {

        /** C2SZaiXianReward id */
        id?: (number|null);
    }

    /** Represents a C2SZaiXianReward. */
    class C2SZaiXianReward implements IC2SZaiXianReward {

        /**
         * Constructs a new C2SZaiXianReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SZaiXianReward);

        /** C2SZaiXianReward id. */
        public id: number;

        /**
         * Creates a new C2SZaiXianReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SZaiXianReward instance
         */
        public static create(properties?: pb.IC2SZaiXianReward): pb.C2SZaiXianReward;

        /**
         * Encodes the specified C2SZaiXianReward message. Does not implicitly {@link pb.C2SZaiXianReward.verify|verify} messages.
         * @param message C2SZaiXianReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SZaiXianReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SZaiXianReward message, length delimited. Does not implicitly {@link pb.C2SZaiXianReward.verify|verify} messages.
         * @param message C2SZaiXianReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SZaiXianReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SZaiXianReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SZaiXianReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SZaiXianReward;

        /**
         * Decodes a C2SZaiXianReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SZaiXianReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SZaiXianReward;

        /**
         * Verifies a C2SZaiXianReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SZaiXianReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SZaiXianReward
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SZaiXianReward;

        /**
         * Creates a plain object from a C2SZaiXianReward message. Also converts values to other types if specified.
         * @param message C2SZaiXianReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SZaiXianReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SZaiXianReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CZaiXianReward. */
    interface IS2CZaiXianReward {

        /** S2CZaiXianReward id */
        id?: (number|null);

        /** S2CZaiXianReward errcode */
        errcode?: (number|null);
    }

    /** Represents a S2CZaiXianReward. */
    class S2CZaiXianReward implements IS2CZaiXianReward {

        /**
         * Constructs a new S2CZaiXianReward.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CZaiXianReward);

        /** S2CZaiXianReward id. */
        public id: number;

        /** S2CZaiXianReward errcode. */
        public errcode: number;

        /**
         * Creates a new S2CZaiXianReward instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CZaiXianReward instance
         */
        public static create(properties?: pb.IS2CZaiXianReward): pb.S2CZaiXianReward;

        /**
         * Encodes the specified S2CZaiXianReward message. Does not implicitly {@link pb.S2CZaiXianReward.verify|verify} messages.
         * @param message S2CZaiXianReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CZaiXianReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CZaiXianReward message, length delimited. Does not implicitly {@link pb.S2CZaiXianReward.verify|verify} messages.
         * @param message S2CZaiXianReward message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CZaiXianReward, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CZaiXianReward message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CZaiXianReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CZaiXianReward;

        /**
         * Decodes a S2CZaiXianReward message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CZaiXianReward
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CZaiXianReward;

        /**
         * Verifies a S2CZaiXianReward message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CZaiXianReward message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CZaiXianReward
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CZaiXianReward;

        /**
         * Creates a plain object from a S2CZaiXianReward message. Also converts values to other types if specified.
         * @param message S2CZaiXianReward
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CZaiXianReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CZaiXianReward to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ZaiXianData. */
    interface IZaiXianData {

        /** ZaiXianData id */
        id?: (number|null);

        /** ZaiXianData title */
        title?: (string|null);

        /** ZaiXianData time */
        time?: (string|null);

        /** ZaiXianData reward */
        reward?: (pb.IId2Val[]|null);

        /** ZaiXianData state */
        state?: (number|null);
    }

    /** Represents a ZaiXianData. */
    class ZaiXianData implements IZaiXianData {

        /**
         * Constructs a new ZaiXianData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IZaiXianData);

        /** ZaiXianData id. */
        public id: number;

        /** ZaiXianData title. */
        public title: string;

        /** ZaiXianData time. */
        public time: string;

        /** ZaiXianData reward. */
        public reward: pb.IId2Val[];

        /** ZaiXianData state. */
        public state: number;

        /**
         * Creates a new ZaiXianData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ZaiXianData instance
         */
        public static create(properties?: pb.IZaiXianData): pb.ZaiXianData;

        /**
         * Encodes the specified ZaiXianData message. Does not implicitly {@link pb.ZaiXianData.verify|verify} messages.
         * @param message ZaiXianData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IZaiXianData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ZaiXianData message, length delimited. Does not implicitly {@link pb.ZaiXianData.verify|verify} messages.
         * @param message ZaiXianData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IZaiXianData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ZaiXianData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ZaiXianData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ZaiXianData;

        /**
         * Decodes a ZaiXianData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ZaiXianData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ZaiXianData;

        /**
         * Verifies a ZaiXianData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ZaiXianData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ZaiXianData
         */
        public static fromObject(object: { [k: string]: any }): pb.ZaiXianData;

        /**
         * Creates a plain object from a ZaiXianData message. Also converts values to other types if specified.
         * @param message ZaiXianData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ZaiXianData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ZaiXianData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** ZaiXianRewardState enum. */
    enum ZaiXianRewardState {
        DSRS_NotInTime = 0,
        DSRS_InTime = 1,
        DSRS_Geted = 2
    }

    /** Properties of a C2SZhanJi. */
    interface IC2SZhanJi {

        /** C2SZhanJi tableId */
        tableId?: (number|null);
    }

    /** Represents a C2SZhanJi. */
    class C2SZhanJi implements IC2SZhanJi {

        /**
         * Constructs a new C2SZhanJi.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SZhanJi);

        /** C2SZhanJi tableId. */
        public tableId: number;

        /**
         * Creates a new C2SZhanJi instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SZhanJi instance
         */
        public static create(properties?: pb.IC2SZhanJi): pb.C2SZhanJi;

        /**
         * Encodes the specified C2SZhanJi message. Does not implicitly {@link pb.C2SZhanJi.verify|verify} messages.
         * @param message C2SZhanJi message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SZhanJi, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SZhanJi message, length delimited. Does not implicitly {@link pb.C2SZhanJi.verify|verify} messages.
         * @param message C2SZhanJi message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SZhanJi, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SZhanJi message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SZhanJi
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SZhanJi;

        /**
         * Decodes a C2SZhanJi message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SZhanJi
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SZhanJi;

        /**
         * Verifies a C2SZhanJi message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SZhanJi message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SZhanJi
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SZhanJi;

        /**
         * Creates a plain object from a C2SZhanJi message. Also converts values to other types if specified.
         * @param message C2SZhanJi
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SZhanJi, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SZhanJi to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2SZhanJiTableInfo. */
    interface IC2SZhanJiTableInfo {
    }

    /** Represents a C2SZhanJiTableInfo. */
    class C2SZhanJiTableInfo implements IC2SZhanJiTableInfo {

        /**
         * Constructs a new C2SZhanJiTableInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IC2SZhanJiTableInfo);

        /**
         * Creates a new C2SZhanJiTableInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2SZhanJiTableInfo instance
         */
        public static create(properties?: pb.IC2SZhanJiTableInfo): pb.C2SZhanJiTableInfo;

        /**
         * Encodes the specified C2SZhanJiTableInfo message. Does not implicitly {@link pb.C2SZhanJiTableInfo.verify|verify} messages.
         * @param message C2SZhanJiTableInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IC2SZhanJiTableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2SZhanJiTableInfo message, length delimited. Does not implicitly {@link pb.C2SZhanJiTableInfo.verify|verify} messages.
         * @param message C2SZhanJiTableInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IC2SZhanJiTableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2SZhanJiTableInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2SZhanJiTableInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.C2SZhanJiTableInfo;

        /**
         * Decodes a C2SZhanJiTableInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2SZhanJiTableInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.C2SZhanJiTableInfo;

        /**
         * Verifies a C2SZhanJiTableInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2SZhanJiTableInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2SZhanJiTableInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.C2SZhanJiTableInfo;

        /**
         * Creates a plain object from a C2SZhanJiTableInfo message. Also converts values to other types if specified.
         * @param message C2SZhanJiTableInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.C2SZhanJiTableInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2SZhanJiTableInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CZhanJiTableInfo. */
    interface IS2CZhanJiTableInfo {

        /** S2CZhanJiTableInfo tables */
        tables?: (pb.IZhanJiTable[]|null);
    }

    /** Represents a S2CZhanJiTableInfo. */
    class S2CZhanJiTableInfo implements IS2CZhanJiTableInfo {

        /**
         * Constructs a new S2CZhanJiTableInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CZhanJiTableInfo);

        /** S2CZhanJiTableInfo tables. */
        public tables: pb.IZhanJiTable[];

        /**
         * Creates a new S2CZhanJiTableInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CZhanJiTableInfo instance
         */
        public static create(properties?: pb.IS2CZhanJiTableInfo): pb.S2CZhanJiTableInfo;

        /**
         * Encodes the specified S2CZhanJiTableInfo message. Does not implicitly {@link pb.S2CZhanJiTableInfo.verify|verify} messages.
         * @param message S2CZhanJiTableInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CZhanJiTableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CZhanJiTableInfo message, length delimited. Does not implicitly {@link pb.S2CZhanJiTableInfo.verify|verify} messages.
         * @param message S2CZhanJiTableInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CZhanJiTableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CZhanJiTableInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CZhanJiTableInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CZhanJiTableInfo;

        /**
         * Decodes a S2CZhanJiTableInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CZhanJiTableInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CZhanJiTableInfo;

        /**
         * Verifies a S2CZhanJiTableInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CZhanJiTableInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CZhanJiTableInfo
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CZhanJiTableInfo;

        /**
         * Creates a plain object from a S2CZhanJiTableInfo message. Also converts values to other types if specified.
         * @param message S2CZhanJiTableInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CZhanJiTableInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CZhanJiTableInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2CZhanJi. */
    interface IS2CZhanJi {

        /** S2CZhanJi tableId */
        tableId?: (number|null);

        /** S2CZhanJi zhanJi */
        zhanJi?: (pb.IZhanJiData[]|null);
    }

    /** Represents a S2CZhanJi. */
    class S2CZhanJi implements IS2CZhanJi {

        /**
         * Constructs a new S2CZhanJi.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IS2CZhanJi);

        /** S2CZhanJi tableId. */
        public tableId: number;

        /** S2CZhanJi zhanJi. */
        public zhanJi: pb.IZhanJiData[];

        /**
         * Creates a new S2CZhanJi instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2CZhanJi instance
         */
        public static create(properties?: pb.IS2CZhanJi): pb.S2CZhanJi;

        /**
         * Encodes the specified S2CZhanJi message. Does not implicitly {@link pb.S2CZhanJi.verify|verify} messages.
         * @param message S2CZhanJi message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IS2CZhanJi, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2CZhanJi message, length delimited. Does not implicitly {@link pb.S2CZhanJi.verify|verify} messages.
         * @param message S2CZhanJi message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IS2CZhanJi, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2CZhanJi message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2CZhanJi
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.S2CZhanJi;

        /**
         * Decodes a S2CZhanJi message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2CZhanJi
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.S2CZhanJi;

        /**
         * Verifies a S2CZhanJi message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2CZhanJi message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2CZhanJi
         */
        public static fromObject(object: { [k: string]: any }): pb.S2CZhanJi;

        /**
         * Creates a plain object from a S2CZhanJi message. Also converts values to other types if specified.
         * @param message S2CZhanJi
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.S2CZhanJi, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2CZhanJi to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ZhanJiTable. */
    interface IZhanJiTable {

        /** ZhanJiTable tableId */
        tableId?: (number|null);

        /** ZhanJiTable name */
        name?: (string|null);
    }

    /** Represents a ZhanJiTable. */
    class ZhanJiTable implements IZhanJiTable {

        /**
         * Constructs a new ZhanJiTable.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IZhanJiTable);

        /** ZhanJiTable tableId. */
        public tableId: number;

        /** ZhanJiTable name. */
        public name: string;

        /**
         * Creates a new ZhanJiTable instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ZhanJiTable instance
         */
        public static create(properties?: pb.IZhanJiTable): pb.ZhanJiTable;

        /**
         * Encodes the specified ZhanJiTable message. Does not implicitly {@link pb.ZhanJiTable.verify|verify} messages.
         * @param message ZhanJiTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IZhanJiTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ZhanJiTable message, length delimited. Does not implicitly {@link pb.ZhanJiTable.verify|verify} messages.
         * @param message ZhanJiTable message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IZhanJiTable, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ZhanJiTable message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ZhanJiTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ZhanJiTable;

        /**
         * Decodes a ZhanJiTable message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ZhanJiTable
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ZhanJiTable;

        /**
         * Verifies a ZhanJiTable message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ZhanJiTable message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ZhanJiTable
         */
        public static fromObject(object: { [k: string]: any }): pb.ZhanJiTable;

        /**
         * Creates a plain object from a ZhanJiTable message. Also converts values to other types if specified.
         * @param message ZhanJiTable
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ZhanJiTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ZhanJiTable to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ZhanJiData. */
    interface IZhanJiData {

        /** ZhanJiData id */
        id?: (number|Long|null);

        /** ZhanJiData tableId */
        tableId?: (number|null);

        /** ZhanJiData winLose */
        winLose?: (number|null);

        /** ZhanJiData coin */
        coin?: (number|Long|null);

        /** ZhanJiData duanWei */
        duanWei?: (number|null);

        /** ZhanJiData time */
        time?: (number|Long|null);
    }

    /** Represents a ZhanJiData. */
    class ZhanJiData implements IZhanJiData {

        /**
         * Constructs a new ZhanJiData.
         * @param [properties] Properties to set
         */
        constructor(properties?: pb.IZhanJiData);

        /** ZhanJiData id. */
        public id: (number|Long);

        /** ZhanJiData tableId. */
        public tableId: number;

        /** ZhanJiData winLose. */
        public winLose: number;

        /** ZhanJiData coin. */
        public coin: (number|Long);

        /** ZhanJiData duanWei. */
        public duanWei: number;

        /** ZhanJiData time. */
        public time: (number|Long);

        /**
         * Creates a new ZhanJiData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ZhanJiData instance
         */
        public static create(properties?: pb.IZhanJiData): pb.ZhanJiData;

        /**
         * Encodes the specified ZhanJiData message. Does not implicitly {@link pb.ZhanJiData.verify|verify} messages.
         * @param message ZhanJiData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: pb.IZhanJiData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ZhanJiData message, length delimited. Does not implicitly {@link pb.ZhanJiData.verify|verify} messages.
         * @param message ZhanJiData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: pb.IZhanJiData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ZhanJiData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ZhanJiData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): pb.ZhanJiData;

        /**
         * Decodes a ZhanJiData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ZhanJiData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): pb.ZhanJiData;

        /**
         * Verifies a ZhanJiData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ZhanJiData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ZhanJiData
         */
        public static fromObject(object: { [k: string]: any }): pb.ZhanJiData;

        /**
         * Creates a plain object from a ZhanJiData message. Also converts values to other types if specified.
         * @param message ZhanJiData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: pb.ZhanJiData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ZhanJiData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace google. */